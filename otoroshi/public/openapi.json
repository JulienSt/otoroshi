{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Otoroshi Admin API",
    "description" : "Admin API of the Otoroshi reverse proxy",
    "version" : "1.5.0-dev",
    "contact" : {
      "name" : "Otoroshi Team",
      "email" : "oss@maif.fr"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs" : {
    "url" : "https://www.otoroshi.io",
    "description" : "everything about otoroshi"
  },
  "servers" : [ {
    "url" : "http://otoroshi-api.oto.tools:8080",
    "description" : "your local otoroshi server"
  } ],
  "tags" : [ {
    "name" : "admin-sessions",
    "description" : "All api endpoints about admin-session"
  }, {
    "name" : "admins",
    "description" : "All api endpoints about admins"
  }, {
    "name" : "analytics",
    "description" : "All api endpoints about analytics"
  }, {
    "name" : "apikeys",
    "description" : "All api endpoints about apikeys"
  }, {
    "name" : "apps-sessions",
    "description" : "All api endpoints about apps-sessions"
  }, {
    "name" : "auth-modules",
    "description" : "All api endpoints about auth-modules"
  }, {
    "name" : "certificates",
    "description" : "All api endpoints about certificates"
  }, {
    "name" : "cluster",
    "description" : "All api endpoints about cluster"
  }, {
    "name" : "data-exporters",
    "description" : "All api endpoints about data-exporters"
  }, {
    "name" : "events",
    "description" : "All api endpoints about events"
  }, {
    "name" : "experimental",
    "description" : "All experimental endpoints"
  }, {
    "name" : "globalconfig",
    "description" : "All api endpoints about globalconfig"
  }, {
    "name" : "groups",
    "description" : "All api endpoints about groups"
  }, {
    "name" : "import-export",
    "description" : "All api endpoints about import-export"
  }, {
    "name" : "jwt-verifiers",
    "description" : "All api endpoints about jwt-verifiers"
  }, {
    "name" : "lines",
    "description" : "All api endpoints about lines"
  }, {
    "name" : "live",
    "description" : "All api endpoints about live"
  }, {
    "name" : "organizations",
    "description" : "All api endpoints about organizations"
  }, {
    "name" : "pki",
    "description" : "All api endpoints about pki"
  }, {
    "name" : "privateapps",
    "description" : "All api endpoints about privateapps"
  }, {
    "name" : "scripts",
    "description" : "All api endpoints about scripts"
  }, {
    "name" : "services",
    "description" : "All api endpoints about services"
  }, {
    "name" : "snowmonkey",
    "description" : "All api endpoints about snowmonkey"
  }, {
    "name" : "tcp",
    "description" : "All api endpoints about tcp"
  }, {
    "name" : "teams",
    "description" : "All api endpoints about teams"
  }, {
    "name" : "templates",
    "description" : "All api endpoints about templates "
  } ],
  "paths" : {
    "/api/stats" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Statistic for a service, apikey or group",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.filterableStats",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/stats/global" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Global statistic for your services",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.globalStats",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/stats" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Statistics for a service",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceStats",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_template" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Creates a new Script from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateScript",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_list" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Search plugins based on type of plugin",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.findAllScriptsList",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScriptsList"
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Register a webauthn admin user",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.registerWebAuthnAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.WebAuthnOtoroshiAdmin"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.WebAuthnOtoroshiAdmin"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Returns all webauthn admin",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.webAuthnAdmins",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WebauthnAdminList"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/status" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Statis for a group of services over time",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.groupStatus",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the groupId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}" : {
      "patch" : {
        "tags" : [ "teams" ],
        "summary" : "Updates (using json-patch) a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Team"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Find a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "teams" ],
        "summary" : "Deletes a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "teams" ],
        "summary" : "Updates a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Team"
              }
            }
          }
        }
      }
    },
    "/api/teams" : {
      "post" : {
        "tags" : [ "teams" ],
        "summary" : "Creates a Team",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Team"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Find all possible Teams entities",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.Team"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/_bulk" : {
      "patch" : {
        "tags" : [ "teams" ],
        "summary" : "Update (using json-patch) multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "teams" ],
        "summary" : "Create multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "teams" ],
        "summary" : "Delete multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "teams" ],
        "summary" : "Update multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/targets" : {
      "patch" : {
        "tags" : [ "services" ],
        "summary" : "Update the target of the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.updateServiceTargets",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Target"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Target"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Adds a target to the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceAddTarget",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Target"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Target"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get targets of the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceTargets",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetsList"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Deletes a target to the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceDeleteTarget",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/forms" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Return all plugins config form spec",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.forms",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/{id}" : {
      "patch" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Updates (using json-patch) a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Find a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Deletes a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Updates a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "The form description of the current controllers entity",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExperimentalFormResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cluster/members" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "Get cluster members statistics",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.getClusterMembers",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "cluster" ],
        "summary" : "Clear cluster members from members statistics",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.clearClusterMembers",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "The form description of the current controllers entity",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExperimentalFormResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a new template for a target",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.initiateStoredNgTarget",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/_bulk" : {
      "patch" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Update (using json-patch) multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Create multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Delete multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Update multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/plugins/categories" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Returns all possible plugins categories",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.categories",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringList"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts" : {
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Creates a otoroshi.script.Script",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.script.Script"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Find all possible otoroshi.script.Scripts entities",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.script.Script"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/privateapps/sessions/{id}/{username}" : {
      "post" : {
        "tags" : [ "privateapps" ],
        "summary" : "Registers a private app session",
        "operationId" : "otoroshi.controllers.PrivateAppsController.registerSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        }, {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/cluster/sessions/{id}" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to create a distributed private apps session between worker and leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.isSessionValid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.PrivateAppsUser"
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/_bulk" : {
      "patch" : {
        "tags" : [ "apikeys" ],
        "summary" : "Update (using json-patch) multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "apikeys" ],
        "summary" : "Create multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apikeys" ],
        "summary" : "Delete multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "apikeys" ],
        "summary" : "Update multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps-sessions/{id}" : {
      "delete" : {
        "tags" : [ "apps-sessions" ],
        "summary" : "Discard a specific private apps session",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardPrivateAppsSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/services" : {
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Creates a ServiceDescriptor",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Find all possible ServiceDescriptors entities",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants" : {
      "post" : {
        "tags" : [ "organizations" ],
        "summary" : "Creates a Tenant",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Tenant"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "organizations" ],
        "summary" : "Find all possible Tenants entities",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/new/service" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new Service from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateService_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/config" : {
      "patch" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Updates (using json-patch) the snowmonkey configuration",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.patchSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SnowMonkeyConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchBody"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Get the snowmonkey config",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.getSnowMonkeyConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SnowMonkeyConfig"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Updates the snowmonkey configuration",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.updateSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SnowMonkeyConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.SnowMonkeyConfig"
              }
            }
          }
        }
      }
    },
    "/api/globalconfig/_template" : {
      "get" : {
        "tags" : [ "globalconfig" ],
        "summary" : "Creates a new GlobalConfig from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateGlobalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/alert/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "Get all events of type AlertEvent",
        "operationId" : "otoroshi.controllers.adminapi.EventsController.alertEvents",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AlertEventList"
                }
              }
            }
          }
        }
      }
    },
    "/api/lines/{line}/services" : {
      "get" : {
        "tags" : [ "lines" ],
        "summary" : "Get all service for a line of work",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.servicesForALine",
        "parameters" : [ {
          "name" : "line",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The line param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceDescriptorList"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
              }
            }
          }
        }
      }
    },
    "/api/groups" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Creates a ServiceGroup",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Find all possible ServiceGroups entities",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/plugins/steps" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Returns all possible plugins steps",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.steps",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringList"
                }
              }
            }
          }
        }
      }
    },
    "/api/{entity}/_template" : {
      "post" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_templates",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the entity parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
              }
            }
          }
        }
      }
    },
    "/api/pki/cas/{ca}/cas" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a sub-CA",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genSubCA",
        "parameters" : [ {
          "name" : "ca",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the ca parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCertResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
              }
            }
          }
        }
      }
    },
    "/api/verifiers/{id}" : {
      "patch" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Updates (using json-patch) a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Find a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Deletes a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Updates a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Generates a new backend template",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.initiateStoredNgBackend",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-sessions/{id}" : {
      "delete" : {
        "tags" : [ "admin-sessions" ],
        "summary" : "Discard a specific admin session (otoroshi-ui)",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/tcp/_template" : {
      "get" : {
        "tags" : [ "tcp" ],
        "summary" : "Creates a new TcpService from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTcpService_tcp",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/global" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Global status of your services",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.globalStatus",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/_bulk" : {
      "patch" : {
        "tags" : [ "services" ],
        "summary" : "Update (using json-patch) multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Create multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Delete multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Update multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/outages" : {
      "get" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Get the current snowmonkey outages",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.getSnowMonkeyOutages",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/OutagesList"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Reset the snowmonkey outages",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.resetSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs/_bulk" : {
      "patch" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Update (using json-patch) multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Create multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Delete multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Update multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a new template for a service",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.initiateService",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/_bulk" : {
      "patch" : {
        "tags" : [ "organizations" ],
        "summary" : "Update (using json-patch) multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "organizations" ],
        "summary" : "Create multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "organizations" ],
        "summary" : "Delete multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "organizations" ],
        "summary" : "Update multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/_bundle" : {
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "Import PEM bundle as otoroshi certificates",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.importBundle",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PemCertificateBody"
              }
            }
          }
        }
      }
    },
    "/api/cluster/state" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to get internal state from a leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.internalState",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        }
      }
    },
    "/api/new/resources" : {
      "post" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new Resources from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateResources",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_p12" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Import de .p12 file as client certificates",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.importCertFromP12",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ByteStreamBody"
              }
            }
          }
        }
      }
    },
    "/api/pki/keys" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a keypair",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genKeyPair",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenKeyPairResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenKeyPairQuery"
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "The form description of the current controllers entity",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExperimentalFormResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/otoroshi.json" : {
      "post" : {
        "tags" : [ "import-export" ],
        "summary" : "Import the content of the otoroshi datastore (json)",
        "operationId" : "otoroshi.controllers.adminapi.ImportExportController.fullImport",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GlobalConfigImportBody"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "import-export" ],
        "summary" : "Export all the content of the otoroshi datastore",
        "operationId" : "otoroshi.controllers.adminapi.ImportExportController.fullExport",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths" : {
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Creates a AuthModuleConfig",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Find all possible AuthModuleConfigs entities",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn/_template" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_webauthn",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.OtoroshiAdmin"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new WebauthnAdmin from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateWebauthnAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{id}" : {
      "patch" : {
        "tags" : [ "groups" ],
        "summary" : "Updates (using json-patch) a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Find a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "summary" : "Deletes a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Updates a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{id}" : {
      "patch" : {
        "tags" : [ "organizations" ],
        "summary" : "Updates (using json-patch) a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Tenant"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "organizations" ],
        "summary" : "Find a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "organizations" ],
        "summary" : "Deletes a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "organizations" ],
        "summary" : "Updates a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Tenant"
              }
            }
          }
        }
      }
    },
    "/api/live" : {
      "get" : {
        "tags" : [ "live" ],
        "summary" : "Get global live statis",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.globalLiveStats",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
              }
            }
          }
        }
      }
    },
    "/api/experimental/frontends/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "The form description of the current controllers entity",
        "operationId" : "otoroshi.next.controllers.adminapi.NgFrontendsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExperimentalFormResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn/{username}/{id}" : {
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Deletes a webauthn admin",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.webAuthnDeleteAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        }, {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a NgRoute",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible NgRoutes entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/import" : {
      "post" : {
        "tags" : [ "import-export" ],
        "summary" : "Import the content of the otoroshi datastore (file)",
        "operationId" : "otoroshi.controllers.adminapi.ImportExportController.fullImportFromFile",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GlobalConfigImportBody"
              }
            }
          }
        }
      }
    },
    "/api/pki/cas" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a self signed CA",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genSelfSignedCA",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCertResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
              }
            }
          }
        }
      }
    },
    "/api/cluster/relay" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.relayRouting",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "description" : "unknown type",
                  "type" : "object"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "description" : "unknown type",
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "/api/scripts/{id}" : {
      "patch" : {
        "tags" : [ "scripts" ],
        "summary" : "Updates (using json-patch) a specific otoroshi.script.Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.script.Script"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Find a specific otoroshi.script.Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "scripts" ],
        "summary" : "Deletes a specific otoroshi.script.Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "scripts" ],
        "summary" : "Updates a specific otoroshi.script.Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.script.Script"
              }
            }
          }
        }
      }
    },
    "/api/events" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Events for a service, apikey or group",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.filterableEvents",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/certs" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a self signed certificates",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genSelfSignedCert",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCertResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
              }
            }
          }
        }
      }
    },
    "/api/new/tcp/service" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new TcpService from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTcpService_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/{id}/register/finish" : {
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Finishes the registration of a user",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.finishRegistration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthnRegistrationFinishBody"
              }
            }
          }
        }
      }
    },
    "/api/new/group" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new ServiceGroup from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateServiceGroup_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/tcp/services/_template" : {
      "post" : {
        "tags" : [ "tcp" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_tcp",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/tcp/services/_bulk" : {
      "patch" : {
        "tags" : [ "tcp" ],
        "summary" : "Update (using json-patch) multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "tcp" ],
        "summary" : "Create multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "tcp" ],
        "summary" : "Delete multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "tcp" ],
        "summary" : "Update multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/_template" : {
      "get" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Creates a new AuthModule from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateAuthModule",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/tcp/services" : {
      "post" : {
        "tags" : [ "tcp" ],
        "summary" : "Creates a TcpService",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "tcp" ],
        "summary" : "Find all possible TcpServices entities",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/verifiers/_template" : {
      "get" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Creates a new JwtVerifier from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateJwtVerifier",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      }
    },
    "/api/globalconfig" : {
      "patch" : {
        "tags" : [ "globalconfig" ],
        "summary" : "Update (with json-patch) the global config",
        "operationId" : "otoroshi.controllers.adminapi.GlobalConfigController.patchGlobalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PatchBody"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "globalconfig" ],
        "summary" : "Get the global config",
        "operationId" : "otoroshi.controllers.adminapi.GlobalConfigController.globalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalConfig"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "globalconfig" ],
        "summary" : "Update the global config",
        "operationId" : "otoroshi.controllers.adminapi.GlobalConfigController.updateGlobalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalConfig"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/response" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Response time statistics for a service",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceResponseTime",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/new/apikey" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new ApiKey from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateApiKey_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/{id}" : {
      "patch" : {
        "tags" : [ "apikeys" ],
        "summary" : "Updates (using json-patch) a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Find a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apikeys" ],
        "summary" : "Deletes a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "apikeys" ],
        "summary" : "Updates a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_data" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Extract data from a certificate",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.certificateData",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PemCertificateBody"
              }
            }
          }
        }
      }
    },
    "/api/cluster/quotas" : {
      "put" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to push quotas usage from a worker to a leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.updateQuotas",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateQuotasBody"
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn/{username}" : {
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "Updates a webauthn admin",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.updateWebAuthnAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.WebAuthnOtoroshiAdmin"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.WebAuthnOtoroshiAdmin"
              }
            }
          }
        }
      }
    },
    "/api/groups/_bulk" : {
      "patch" : {
        "tags" : [ "groups" ],
        "summary" : "Update (using json-patch) multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Create multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "summary" : "Delete multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Update multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "The form description of the current controllers entity",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExperimentalFormResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a NgService",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible NgServices entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/live" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get live stats for a specific service",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.serviceLiveStats_services",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_bulk" : {
      "patch" : {
        "tags" : [ "scripts" ],
        "summary" : "Update (using json-patch) multiple otoroshi.script.Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Create multiple otoroshi.script.Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "scripts" ],
        "summary" : "Delete multiple otoroshi.script.Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "scripts" ],
        "summary" : "Update multiple otoroshi.script.Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs/{id}" : {
      "patch" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Updates (using json-patch) a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Find a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Deletes a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Updates a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
              }
            }
          }
        }
      }
    },
    "/api/pki/csrs" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a CSR",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genCsr",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
              }
            }
          }
        }
      }
    },
    "/api/groups/_template" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Creates a new ServiceGroup from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateServiceGroup_groups",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/verifiers" : {
      "post" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Creates a GlobalJwtVerifier",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Find all possible GlobalJwtVerifiers entities",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/simple/{username}" : {
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "Deletes an admin",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.deleteAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "Updates an admin",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.updateAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs" : {
      "post" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Creates a DataExporterConfig",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Find all possible DataExporterConfigs entities",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs/_template" : {
      "get" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Creates a new DataExporterConfig from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateDataExporterConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a new template for a route",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.initiateRoute",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/_template" : {
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Creates a new Team from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTeam",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-sessions" : {
      "get" : {
        "tags" : [ "admin-sessions" ],
        "summary" : "Returns all admin sessions",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.sessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.BackOfficeUser"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "admin-sessions" ],
        "summary" : "Discard all admin sessions (otoroshi-ui)",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardAllSessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/simple/_template" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_simple",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.OtoroshiAdmin"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new SimpleAdmin from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateSimpleAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/{id}" : {
      "patch" : {
        "tags" : [ "certificates" ],
        "summary" : "Updates (using json-patch) a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "certificates" ],
        "summary" : "Find a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "certificates" ],
        "summary" : "Deletes a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "certificates" ],
        "summary" : "Updates a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      }
    },
    "/api/cluster/user-tokens/{id}" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to get a distributed login token between worker and leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.getUserToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/_start" : {
      "post" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Start the snowmonkey of all otoroshi instances",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.startSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/experimental/plugins/all" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Return all plugins descriptions",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.plugins",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/_template" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "Returns a template that extract possible fields out of a Gateway event",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.templateSpec",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{id}" : {
      "patch" : {
        "tags" : [ "services" ],
        "summary" : "Updates (using json-patch) a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Find a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Deletes a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Updates a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
              }
            }
          }
        }
      }
    },
    "/api/apikeys" : {
      "post" : {
        "tags" : [ "apikeys" ],
        "summary" : "Creates a ApiKey",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Find all possible ApiKeys entities",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/cas/{ca}/certs" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a certificate",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genCert",
        "parameters" : [ {
          "name" : "ca",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the ca parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCertResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/events" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Events for a service",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceEvents",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/_template" : {
      "get" : {
        "tags" : [ "certificates" ],
        "summary" : "Creates a new Certificate from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateCertificate",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "Get all events of type AuditEvent",
        "operationId" : "otoroshi.controllers.adminapi.EventsController.auditEvents",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuditEventList"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/_stop" : {
      "post" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "Stop the snowmonkey of all otoroshi instances",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.stopSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/experimental/forms/_single" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Return a plugin config form spec",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/_bulk" : {
      "patch" : {
        "tags" : [ "certificates" ],
        "summary" : "Update (using json-patch) multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "Create multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "certificates" ],
        "summary" : "Delete multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "certificates" ],
        "summary" : "Update multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/_template" : {
      "get" : {
        "tags" : [ "organizations" ],
        "summary" : "Creates a new Tenant from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTenant",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/health" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get healthcheck status for the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceHealth",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthCheckEventList"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/canary" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get members of a canary campaign",
        "operationId" : "otoroshi.controllers.adminapi.CanaryController.serviceCanaryMembers",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Reset members of a canary campaign",
        "operationId" : "otoroshi.controllers.adminapi.CanaryController.resetServiceCanaryMembers",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/live/host" : {
      "get" : {
        "tags" : [ "live" ],
        "summary" : "Get local host metrics",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.hostMetrics",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HostMetrics"
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_valid" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Check if a certificate is valid (based on its own data)",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.certificateIsValid",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CertValidResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      }
    },
    "/api/cluster/live" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to get cluster statistics",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.liveCluster",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates" : {
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "Creates a Cert",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "certificates" ],
        "summary" : "Find all possible Certs entities",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/{id}/quotas" : {
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Consumed quotas for a specific apikey",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.apiKeyQuotas",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.RemainingQuotas"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apikeys" ],
        "summary" : "Reset quotas consumption for an apikey",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.resetApiKeyQuotas",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.RemainingQuotas"
                }
              }
            }
          }
        }
      }
    },
    "/api/cluster/user-tokens" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to set a distributed login token between worker and leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.setUserToken",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserTokenBody"
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_letencrypt" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Generates a certificates using Let's Encrypt or any ACME compatible system",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genLetsEncryptCert",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCertResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LetsEncryptCertBody"
              }
            }
          }
        }
      }
    },
    "/api/live/{id}" : {
      "get" : {
        "tags" : [ "live" ],
        "summary" : "Get live stats for a specific service",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.serviceLiveStats_live",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LiveStats"
                }
              }
            }
          }
        }
      }
    },
    "/api/verifiers/_bulk" : {
      "patch" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Update (using json-patch) multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Create multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Delete multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Update multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      }
    },
    "/api/lines" : {
      "get" : {
        "tags" : [ "lines" ],
        "summary" : "Get all lines of work (prod, preprod, etc)",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.allLines",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StringList"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps-sessions" : {
      "get" : {
        "tags" : [ "apps-sessions" ],
        "summary" : "Return all private apps sessions",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.privateAppsSessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.PrivateAppsUser"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apps-sessions" ],
        "summary" : "Discard all private apps sessions",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardAllPrivateAppsSessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/_template" : {
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Creates a new ApiKey from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateApiKey_apikeys",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a StoredNgBackend",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible StoredNgBackends entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{id}/services" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Get the services from a service group",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.serviceGroupServices",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ServiceDescriptorList"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a StoredNgTarget",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible StoredNgTargets entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/template" : {
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Creates an error template for the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.createServiceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ErrorTemplate"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ErrorTemplate"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Get the error template for the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorTemplateList"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Deletes the error template for the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.deleteServiceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Done"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Update the error template of the current service",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.updateServiceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ErrorTemplate"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ErrorTemplate"
              }
            }
          }
        }
      }
    },
    "/api/status" : {
      "post" : {
        "tags" : [ "analytics" ],
        "summary" : "Status for some/all services over time",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.servicesStatus",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceDescriptorList"
              }
            }
          }
        }
      }
    },
    "/api/privateapps/sessions/send/{id}/{username}" : {
      "post" : {
        "tags" : [ "privateapps" ],
        "summary" : "Send an email to a user to update its own settings",
        "operationId" : "otoroshi.controllers.PrivateAppsController.sendSelfUpdateLink",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        }, {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Empty"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/admins/simple" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Register an admin user",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.registerSimpleAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Returns all admins",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.simpleAdmins",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SimpleAdminList"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/{id}/register/start" : {
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Stats the registration of a user",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.startRegistration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/WebAuthnRegistrationStartBody"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/status" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Status of a service over time",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceStatus",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_openapi" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Generates a service based on an openapi spec.",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.fromOpenapi",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServiceFromOpenApiBody"
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_compile" : {
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Trigger script compilation of the server",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.compileScript",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Any"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/CodeBody"
              }
            }
          }
        }
      }
    },
    "/api/experimental/certificates/_by_domain" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Experimental payload",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.domainsAndCertificates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/cas/{ca}/certs/_sign" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "Sign a certificate based on a CSR",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.signCert",
        "parameters" : [ {
          "name" : "ca",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the ca parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.SignCertResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PemCsrBody"
              }
            }
          }
        }
      }
    },
    "/api/cluster/login-tokens/{id}" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to create a distributed login token between worker and leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.createLoginToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to check a distributed login token between worker and leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.isLoginTokenValid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TokenResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/{certId}/_renew" : {
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "Renew a certificates with the same attributes as the original one",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.renewCert",
        "parameters" : [ {
          "name" : "certId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The certId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Empty"
              }
            }
          }
        }
      }
    },
    "/api/tcp/services/{id}" : {
      "patch" : {
        "tags" : [ "tcp" ],
        "summary" : "Updates (using json-patch) a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "tcp" ],
        "summary" : "Find a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "tcp" ],
        "summary" : "Deletes a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "tcp" ],
        "summary" : "Updates a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
              }
            }
          }
        }
      }
    },
    "/api/services/_template" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Creates a new Service from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateService_services",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      }
    },
    "/api/cluster/sessions" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "Api to create a distributed private apps session between worker and leader",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.createSession",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.PrivateAppsUser"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.PrivateAppsUser"
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "otoroshi.models.ElasticAnalyticsConfig" : {
        "description" : "Settings for connection to an elastic cluster",
        "type" : "object",
        "properties" : {
          "clusterUri" : {
            "description" : "Cluster URL",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Additionnal headers in the http request"
          },
          "password" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Elastic password"
          },
          "indexSettings" : {
            "description" : "Indexation settings",
            "$ref" : "#/components/schemas/otoroshi.models.IndexSettings"
          },
          "mtlsConfig" : {
            "description" : "TLS settings for the http client",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "index" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Index name"
          },
          "type" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Object type",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "applyTemplate" : {
            "description" : "Enable template creation/update",
            "type" : "boolean"
          },
          "version" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Version of Elasticsearch"
          },
          "user" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Elasticsearch user"
          }
        }
      },
      "otoroshi.models.CorsSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowCredentials" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maxAge" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "number"
            } ],
            "description" : "???"
          },
          "allowMethods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allowHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "exposeHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allowOrigin" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.LargeResponseFaultConfig" : {
        "description" : "Settings for a large response fault (chaos engineering)",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
            "type" : "number"
          },
          "additionalResponseSize" : {
            "format" : "int32",
            "description" : "Add n 0 bytes",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.MappingSettings" : {
        "description" : "Settings to transform a jwt token",
        "type" : "object",
        "properties" : {
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Change values"
          },
          "values" : {
            "description" : "Add values",
            "type" : "object"
          },
          "remove" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Remove some token claims"
          }
        }
      },
      "otoroshi.models.VerificationSettings" : {
        "description" : "jwt token verification settings",
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Fields validation"
          },
          "arrayFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Fields array validation"
          }
        }
      },
      "otoroshi.next.models.NgMinimalRoute" : {
        "description" : "A route representation with it's minimal attributes",
        "type" : "object",
        "properties" : {
          "backend_ref" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "The backend id of the route (if one)"
          },
          "frontend" : {
            "description" : "The frontend of the route",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgFrontend"
          },
          "override_plugins" : {
            "description" : "Override global plugin list from route composition",
            "type" : "boolean"
          },
          "backend" : {
            "description" : "The backend of the route",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgMinimalBackend"
          }
        }
      },
      "otoroshi.next.plugins.W3CTracingConfigKind" : {
        "description" : "Configuration for W3CTracing",
        "type" : "string",
        "enum" : [ "jaeger", "zipkin", "logger", "noop" ]
      },
      "otoroshi.models.TeamId" : {
        "type" : "string",
        "description" : "team id"
      },
      "WebauthnAdminList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.models.WebAuthnOtoroshiAdmin"
        }
      },
      "otoroshi.models.RegionMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          },
          "region" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "ErrorTemplateList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.models.ErrorTemplate"
        }
      },
      "otoroshi.utils.http.MtlsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "mtls" : {
            "description" : "???",
            "type" : "boolean"
          },
          "loose" : {
            "description" : "???",
            "type" : "boolean"
          },
          "trustAll" : {
            "description" : "???",
            "type" : "boolean"
          },
          "trustedCerts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "certs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.RefJwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "type" : {
            "description" : "the kind of verifier",
            "type" : "string",
            "enum" : [ "global", "local", "ref" ]
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "TokenResponse" : {
        "type" : "object",
        "description" : "User login token response",
        "properties" : {
          "valid" : {
            "type" : "string"
          }
        }
      },
      "ScriptsList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.script.Script"
        }
      },
      "otoroshi.models.WeightedBestResponseTime" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "LetsEncryptCertBody" : {
        "type" : "object",
        "description" : "PEM encoded certificate"
      },
      "otoroshi.models.CustomTimeouts" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "callAndStreamTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "callTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "idleTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "globalTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "connectionTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.BasicAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "headerName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "queryName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.Transform" : {
        "description" : "jwt token transformation policy settings",
        "type" : "object",
        "properties" : {
          "transformSettings" : {
            "description" : "Transformation settings",
            "$ref" : "#/components/schemas/otoroshi.models.TransformSettings"
          },
          "algoSettings" : {
            "description" : "Algorithm settings for re-signing token",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "verificationSettings" : {
            "description" : "Verification settings",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          },
          "type" : {
            "description" : "the kind of strategy",
            "type" : "string",
            "enum" : [ "PassThrough", "Sign", "Transform", "DefaultToken" ]
          }
        }
      },
      "otoroshi.models.KidAlgoSettings" : {
        "description" : "Settings to find keypair based on header kid for verification",
        "type" : "object",
        "properties" : {
          "onlyExposedCerts" : {
            "description" : "Use only exposed certs",
            "type" : "boolean"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          }
        }
      },
      "otoroshi.models.AlwaysMatch" : {
        "type" : "object",
        "description" : "Always select target",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Always" ]
          }
        }
      },
      "otoroshi.models.TenantId" : {
        "type" : "string",
        "description" : "organization id"
      },
      "Done" : {
        "type" : "object",
        "description" : "operation is done",
        "properties" : {
          "done" : {
            "type" : "boolean"
          }
        }
      },
      "UserTokenBody" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.mailer.MailgunSettings" : {
        "description" : "Settings for the mailgun mailer",
        "type" : "object",
        "properties" : {
          "eu" : {
            "description" : "European tenant",
            "type" : "boolean"
          },
          "apiKey" : {
            "description" : "Mailgun apikey",
            "type" : "string"
          },
          "domain" : {
            "description" : "Mailgun domain",
            "type" : "string"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "Destination email address"
          },
          "type" : {
            "description" : "the kind of mailer",
            "type" : "string",
            "enum" : [ "none", "console", "generic", "mailgun", "mailjet", "sendgrid" ]
          }
        }
      },
      "otoroshi.models.FileSettings" : {
        "description" : "Settings to export to a file",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "File path",
            "type" : "string"
          },
          "maxFileSize" : {
            "format" : "int64",
            "description" : "Max file size for rolling",
            "type" : "integer"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          }
        }
      },
      "otoroshi.models.InfraProviderMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "provider" : {
            "description" : "???",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          }
        }
      },
      "otoroshi.models.Exporter" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.events.KafkaConfig"
        }, {
          "$ref" : "#/components/schemas/otoroshi.events.PulsarConfig"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.ConsoleSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.ElasticAnalyticsConfig"
        }, {
          "$ref" : "#/components/schemas/Null"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.ExporterRef"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.FileSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.MetricsSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.Webhook"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.ConsoleMailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.GenericMailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailgunSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailjetSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.NoneMailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.SendgridSettings"
        } ]
      },
      "otoroshi.plugins.discovery.SelfRegistrationConfig" : {
        "description" : "Configuration for the DiscoverySelfRegistrationTransformer plugin",
        "type" : "object",
        "properties" : {
          "registrationTtl" : {
            "description" : "the ttl for a service registration",
            "type" : "number"
          },
          "targetTemplate" : {
            "description" : "A json template for otoroshi target",
            "type" : "object"
          },
          "hosts" : {
            "description" : "The possible list of hosts for a service",
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "otoroshi.models.QuotasAlmostExceededSettings" : {
        "description" : "Settings for apikey quotas alerts",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "Is quotas alert enabled",
            "type" : "boolean"
          },
          "dailyQuotasThreshold" : {
            "format" : "double",
            "description" : "The daily quotas threshold before generating alert",
            "type" : "number"
          },
          "monthlyQuotasThreshold" : {
            "format" : "double",
            "description" : "The monthly quotas threshold before generating alert",
            "type" : "number"
          }
        }
      },
      "otoroshi.models.Team" : {
        "description" : "An otoroshi model for a team of users in the organization (otoroshi-ui)",
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "name" : {
            "description" : "Entity name",
            "type" : "string"
          },
          "description" : {
            "description" : "Entity description",
            "type" : "string"
          },
          "tenant" : {
            "description" : "Entity organization",
            "$ref" : "#/components/schemas/otoroshi.models.TenantId"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "id" : {
            "description" : "Entity id",
            "$ref" : "#/components/schemas/otoroshi.models.TeamId"
          }
        }
      },
      "otoroshi.models.ChaosConfig" : {
        "description" : "Settings to enable chaos engineering for a service",
        "type" : "object",
        "properties" : {
          "badResponsesFaultConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.BadResponsesFaultConfig"
            } ],
            "description" : "Settings for bad responses"
          },
          "largeRequestFaultConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.LargeRequestFaultConfig"
            } ],
            "description" : "Settings for large requests"
          },
          "largeResponseFaultConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.LargeResponseFaultConfig"
            } ],
            "description" : "Settings for large responses"
          },
          "latencyInjectionFaultConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.LatencyInjectionFaultConfig"
            } ],
            "description" : "Settings for latency injection"
          },
          "enabled" : {
            "description" : "Whether or not this config is enabled",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.authcallers.OAuth2Kind" : {
        "description" : "The kind of oauth2 flow",
        "type" : "string",
        "enum" : [ "client_credentials", "password" ]
      },
      "otoroshi.models.SecComVersion" : {
        "type" : "string",
        "enum" : [ "V1", "v2" ],
        "description" : "Version of the challenge token"
      },
      "otoroshi.models.TransformSettings" : {
        "description" : "jwt token transformation settings",
        "type" : "object",
        "properties" : {
          "location" : {
            "description" : "Location of the token",
            "$ref" : "#/components/schemas/otoroshi.models.JwtTokenLocation"
          },
          "mappingSettings" : {
            "description" : "Token mapping settings",
            "$ref" : "#/components/schemas/otoroshi.models.MappingSettings"
          }
        }
      },
      "ServiceDescriptorList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
        }
      },
      "otoroshi.models.ApiKey" : {
        "description" : "An otoroshi apikey that can allow you to access some services",
        "type" : "object",
        "properties" : {
          "dailyQuota" : {
            "format" : "int64",
            "description" : "Authorized number of calls per day",
            "type" : "integer"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Bunch of metadata for the key"
          },
          "throttlingQuota" : {
            "format" : "int64",
            "description" : "Authorized number of calls per second, measured on 10 seconds",
            "type" : "integer"
          },
          "constrainedServicesOnly" : {
            "description" : "This apikey can only be used on services that constrained their apikey routing",
            "type" : "boolean"
          },
          "allowClientIdOnly" : {
            "description" : "This apikey can be used juste with the client_id value",
            "type" : "boolean"
          },
          "_loc" : {
            "description" : "The location of the apikey",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "restrictions" : {
            "description" : "Apikey restrictions settings",
            "$ref" : "#/components/schemas/otoroshi.models.Restrictions"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Apikey tags"
          },
          "enabled" : {
            "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
            "type" : "boolean"
          },
          "readOnly" : {
            "description" : "The apikey only allow access for GET, HEAD and OPTIONS verbs",
            "type" : "boolean"
          },
          "clientSecret" : {
            "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
            "type" : "string"
          },
          "validUntil" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "number"
            } ],
            "description" : "Date until when the apikey is valid"
          },
          "clientName" : {
            "description" : "The name of the api key, for humans ;-)",
            "type" : "string"
          },
          "monthlyQuota" : {
            "format" : "int64",
            "description" : "Authorized number of calls per month",
            "type" : "integer"
          },
          "description" : {
            "description" : "Description of this apikey",
            "type" : "string"
          },
          "rotation" : {
            "description" : "Apikey rotation settings",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKeyRotation"
          },
          "authorizedEntities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.EntityIdentifier"
            },
            "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized"
          },
          "clientId" : {
            "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.UserRight" : {
        "description" : "Represent a user right (teams, organizations) in otoroshi-ui",
        "type" : "object",
        "properties" : {
          "tenant" : {
            "description" : "Access rights on organizations",
            "$ref" : "#/components/schemas/otoroshi.models.TenantAccess"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.TeamAccess"
            },
            "description" : "Access rights on teams"
          }
        }
      },
      "otoroshi.models.InHeader" : {
        "description" : "JWT token location (header)",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Header name",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of location",
            "type" : "string",
            "enum" : [ "InQueryParam", "InHeader", "InCookie" ]
          },
          "remove" : {
            "description" : "Remove from value",
            "type" : "string"
          }
        }
      },
      "ServiceFromOpenApiBody" : {
        "type" : "object",
        "description" : "Properties to create a service from an openapi spec",
        "properties" : {
          "domain" : {
            "type" : "string",
            "description" : "the domain on which the service will be exposed by otoroshi"
          },
          "openapi" : {
            "type" : "string",
            "description" : "the url to an openapi 3 spec or the content of an openapi 3 spec"
          }
        }
      },
      "otoroshi.models.GlobalJwtVerifier" : {
        "description" : "Otoroshi model for JWT token verifier",
        "type" : "object",
        "properties" : {
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "algoSettings" : {
            "description" : "Algo settings of the verifier",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "name" : {
            "description" : "Verifier name",
            "type" : "string"
          },
          "source" : {
            "description" : "Where to find the jwt token",
            "$ref" : "#/components/schemas/otoroshi.models.JwtTokenLocation"
          },
          "id" : {
            "description" : "Verifier id",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of verifier",
            "type" : "string",
            "enum" : [ "global" ]
          },
          "strict" : {
            "description" : "Does it fail if JWT not found",
            "type" : "boolean"
          },
          "strategy" : {
            "description" : "The strategy of the verifier",
            "$ref" : "#/components/schemas/otoroshi.models.VerifierStrategy"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "desc" : {
            "description" : "Verifier description",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          }
        }
      },
      "otoroshi.models.ConsoleSettings" : {
        "description" : "Settings to export to console",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          }
        }
      },
      "otoroshi.models.TenantAccess" : {
        "description" : "Access rights for organizations",
        "type" : "object",
        "properties" : {
          "canWrite" : {
            "description" : "Can this access right write data",
            "type" : "boolean"
          },
          "value" : {
            "description" : "Access pattern",
            "type" : "string"
          },
          "canRead" : {
            "description" : "Can this access right read data",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.TargetPredicate" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.AlwaysMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.DataCenterMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.GeolocationMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.InfraProviderMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.NetworkLocationMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.RackMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.RegionMatch"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.ZoneMatch"
        } ]
      },
      "otoroshi.models.IpStackGeolocationSettings" : {
        "description" : "Settings for connection to IpStack",
        "type" : "object",
        "properties" : {
          "apikey" : {
            "description" : "IpStack apikey",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of geolocation",
            "type" : "string",
            "enum" : [ "none", "maxmind", "ipstack" ]
          },
          "enabled" : {
            "description" : "enable ipstack geolocation",
            "type" : "boolean"
          },
          "timeout" : {
            "format" : "int64",
            "description" : "API call timeout",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.DefaultTemplates" : {
        "description" : "The template that will be merged with newly created entities",
        "type" : "object",
        "properties" : {
          "team" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the team entities"
          },
          "script" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the script entities"
          },
          "apikey" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the apikey entities"
          },
          "group" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the group entities"
          },
          "tcpService" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the tcpService entities"
          },
          "verifier" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the verifier entities"
          },
          "service" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the service entities"
          },
          "target" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the target entities"
          },
          "certificate" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the certificate entities"
          },
          "dataExporter" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the dataExporter entities"
          },
          "route" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the route entities"
          },
          "backend" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the backend entities"
          },
          "template" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the template entities"
          },
          "tenant" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the tenant entities"
          },
          "authConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the authConfig entities"
          },
          "descriptor" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "the template for the descriptor entities"
          }
        }
      },
      "UpdateQuotasBody" : {
        "type" : "string",
        "description" : ""
      },
      "otoroshi.models.S3ExporterSettings" : {
        "description" : "Settings to export to a S3 bucket",
        "type" : "object",
        "properties" : {
          "maxFileSize" : {
            "format" : "int64",
            "description" : "Max file size for rolling",
            "type" : "integer"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "config" : {
            "description" : "Exporter settings",
            "$ref" : "#/components/schemas/otoroshi.storage.drivers.inmemory.S3Configuration"
          }
        }
      },
      "otoroshi.models.DataExporterConfigFiltering" : {
        "description" : "Filter events to export",
        "type" : "object",
        "properties" : {
          "include" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "description" : "Event include filter"
          },
          "exclude" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "description" : "Event exclude filter"
          }
        }
      },
      "PluginDescription" : {
        "type" : "object",
        "description" : "Description of a plugin",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "the id of the plugin"
          },
          "name" : {
            "type" : "string",
            "description" : "the name of the plugin"
          },
          "description" : {
            "type" : "string",
            "description" : "the description of the plugin"
          },
          "default_config" : {
            "type" : "string",
            "description" : "the default config of the plugin (for UI form)"
          },
          "config_schema" : {
            "type" : "string",
            "description" : "the config schema of the plugin (for UI form)"
          },
          "config_flow" : {
            "type" : "array",
            "description" : "the config flow of the plugin (for UI form)",
            "items" : {
              "type" : "string"
            }
          },
          "plugin_visibility" : {
            "type" : "string",
            "description" : "visibility of the plugin (can be internal or userland)"
          },
          "plugin_categories" : {
            "type" : "array",
            "description" : "categories of the plugin",
            "items" : {
              "$ref" : "#/components/schemas/StringList"
            }
          },
          "plugin_steps" : {
            "type" : "array",
            "description" : "steps of the plugin",
            "items" : {
              "$ref" : "#/components/schemas/StringList"
            }
          },
          "plugin_tags" : {
            "type" : "array",
            "description" : "tags of the plugin",
            "items" : {
              "$ref" : "#/components/schemas/StringList"
            }
          }
        }
      },
      "otoroshi.models.ServiceGroup" : {
        "description" : "The otoroshi model for a group of services",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "A unique random string to identify your service",
            "type" : "string"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "name" : {
            "description" : "The name of your service. Only for debug and human readability purposes",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Just a bunch of random properties"
          },
          "description" : {
            "description" : "Entity description",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenCsrQuery" : {
        "description" : "Settings for generating a certificate",
        "type" : "object",
        "properties" : {
          "client" : {
            "description" : "Is cert client ?",
            "type" : "boolean"
          },
          "hosts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Certificate SANs"
          },
          "key" : {
            "description" : "Keypair specs",
            "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenKeyPairQuery"
          },
          "includeAIA" : {
            "description" : "Include AIA extension (if generated from otoroshi CA)",
            "type" : "boolean"
          },
          "signatureAlg" : {
            "description" : "Signature algorithm",
            "type" : "string"
          },
          "existingSerialNumber" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "integer",
              "format" : "int64"
            } ],
            "description" : ""
          },
          "duration" : {
            "description" : "Certificate lifespan",
            "type" : "number"
          },
          "digestAlg" : {
            "description" : "Digest algo",
            "type" : "string"
          },
          "ca" : {
            "description" : "Is cert ca ?",
            "type" : "boolean"
          },
          "name" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Certificate name"
          },
          "subject" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Certificate subject"
          }
        }
      },
      "otoroshi.models.NetworkLocationMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rack" : {
            "description" : "???",
            "type" : "string"
          },
          "provider" : {
            "description" : "???",
            "type" : "string"
          },
          "dataCenter" : {
            "description" : "???",
            "type" : "string"
          },
          "zone" : {
            "description" : "???",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          },
          "region" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.script.PluginType" : {
        "type" : "string",
        "enum" : [ "app", "transformer", "validator", "preroute", "sink", "listener", "job", "exporter" ],
        "description" : "Plugin kind"
      },
      "otoroshi.utils.mailer.ConsoleMailerSettings" : {
        "description" : "Settings for the console mailer",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "the kind of mailer",
            "type" : "string",
            "enum" : [ "none", "console", "generic", "mailgun", "mailjet", "sendgrid" ]
          }
        }
      },
      "otoroshi.models.DataExporterConfigType" : {
        "type" : "string",
        "enum" : [ "kafka", "pulsar", "elastic", "webhook", "file", "mailer", "custom", "none", "console", "metrics" ],
        "description" : "Type of data exporter"
      },
      "otoroshi.script.Script" : {
        "description" : "An otoroshi plugins stored as scala code in the otoroshi datastore",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "The name of the script",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "desc" : {
            "description" : "The description of the script",
            "type" : "string"
          },
          "code" : {
            "description" : "The code of the script",
            "type" : "string"
          },
          "id" : {
            "description" : "The id of the script",
            "type" : "string"
          },
          "type" : {
            "description" : "Plugin type",
            "$ref" : "#/components/schemas/otoroshi.script.PluginType"
          }
        }
      },
      "otoroshi.storage.drivers.inmemory.S3Configuration" : {
        "description" : "S3 bucket settings",
        "type" : "object",
        "properties" : {
          "writeEvery" : {
            "description" : "Write every n milliseconds",
            "type" : "number"
          },
          "chunkSize" : {
            "format" : "int32",
            "description" : "Upload chunk max size",
            "type" : "integer"
          },
          "bucket" : {
            "description" : "Bucket name",
            "type" : "string"
          },
          "key" : {
            "description" : "File path in bucket",
            "type" : "string"
          },
          "endpoint" : {
            "description" : "Bucket endpoint",
            "type" : "string"
          },
          "v4auth" : {
            "description" : "Use V4 auth",
            "type" : "boolean"
          },
          "access" : {
            "description" : "Bucket access key",
            "type" : "string"
          },
          "secret" : {
            "description" : "Bucket access secret",
            "type" : "string"
          },
          "region" : {
            "description" : "Bucket region",
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.mailer.MailjetSettings" : {
        "description" : "Settings for the mailjet mailer",
        "type" : "object",
        "properties" : {
          "apiKeyPrivate" : {
            "description" : "Private key",
            "type" : "string"
          },
          "apiKeyPublic" : {
            "description" : "Public key",
            "type" : "string"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "Destination email address"
          },
          "type" : {
            "description" : "the kind of mailer",
            "type" : "string",
            "enum" : [ "none", "console", "generic", "mailgun", "mailjet", "sendgrid" ]
          }
        }
      },
      "play.api.libs.ws.WSProxyServer" : {
        "type" : "object",
        "properties" : {
          "host" : {
            "type" : "string",
            "description" : "The hostname of the proxy server."
          },
          "port" : {
            "type" : "string",
            "description" : "The port of the proxy server."
          },
          "protocol" : {
            "type" : "string",
            "description" : "The protocol of the proxy server.  Use \"http\" or \"https\".  Defaults to \"http\" if not specified."
          },
          "principal" : {
            "type" : "string",
            "description" : "The principal (aka username) of the credentials for the proxy server."
          },
          "password" : {
            "type" : "string",
            "description" : "The password for the credentials for the proxy server."
          },
          "ntlmDomain" : {
            "type" : "string",
            "description" : "The ntlm domain for the proxy server."
          },
          "encoding" : {
            "type" : "string",
            "description" : "The realm's charset."
          },
          "nonProxyHosts" : {
            "type" : "string",
            "description" : "The non proxied hosts"
          }
        },
        "description" : "Proxy server"
      },
      "otoroshi.models.ServiceDescriptorIdentifier" : {
        "type" : "string",
        "description" : "the id of a service prefixed by 'service_'"
      },
      "otoroshi.models.SecComHeaders" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "claimRequestName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "stateRequestName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "stateResponseName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.StoredNgTarget" : {
        "description" : "A target that can be stored in the otoroshi datastore",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "The name of the target",
            "type" : "string"
          },
          "_loc" : {
            "description" : "The location of the target",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The metadata of the target"
          },
          "description" : {
            "description" : "The description of the target",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The tags of the target"
          },
          "id" : {
            "description" : "The id of the target",
            "type" : "string"
          },
          "target" : {
            "description" : "The actual target",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
          }
        }
      },
      "otoroshi.tcp.TlsMode" : {
        "type" : "string",
        "enum" : [ "Disabled", "Enabled", "PassThrough" ],
        "description" : "TLS mode"
      },
      "otoroshi.models.ESKPAlgoSettings" : {
        "description" : "Settings to use elliptic curve signing algorithm from a certificate keypair",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "Size of the key",
            "type" : "integer"
          },
          "certId" : {
            "description" : "Certificate id to use the keypair",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          }
        }
      },
      "AuditEventList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.events.AuditEvent"
        }
      },
      "otoroshi.models.ServiceDescriptor" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "buildMode" : {
            "description" : "???",
            "type" : "boolean"
          },
          "hosts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "privateApp" : {
            "description" : "???",
            "type" : "boolean"
          },
          "localScheme" : {
            "description" : "???",
            "type" : "string"
          },
          "authConfigRef" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "issueCertCA" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "root" : {
            "description" : "???",
            "type" : "string"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "additionalHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "domain" : {
            "description" : "???",
            "type" : "string"
          },
          "clientConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ClientConfig"
          },
          "matchingRoot" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "forceHttps" : {
            "description" : "???",
            "type" : "boolean"
          },
          "localHost" : {
            "description" : "???",
            "type" : "string"
          },
          "sendOtoroshiHeadersBack" : {
            "description" : "???",
            "type" : "boolean"
          },
          "healthCheck" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.HealthCheck"
          },
          "strictlyPrivate" : {
            "description" : "???",
            "type" : "boolean"
          },
          "detectApiKeySooner" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowHttp10" : {
            "description" : "???",
            "type" : "boolean"
          },
          "subdomain" : {
            "description" : "???",
            "type" : "string"
          },
          "paths" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "stripPath" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secComAlgoChallengeOtoToBack" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "apiKeyConstraints" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKeyConstraints"
          },
          "env" : {
            "description" : "???",
            "type" : "string"
          },
          "xForwardedHeaders" : {
            "description" : "???",
            "type" : "boolean"
          },
          "transformerRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "gzip" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.gzip.GzipConfig"
          },
          "sendInfoToken" : {
            "description" : "???",
            "type" : "boolean"
          },
          "tcpUdpTunneling" : {
            "description" : "???",
            "type" : "boolean"
          },
          "removeHeadersOut" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "useAkkaHttpClient" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maintenanceMode" : {
            "description" : "???",
            "type" : "boolean"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "removeHeadersIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "logAnalyticsOnServer" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secComAlgoInfoToken" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "userFacing" : {
            "description" : "???",
            "type" : "boolean"
          },
          "transformerConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "clientValidatorRef" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "securityExcludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "ipFiltering" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.IpFiltering"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Target"
            },
            "description" : "???"
          },
          "redirection" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.RedirectionSettings"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "restrictions" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Restrictions"
          },
          "overrideHost" : {
            "description" : "???",
            "type" : "boolean"
          },
          "accessValidator" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.AccessValidatorRef"
          },
          "sendStateChallenge" : {
            "description" : "???",
            "type" : "boolean"
          },
          "chaosConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ChaosConfig"
          },
          "secComInfoTokenVersion" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SecComInfoTokenVersion"
          },
          "additionalHeadersOut" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "secComHeaders" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SecComHeaders"
          },
          "matchingHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "secComAlgoChallengeBackToOto" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "secComUseSameAlgo" : {
            "description" : "???",
            "type" : "boolean"
          },
          "useNewWSClient" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secComExcludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "redirectToLocal" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enforceSecureCommunication" : {
            "description" : "???",
            "type" : "boolean"
          },
          "missingOnlyHeadersOut" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "secComSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "handleLegacyDomain" : {
            "description" : "???",
            "type" : "boolean"
          },
          "canary" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Canary"
          },
          "_loc" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "plugins" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.plugins.Plugins"
          },
          "secComTtl" : {
            "description" : "???",
            "type" : "number"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "secComVersion" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SecComVersion"
          },
          "preRouting" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.PreRoutingRef"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "readOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "privatePatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "targetsLoadBalancing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.LoadBalancing"
          },
          "cors" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.CorsSettings"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "publicPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "api" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiDescriptor"
          },
          "missingOnlyHeadersIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "issueCert" : {
            "description" : "???",
            "type" : "boolean"
          },
          "headersVerification" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "jwtVerifier" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtVerifier"
          },
          "letsEncrypt" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.TeamAccess" : {
        "description" : "Access rights for teams",
        "type" : "object",
        "properties" : {
          "canRead" : {
            "description" : "Can this access right read data",
            "type" : "boolean"
          },
          "value" : {
            "description" : "Access pattern",
            "type" : "string"
          },
          "canWrite" : {
            "description" : "Can this access right write data",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.OtoroshiAdminType" : {
        "type" : "string",
        "enum" : [ "SIMPLE", "WEBAUTHN" ],
        "description" : "Admin kind"
      },
      "otoroshi.ssl.Cert" : {
        "description" : "The otoroshi model for X509 certificates",
        "type" : "object",
        "properties" : {
          "certType" : {
            "type" : "string",
            "description" : "the kind of certificate",
            "enum" : [ "client", "ca", "letsEncrypt", "keypair", "selfSigned", "certificate" ]
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "subject" : {
            "description" : "Certificate subject",
            "type" : "string"
          },
          "letsEncrypt" : {
            "description" : "Let's encrypt (ACME) generated",
            "type" : "boolean"
          },
          "keypair" : {
            "description" : "Is cert used for its keypair only ?",
            "type" : "boolean"
          },
          "description" : {
            "description" : "Entity description",
            "type" : "string"
          },
          "revoked" : {
            "description" : "Certificate is revoked",
            "type" : "boolean"
          },
          "valid" : {
            "description" : "Is cert valid",
            "type" : "boolean"
          },
          "password" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Certificate password"
          },
          "autoRenew" : {
            "description" : "Auto renew cert",
            "type" : "boolean"
          },
          "exposed" : {
            "description" : "Is the cert exposed (public key exposed in jwks.json)",
            "type" : "boolean"
          },
          "client" : {
            "description" : "Is cert a client cert ?",
            "type" : "boolean"
          },
          "from" : {
            "description" : "Start date",
            "type" : "number"
          },
          "selfSigned" : {
            "description" : "Is cert self signed",
            "type" : "boolean"
          },
          "id" : {
            "description" : "Entity id",
            "type" : "string"
          },
          "ca" : {
            "description" : "Is cert a CA ?",
            "type" : "boolean"
          },
          "chain" : {
            "description" : "Certicates chain (PEM encoded)",
            "type" : "string"
          },
          "sans" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Certificate SANs"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "privateKey" : {
            "description" : "Certificate private key (PEM encoded)",
            "type" : "string"
          },
          "caRef" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Reference to the CA (if any)"
          },
          "domain" : {
            "description" : "Certificate domain",
            "type" : "string"
          },
          "name" : {
            "description" : "Entity name",
            "type" : "string"
          },
          "to" : {
            "description" : "Stop date",
            "type" : "number"
          }
        }
      },
      "otoroshi.models.AlgoSettings" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.ESAlgoSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.ESKPAlgoSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.HSAlgoSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.JWKSAlgoSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.KidAlgoSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.RSAKPAlgoSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.RSAlgoSettings"
        } ]
      },
      "otoroshi.tcp.TcpRule" : {
        "description" : "Associate targets for a domain (SNI)",
        "type" : "object",
        "properties" : {
          "domain" : {
            "description" : "match on SNI domain",
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.tcp.TcpTarget"
            },
            "description" : "TCP targets"
          }
        }
      },
      "otoroshi.models.CleverCloudSettings" : {
        "description" : "Settings for connection to the clever-cloud api",
        "type" : "object",
        "properties" : {
          "consumerSecret" : {
            "description" : "Clever-Cloud oauth consumer secret",
            "type" : "string"
          },
          "consumerKey" : {
            "description" : "Clever-Cloud oauth consumer key",
            "type" : "string"
          },
          "secret" : {
            "description" : "Clever-Cloud oauth secret",
            "type" : "string"
          },
          "token" : {
            "description" : "Clever-Cloud oauth token",
            "type" : "string"
          },
          "orgaId" : {
            "description" : "Clever-Cloud organization id",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.Canary" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "traffic" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Target"
            },
            "description" : "???"
          },
          "root" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.BadResponse" : {
        "description" : "Settings for a bad response return (chaos engineering)",
        "type" : "object",
        "properties" : {
          "status" : {
            "format" : "int32",
            "description" : "The HTTP status for the response",
            "type" : "integer"
          },
          "body" : {
            "description" : "The body of the HTTP response",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The HTTP headers of the response"
          }
        }
      },
      "otoroshi.next.models.NgRoute" : {
        "description" : "A routing primitive representing how a request is matched and where the request is forwarded",
        "type" : "object",
        "properties" : {
          "debug_flow" : {
            "description" : "Enable report debugging",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "Is the route enabled",
            "type" : "boolean"
          },
          "name" : {
            "description" : "The name of the route",
            "type" : "string"
          },
          "id" : {
            "description" : "The ud of the route",
            "type" : "string"
          },
          "export_reporting" : {
            "description" : "Export the execution reporting through standard data exporter",
            "type" : "boolean"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The metadata of the route"
          },
          "frontend" : {
            "description" : "The frontend of the route",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgFrontend"
          },
          "_loc" : {
            "description" : "The location of the route",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The tags of the route"
          },
          "capture" : {
            "description" : "Capture http traffic",
            "type" : "boolean"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The groups of the route"
          },
          "backend_ref" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "The backend id of the route (if one)"
          },
          "description" : {
            "description" : "The description of the route",
            "type" : "string"
          },
          "backend" : {
            "description" : "The backend of the route",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgBackend"
          }
        }
      },
      "otoroshi.models.GlobalConfig" : {
        "description" : "The global config (dynamic) for otoroshi",
        "type" : "object",
        "properties" : {
          "geolocationSettings" : {
            "description" : "Settings for geolocation extraction",
            "$ref" : "#/components/schemas/otoroshi.models.GeolocationSettings"
          },
          "alertsEmails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Email addresses that will receive all Otoroshi alert events"
          },
          "throttlingQuota" : {
            "format" : "int64",
            "description" : "Authorized number of calls per second globally, measured on 10 seconds",
            "type" : "integer"
          },
          "maxWebhookSize" : {
            "format" : "int32",
            "description" : "Max number of items in webhooks",
            "type" : "integer"
          },
          "maxConcurrentRequests" : {
            "format" : "int64",
            "description" : "The number of authorized request processed at the same time",
            "type" : "integer"
          },
          "cleverSettings" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.CleverCloudSettings"
            } ],
            "description" : "Optional CleverCloud configuration"
          },
          "templates" : {
            "description" : "The otoroshi default templates for entities",
            "$ref" : "#/components/schemas/otoroshi.models.DefaultTemplates"
          },
          "endlessIpAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros"
          },
          "plugins" : {
            "description" : "global plugins settings",
            "$ref" : "#/components/schemas/otoroshi.script.plugins.Plugins"
          },
          "kafkaConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.events.KafkaConfig"
            } ],
            "description" : "Global kafka settings. deprecated"
          },
          "maxLogsSize" : {
            "format" : "int32",
            "description" : "Number of events kept locally",
            "type" : "integer"
          },
          "proxies" : {
            "description" : "Web proxies settings",
            "$ref" : "#/components/schemas/otoroshi.models.Proxies"
          },
          "enableEmbeddedMetrics" : {
            "description" : "Enable embedded metrics",
            "type" : "boolean"
          },
          "elasticReadsConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.ElasticAnalyticsConfig"
            } ],
            "description" : "Config. for elastic reads"
          },
          "trustXForwarded" : {
            "description" : "Use X-Forwarded-* headers for routing",
            "type" : "boolean"
          },
          "quotasSettings" : {
            "description" : "Settings to generate alert when an apikey almost exceeded or exceeded its quotas",
            "$ref" : "#/components/schemas/otoroshi.models.QuotasAlmostExceededSettings"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "limitConcurrentRequests" : {
            "description" : "If enabled, Otoroshi will reject new request if too much at the same time",
            "type" : "boolean"
          },
          "useAkkaHttpClient" : {
            "description" : "Globally use akka http client for everything",
            "type" : "boolean"
          },
          "elasticWritesConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.ElasticAnalyticsConfig"
            },
            "description" : "Configs. for Elastic writes"
          },
          "logAnalyticsOnServer" : {
            "description" : "Log analytics event on the server",
            "type" : "boolean"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "apiReadOnly" : {
            "description" : "If enabled, Admin API won't be able to write/update/delete entities",
            "type" : "boolean"
          },
          "backOfficeAuthRef" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Id of the auth module used for otoroshi-ui login"
          },
          "streamEntityOnly" : {
            "description" : "HTTP will be streamed only. Doesn't work with old browsers",
            "type" : "boolean"
          },
          "otoroshiId" : {
            "description" : "Unique id for this otoroshi instance",
            "type" : "string"
          },
          "mailerSettings" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailerSettings"
            } ],
            "description" : "Optional mailer configuration"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Possibles lines for Otoroshi"
          },
          "middleFingers" : {
            "description" : "Use middle finger emoji as a response character for endless HTTP responses",
            "type" : "boolean"
          },
          "analyticsWebhooks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Webhook"
            },
            "description" : "Webhook that will receive all internal Otoroshi events"
          },
          "autoCert" : {
            "description" : "Auto certs settings",
            "$ref" : "#/components/schemas/otoroshi.models.AutoCert"
          },
          "maintenanceMode" : {
            "description" : "Global maintenant mode",
            "type" : "boolean"
          },
          "letsEncryptSettings" : {
            "description" : "Let's encrypt (ACME) settings",
            "$ref" : "#/components/schemas/otoroshi.utils.letsencrypt.LetsEncryptSettings"
          },
          "snowMonkeyConfig" : {
            "description" : "Snowmonky settings",
            "$ref" : "#/components/schemas/otoroshi.models.SnowMonkeyConfig"
          },
          "scripts" : {
            "description" : "global plugins settings. will be deprecated soon",
            "$ref" : "#/components/schemas/otoroshi.models.GlobalScripts"
          },
          "perIpThrottlingQuota" : {
            "format" : "int64",
            "description" : "Authorized number of calls per second globally per IP address, measured on 10 seconds",
            "type" : "integer"
          },
          "useCircuitBreakers" : {
            "description" : "If enabled, services will be authorized to use circuit breakers",
            "type" : "boolean"
          },
          "maxHttp10ResponseSize" : {
            "format" : "int64",
            "description" : "The max size in bytes of an HTTP 1.0 response",
            "type" : "integer"
          },
          "tlsSettings" : {
            "description" : "TLS settings",
            "$ref" : "#/components/schemas/otoroshi.models.TlsSettings"
          },
          "statsdConfig" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.events.StatsdConfig"
            } ],
            "description" : "Statsd settings (agent connection)"
          },
          "autoLinkToDefaultGroup" : {
            "description" : "If not defined, every new service descriptor will be added to the default group",
            "type" : "boolean"
          },
          "alertsWebhooks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Webhook"
            },
            "description" : "Webhook that will receive all Otoroshi alert events"
          },
          "ipFiltering" : {
            "description" : "Global ip filtering settings",
            "$ref" : "#/components/schemas/otoroshi.models.IpFiltering"
          },
          "u2fLoginOnly" : {
            "description" : "If enabled, login to backoffice through Auth0 will be disabled",
            "type" : "boolean"
          },
          "userAgentSettings" : {
            "description" : "Settings for useragent extraction",
            "$ref" : "#/components/schemas/otoroshi.models.UserAgentSettings"
          }
        }
      },
      "StringList" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        }
      },
      "otoroshi.models.ExporterRef" : {
        "description" : "Ref to an exporter id",
        "type" : "object",
        "properties" : {
          "ref" : {
            "description" : "Reference to an exporter",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "config" : {
            "description" : "Exporter config.",
            "type" : "object"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenKeyPairQuery" : {
        "description" : "Settings for generating a keypair",
        "type" : "object",
        "properties" : {
          "algo" : {
            "description" : "Keypair algorithm",
            "type" : "string"
          },
          "size" : {
            "format" : "int32",
            "description" : "Keypair size",
            "type" : "integer"
          }
        }
      },
      "HealthCheckEventList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.events.HealthCheckEvent"
        }
      },
      "otoroshi.next.models.NgFrontend" : {
        "description" : "Representation of how a request will be matched to a route",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "the headers that will be matched"
          },
          "query" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "the query params that will be matched"
          },
          "domains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgDomainAndPath"
            },
            "description" : "The domain and path that will be matched"
          },
          "methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "the http methods that will be matched"
          },
          "exact" : {
            "description" : "Match on exact path ?",
            "type" : "boolean"
          },
          "strip_path" : {
            "description" : "Is path stripped from backend request",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.OutageStrategy" : {
        "type" : "string",
        "enum" : [ "AllServicesPerGroup", "OneServicePerGroup" ]
      },
      "otoroshi.models.ClientIdAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "headerName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "queryName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.ClientConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "connectionTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "useCircuitBreaker" : {
            "description" : "???",
            "type" : "boolean"
          },
          "retryInitialDelay" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "cacheConnectionSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.CacheConnectionSettings"
          },
          "proxy" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "callTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "callAndStreamTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "globalTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "maxErrors" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "retries" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "backoffFactor" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "customTimeouts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.CustomTimeouts"
            },
            "description" : "???"
          },
          "idleTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "sampleInterval" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "LiveStats" : {
        "type" : "object",
        "description" : "Service live stats"
      },
      "otoroshi.models.ApiKeyConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "customHeadersAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.CustomHeadersAuthConstraints"
          },
          "routing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKeyRouteMatcher"
          },
          "clientIdAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ClientIdAuthConstraints"
          },
          "jwtAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtAuthConstraints"
          },
          "basicAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.BasicAuthConstraints"
          }
        }
      },
      "otoroshi.next.plugins.NgOtoroshiChallengeConfig" : {
        "description" : "Configuration for OtoroshiChallenge",
        "type" : "object",
        "properties" : {
          "version" : {
            "description" : "The version of the jwt",
            "$ref" : "#/components/schemas/otoroshi.models.SecComVersion"
          },
          "ttl" : {
            "description" : "The ttl of the generated jwt in milliseconds",
            "type" : "number"
          },
          "request_header_name" : {
            "description" : "The header name to inject the jwt",
            "type" : "string"
          },
          "response_header_name" : {
            "description" : "The header name to read the jwt",
            "type" : "string"
          },
          "algo_to_backend" : {
            "description" : "The jwt signing algorithm when writing",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "algo_from_backend" : {
            "description" : "The jwt signing algorithm when reading",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "state_resp_leeway" : {
            "description" : "the number of seconds acceptable between client and server time",
            "type" : "number"
          }
        }
      },
      "otoroshi.next.plugins.NgOtoroshiInfoConfig" : {
        "description" : "Configuration for OtoroshiInfos",
        "type" : "object",
        "properties" : {
          "version" : {
            "description" : "The version of the jwt",
            "$ref" : "#/components/schemas/otoroshi.models.SecComInfoTokenVersion"
          },
          "secComTtl" : {
            "description" : "The ttl of the generated jwt in milliseconds",
            "type" : "number"
          },
          "headerName" : {
            "description" : "The header name to inject the jwt",
            "type" : "string"
          },
          "algo" : {
            "description" : "The jwt signing algorithm",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          }
        }
      },
      "otoroshi.utils.http.DN" : {
        "type" : "string",
        "description" : "A string representation of a Distinguished Name"
      },
      "Any" : {
        "oneOf" : [ {
          "type" : "object"
        }, {
          "type" : "array"
        }, {
          "type" : "string"
        }, {
          "type" : "boolean"
        }, {
          "type" : "number"
        }, {
          "type" : "integer"
        } ]
      },
      "otoroshi.ssl.ClientAuth" : {
        "type" : "string",
        "enum" : [ "Need", "None", "Want" ],
        "description" : "Client authentication mode"
      },
      "otoroshi.models.SimpleOtoroshiAdmin" : {
        "description" : "An otoroshi admin user",
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "description" : "User creation date",
            "type" : "number"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "password" : {
            "description" : "User password (bcrypt hashed)",
            "type" : "string"
          },
          "rights" : {
            "description" : "User rights",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "typ" : {
            "description" : "Type of user",
            "$ref" : "#/components/schemas/otoroshi.models.OtoroshiAdminType"
          },
          "label" : {
            "description" : "User label",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of admin",
            "type" : "string",
            "enum" : [ "simple", "webauthn" ]
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "username" : {
            "description" : "User username",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          }
        }
      },
      "otoroshi.models.EntityIdentifier" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptorIdentifier"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.ServiceGroupIdentifier"
        } ]
      },
      "otoroshi.ssl.pki.models.SignCertResponse" : {
        "description" : "Response for a certificate signing operation",
        "type" : "object",
        "properties" : {
          "cert" : {
            "description" : "Cert (PEM encoded)",
            "type" : "string"
          },
          "csr" : {
            "description" : "CSR (PEM encoded)",
            "type" : "string"
          },
          "ca" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string",
              "description" : "pem encoded X509 certificate"
            } ],
            "description" : "Ca cert (PEM encoded)"
          }
        }
      },
      "otoroshi.next.models.NgDomainAndPath" : {
        "type" : "string",
        "description" : "A string representing a domain and an optional path"
      },
      "otoroshi.events.KafkaConfig" : {
        "description" : "Settings for connection to a kafka cluster",
        "type" : "object",
        "properties" : {
          "hostValidation" : {
            "description" : "Enabled TLS hostname validation",
            "type" : "boolean"
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "URLs of the kafka servers"
          },
          "keyPass" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Optional keypass"
          },
          "mtlsConfig" : {
            "description" : "TLS config to access the cluster",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "topic" : {
            "description" : "Optional kafka topic (otoroshi-events by default)",
            "type" : "string"
          },
          "truststore" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Optional truststore"
          },
          "keystore" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Optional keystore"
          },
          "sendEvents" : {
            "description" : "Send events to it, or just connect",
            "type" : "boolean"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          }
        }
      },
      "otoroshi.models.UserRights" : {
        "description" : "Represent a list of user rights",
        "type" : "object",
        "properties" : {
          "rights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.UserRight"
            },
            "description" : "Access rights of a user"
          }
        }
      },
      "otoroshi.models.IndexSettingsInterval" : {
        "description" : "Elasticseach indexation interval",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.script.plugins.Plugins" : {
        "description" : "Settings for plugins (of any kind)",
        "type" : "object",
        "properties" : {
          "config" : {
            "description" : "Plugins configuration",
            "type" : "object"
          },
          "enabled" : {
            "description" : "Plugins enabled",
            "type" : "boolean"
          },
          "excluded" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Excluded paths"
          },
          "refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Enabled plugins"
          }
        }
      },
      "otoroshi.next.models.NgMinimalBackend" : {
        "description" : "A backend representation with it's minimal attributes",
        "type" : "object",
        "properties" : {
          "root" : {
            "description" : "The root path of the backend or the full rewrite path",
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
            },
            "description" : "The targets of the backend"
          },
          "load_balancing" : {
            "description" : "Loadbalancing config og the backend",
            "$ref" : "#/components/schemas/otoroshi.models.LoadBalancing"
          },
          "target_refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "List of NgStoredBackend ids"
          },
          "rewrite" : {
            "description" : "Does the backend performs a full url rewrite ?",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.tcp.TcpTarget" : {
        "description" : "Target for a TCP proxy",
        "type" : "object",
        "properties" : {
          "host" : {
            "description" : "Target host",
            "type" : "string"
          },
          "ip" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Target ip"
          },
          "port" : {
            "format" : "int32",
            "description" : "Target port",
            "type" : "integer"
          },
          "tls" : {
            "description" : "Use tls",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.GeoPositionRadius" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "latitude" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "longitude" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "radius" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.models.InCookie" : {
        "description" : "JWT token location (cookie)",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Cookie name",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of location",
            "type" : "string",
            "enum" : [ "InQueryParam", "InHeader", "InCookie" ]
          }
        }
      },
      "otoroshi.models.RSAlgoSettings" : {
        "description" : "Settings to use RSA signing algorithm",
        "type" : "object",
        "properties" : {
          "privateKey" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Private key (for signing)"
          },
          "size" : {
            "format" : "int32",
            "description" : "SHA function size",
            "type" : "integer"
          },
          "publicKey" : {
            "description" : "Public key (for verification)",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          }
        }
      },
      "otoroshi.tcp.TcpService" : {
        "description" : "Model for a TCP proxy",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "Service enabled",
            "type" : "boolean"
          },
          "description" : {
            "description" : "Entity description",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "port" : {
            "format" : "int32",
            "description" : "network port",
            "type" : "integer"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.tcp.TcpRule"
            },
            "description" : "Routing rules"
          },
          "clientAuth" : {
            "description" : "Use client authentication",
            "$ref" : "#/components/schemas/otoroshi.ssl.ClientAuth"
          },
          "interface" : {
            "description" : "Network interface",
            "type" : "string"
          },
          "sni" : {
            "description" : "SNI settings",
            "$ref" : "#/components/schemas/otoroshi.tcp.SniSettings"
          },
          "id" : {
            "description" : "Entity id",
            "type" : "string"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "name" : {
            "description" : "Entity name",
            "type" : "string"
          },
          "tls" : {
            "description" : "TLS mode",
            "$ref" : "#/components/schemas/otoroshi.tcp.TlsMode"
          }
        }
      },
      "WebAuthnRegistrationFinishBody" : {
        "type" : "object",
        "description" : ""
      },
      "otoroshi.models.LocalJwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "algoSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "source" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtTokenLocation"
          },
          "type" : {
            "description" : "the kind of verifier",
            "type" : "string",
            "enum" : [ "global", "local", "ref" ]
          },
          "strict" : {
            "description" : "???",
            "type" : "boolean"
          },
          "strategy" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerifierStrategy"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.utils.gzip.GzipConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "compressionLevel" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "blackList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "chunkedThreshold" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "bufferSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "whiteList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.Webhook" : {
        "description" : "Settings for webhook call",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Headers to authorize the call or whatever"
          },
          "mtlsConfig" : {
            "description" : "TLS config when calling webhook",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "url" : {
            "description" : "The URL where events are posted",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgCustomTimeouts" : {
        "description" : "Custom timeouts per path",
        "type" : "object",
        "properties" : {
          "connection_timeout" : {
            "format" : "int64",
            "description" : "Timeout at connection",
            "type" : "integer"
          },
          "call_and_stream_timeout" : {
            "format" : "int64",
            "description" : "Specify how long each call should last at most in milliseconds (hard timeout, connection will be closed after that duration)",
            "type" : "integer"
          },
          "path" : {
            "description" : "path on which this configuration works",
            "type" : "string"
          },
          "call_timeout" : {
            "format" : "int64",
            "description" : "Specify how long each call should last at most in milliseconds (soft timeout as it's enforced by the circuit breaker)",
            "type" : "integer"
          },
          "idle_timeout" : {
            "format" : "int64",
            "description" : "Timeout on idle connection",
            "type" : "integer"
          },
          "global_timeout" : {
            "format" : "int64",
            "description" : "Specify how long the global call (with retries) should last at most in milliseconds",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.VerifierStrategy" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.DefaultToken"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.PassThrough"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.Sign"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.Transform"
        } ]
      },
      "otoroshi.models.DefaultToken" : {
        "description" : "Default jwt token when no other token validated",
        "type" : "object",
        "properties" : {
          "verificationSettings" : {
            "description" : "Verification settings",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          },
          "type" : {
            "description" : "the kind of strategy",
            "type" : "string",
            "enum" : [ "PassThrough", "Sign", "Transform", "DefaultToken" ]
          },
          "strict" : {
            "description" : "If the token already exists in the request, then fail",
            "type" : "boolean"
          },
          "token" : {
            "description" : "The default token",
            "type" : "object"
          }
        }
      },
      "otoroshi.models.RemainingQuotas" : {
        "description" : "Remaining quotas for an apikey",
        "type" : "object",
        "properties" : {
          "currentCallsPerSec" : {
            "format" : "int64",
            "description" : "Current number of call per second",
            "type" : "integer"
          },
          "remainingCallsPerSec" : {
            "format" : "int64",
            "description" : "Remaining number of call per second",
            "type" : "integer"
          },
          "currentCallsPerDay" : {
            "format" : "int64",
            "description" : "Current number of call per day",
            "type" : "integer"
          },
          "authorizedCallsPerDay" : {
            "format" : "int64",
            "description" : "Number of authorized call per day",
            "type" : "integer"
          },
          "currentCallsPerMonth" : {
            "format" : "int64",
            "description" : "Current number of call per month",
            "type" : "integer"
          },
          "remainingCallsPerMonth" : {
            "format" : "int64",
            "description" : "Remaining number of call per month",
            "type" : "integer"
          },
          "authorizedCallsPerSec" : {
            "format" : "int64",
            "description" : "Number of authorized call per second",
            "type" : "integer"
          },
          "authorizedCallsPerMonth" : {
            "format" : "int64",
            "description" : "Number of authorized call per month",
            "type" : "integer"
          },
          "remainingCallsPerDay" : {
            "format" : "int64",
            "description" : "Remaining number of call per day",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.GlobalScripts" : {
        "description" : "Settings to apply plugins globally",
        "type" : "object",
        "properties" : {
          "jobConfig" : {
            "description" : "jobs enabled",
            "type" : "object"
          },
          "enabled" : {
            "description" : "Global scripts enabled",
            "type" : "boolean"
          },
          "transformersConfig" : {
            "description" : "transformers config",
            "type" : "object"
          },
          "transformersRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "transformers enabled"
          },
          "preRouteRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "pre-route plugins enabled"
          },
          "sinkConfig" : {
            "description" : "sinks config",
            "type" : "object"
          },
          "jobRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "running jobs"
          },
          "validatorRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "validator enabled"
          },
          "sinkRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "sinks enabled"
          },
          "preRouteConfig" : {
            "description" : "pre-route config",
            "type" : "object"
          },
          "validatorConfig" : {
            "description" : "validator config",
            "type" : "object"
          }
        }
      },
      "ErrorResponse" : {
        "type" : "object",
        "description" : "error response"
      },
      "otoroshi.models.JwtAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "keyPairSigned" : {
            "description" : "???",
            "type" : "boolean"
          },
          "cookieName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "queryName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "headerName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "secretSigned" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maxJwtLifespanSecs" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "integer",
              "format" : "int64"
            } ],
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "includeRequestAttributes" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.models.StoredNgBackend" : {
        "description" : "A backend that can be stored in the otoroshi datastore",
        "type" : "object",
        "properties" : {
          "description" : {
            "description" : "The description of the backend",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The tags of the backend"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The metadata of the backend"
          },
          "backend" : {
            "description" : "The actual backend",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgBackend"
          },
          "name" : {
            "description" : "The name of the backend",
            "type" : "string"
          },
          "_loc" : {
            "description" : "The location of the backend",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "id" : {
            "description" : "The id of the backend",
            "type" : "string"
          }
        }
      },
      "Empty" : {
        "type" : "object",
        "description" : "an empty body. Useful for RPC like endpoints"
      },
      "otoroshi.models.ServiceGroupIdentifier" : {
        "type" : "string",
        "description" : "the id of a group prefixed by 'group_'"
      },
      "otoroshi.script.AccessValidatorRef" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenCertResponse" : {
        "description" : "Response for a certificate generation operation",
        "type" : "object",
        "properties" : {
          "ca" : {
            "description" : "Ca cert (PEM encoded)",
            "type" : "string"
          },
          "caChain" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "pem encoded X509 certificate"
            },
            "description" : "Ca chain (PEM encoded)"
          },
          "csrQuery" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
            } ],
            "description" : "JSON generation query"
          },
          "cert" : {
            "description" : "Cert (PEM encoded)",
            "type" : "string"
          },
          "serial" : {
            "format" : "int64",
            "description" : "Certificate serial number",
            "type" : "integer"
          },
          "key" : {
            "description" : "Private key (PEM encoded)",
            "type" : "string"
          },
          "csr" : {
            "description" : "CSR (PEM encoded)",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgPluginInstanceConfig" : {
        "description" : "The current configuration for a plugin",
        "type" : "object"
      },
      "otoroshi.models.PrivateAppsUser" : {
        "description" : "User session for private apps",
        "type" : "object",
        "properties" : {
          "realm" : {
            "description" : "Session realm name",
            "type" : "string"
          },
          "token" : {
            "description" : "Session tokens (from OAuth)",
            "type" : "object"
          },
          "expiredAt" : {
            "description" : "Session expiration date",
            "type" : "number"
          },
          "profile" : {
            "description" : "Session user profile",
            "type" : "object"
          },
          "lastRefresh" : {
            "description" : "Session last refresh (if OAuth refresh_token supported)",
            "type" : "number"
          },
          "randomId" : {
            "description" : "Session random id",
            "type" : "string"
          },
          "email" : {
            "description" : "Session user email",
            "type" : "string"
          },
          "createdAt" : {
            "description" : "Creation date of the session",
            "type" : "number"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "authConfigId" : {
            "description" : "Auth module id that created the session",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "name" : {
            "description" : "Entity name",
            "type" : "string"
          },
          "otoroshiData" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "object"
            } ],
            "description" : "Otoroshi oriented metadata"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          }
        }
      },
      "HostMetrics" : {
        "type" : "object",
        "description" : "Host metrics"
      },
      "otoroshi.next.models.NgService" : {
        "description" : "A composition of multiple routes with the same plugins",
        "type" : "object",
        "properties" : {
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "The metadata of the service"
          },
          "client" : {
            "description" : "The client config of the service",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgClientConfig"
          },
          "name" : {
            "description" : "The name of the service",
            "type" : "string"
          },
          "id" : {
            "description" : "The id of the service",
            "type" : "string"
          },
          "capture" : {
            "description" : "Capture http traffic",
            "type" : "boolean"
          },
          "description" : {
            "description" : "The description of the service",
            "type" : "string"
          },
          "routes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgMinimalRoute"
            },
            "description" : "The routes of the service"
          },
          "debug_flow" : {
            "description" : "Enable report debugging",
            "type" : "boolean"
          },
          "export_reporting" : {
            "description" : "Export the execution reporting through standard data exporter",
            "type" : "boolean"
          },
          "_loc" : {
            "description" : "The location of the service",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "enabled" : {
            "description" : "Is the service enabled",
            "type" : "boolean"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The tags of the service"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "The groups of the service"
          }
        }
      },
      "AlertEventList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.events.AlertEvent"
        }
      },
      "otoroshi.models.HealthCheck" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.SnowMonkeyConfig" : {
        "description" : "Settings for the snow monkey (chaos engineering)",
        "type" : "object",
        "properties" : {
          "dryRun" : {
            "description" : "Whether or not outages will actualy impact requests",
            "type" : "boolean"
          },
          "outageDurationTo" : {
            "description" : "End of outage duration range",
            "type" : "number"
          },
          "chaosConfig" : {
            "description" : "Chaos settings",
            "$ref" : "#/components/schemas/otoroshi.models.ChaosConfig"
          },
          "timesPerDay" : {
            "format" : "int32",
            "description" : "Number of time per day each service will be outage",
            "type" : "integer"
          },
          "outageDurationFrom" : {
            "description" : "Start of outage duration range",
            "type" : "number"
          },
          "startTime" : {
            "description" : "Start time of Snow Monkey each day",
            "type" : "string"
          },
          "includeUserFacingDescriptors" : {
            "description" : "Whether or not user facing apps. will be impacted by Snow Monkey",
            "type" : "boolean"
          },
          "targetGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Groups impacted by Snow Monkey. If empty, all groups will be impacted"
          },
          "enabled" : {
            "description" : "Whether or not this config is enabled",
            "type" : "boolean"
          },
          "stopTime" : {
            "description" : "Stop time of Snow Monkey each day",
            "type" : "string"
          },
          "outageStrategy" : {
            "description" : "",
            "$ref" : "#/components/schemas/otoroshi.models.OutageStrategy"
          }
        }
      },
      "otoroshi.models.IndexSettings" : {
        "description" : "Elasticseach indexation settings",
        "type" : "object",
        "properties" : {
          "clientSide" : {
            "description" : "Enable index splitting on client side",
            "type" : "boolean"
          },
          "interval" : {
            "description" : "Index splitting interval",
            "$ref" : "#/components/schemas/otoroshi.models.IndexSettingsInterval"
          }
        }
      },
      "otoroshi.models.ZoneMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "zone" : {
            "description" : "???",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          }
        }
      },
      "CodeBody" : {
        "type" : "string",
        "description" : "Plugin scala code"
      },
      "otoroshi.models.AutoCert" : {
        "description" : "Settings to generate certificates on the fly",
        "type" : "object",
        "properties" : {
          "allowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "allowed domains"
          },
          "enabled" : {
            "description" : "Enable auto cert",
            "type" : "boolean"
          },
          "replyNicely" : {
            "description" : "Reply TLS error with an auto generated certificate for the domain",
            "type" : "boolean"
          },
          "notAllowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "not allowed domains"
          },
          "caRef" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Generate cert from the following CA"
          }
        }
      },
      "CertValidResponse" : {
        "type" : "object",
        "description" : "Is certificate valid",
        "properties" : {
          "valid" : {
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.RestrictionPath" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "method" : {
            "description" : "???",
            "type" : "string"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgClientConfig" : {
        "description" : "Settings for the http client when http request is forwarded",
        "type" : "object",
        "properties" : {
          "idle_timeout" : {
            "format" : "int64",
            "description" : "Timeout on idle connection",
            "type" : "integer"
          },
          "sample_interval" : {
            "format" : "int64",
            "description" : "Specify the sliding window time for the circuit breaker in milliseconds, after this time, error count will be reseted",
            "type" : "integer"
          },
          "cache_connection_settings" : {
            "description" : "Cached connection settings",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgCacheConnectionSettings"
          },
          "call_and_stream_timeout" : {
            "format" : "int64",
            "description" : "Specify how long each call should last at most in milliseconds (hard timeout, connection will be closed after that duration)",
            "type" : "integer"
          },
          "custom_timeouts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgCustomTimeouts"
            },
            "description" : "Custom timeouts per path"
          },
          "connection_timeout" : {
            "format" : "int64",
            "description" : "Timeout at connection",
            "type" : "integer"
          },
          "call_timeout" : {
            "format" : "int64",
            "description" : "Specify how long each call should last at most in milliseconds (soft timeout as it's enforced by the circuit breaker)",
            "type" : "integer"
          },
          "global_timeout" : {
            "format" : "int64",
            "description" : "Specify how long the global call (with retries) should last at most in milliseconds",
            "type" : "integer"
          },
          "retry_initial_delay" : {
            "format" : "int64",
            "description" : "Specify the delay between two retries. Each retry, the delay is multiplied by the backoff factor",
            "type" : "integer"
          },
          "backoff_factor" : {
            "format" : "int64",
            "description" : "Specify the factor to multiply the delay for each retry",
            "type" : "integer"
          },
          "proxy" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy settings for http client"
          },
          "retries" : {
            "format" : "int32",
            "description" : "Specify how many times the client will try to fetch the result of the request after an error before giving up.",
            "type" : "integer"
          },
          "max_errors" : {
            "format" : "int32",
            "description" : "Specify how many errors can pass before opening the circuit breaker",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.GeolocationMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "positions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.GeoPositionRadius"
            },
            "description" : "???"
          },
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          }
        }
      },
      "BulkResponseBody" : {
        "type" : "object",
        "description" : "BulkResponseBody object"
      },
      "otoroshi.models.BadResponsesFaultConfig" : {
        "description" : "List of bad response settings",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
            "type" : "number"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.BadResponse"
            },
            "description" : "The possibles responses"
          }
        }
      },
      "otoroshi.models.Target" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "host" : {
            "description" : "???",
            "type" : "string"
          },
          "weight" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "protocol" : {
            "description" : "???",
            "type" : "string",
            "enum" : [ "HTTP/1.0", "HTTP/1.1", "HTTP/2.0" ]
          },
          "predicate" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TargetPredicate"
          },
          "ipAddress" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "scheme" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "SimpleAdminList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
        }
      },
      "otoroshi.models.Proxies" : {
        "description" : "Various web proxy settings for http client",
        "type" : "object",
        "properties" : {
          "elastic" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to call elastic"
          },
          "eventsWebhooks" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to call webhooks"
          },
          "jwk" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to fetch jwks"
          },
          "auth" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to call OAuth providers"
          },
          "clevercloud" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to call clevercloud"
          },
          "alertEmails" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to send alert emails"
          },
          "authority" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to check authorities"
          },
          "services" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy used to access services targets"
          }
        }
      },
      "otoroshi.models.ApiKeyRotation" : {
        "description" : "Settings for automatic apikey rotation with grace period",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "Rotation enabled",
            "type" : "boolean"
          },
          "rotationEvery" : {
            "format" : "int64",
            "description" : "Rotate every n hours",
            "type" : "integer"
          },
          "gracePeriod" : {
            "format" : "int64",
            "description" : "period (in hours) during which both secrets works",
            "type" : "integer"
          },
          "nextSecret" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Next client_secret value"
          }
        }
      },
      "otoroshi.utils.http.CacheConnectionSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "queueSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.tcp.SniSettings" : {
        "description" : "SNI settings for a TCP proxy",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "SNI extraction enabled",
            "type" : "boolean"
          },
          "forwardIfNoMatch" : {
            "description" : "",
            "type" : "boolean"
          },
          "forwardsTo" : {
            "description" : "forwards call to",
            "$ref" : "#/components/schemas/otoroshi.tcp.TcpTarget"
          }
        }
      },
      "otoroshi.models.LoadBalancing" : {
        "type" : "object",
        "description" : "Loadbalancing strategy",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "BestResponseTime", "IpAddressHash", "Random", "RoundRobin", "Sticky", "WeightedBestResponseTime" ]
          },
          "ratio" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "otoroshi.models.RedirectionSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "code" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "to" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.OtoroshiAdmin" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.WebAuthnOtoroshiAdmin"
        } ]
      },
      "otoroshi.models.JwtVerifier" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.LocalJwtVerifier"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.RefJwtVerifier"
        } ]
      },
      "otoroshi.utils.mailer.EmailLocation" : {
        "description" : "Email location settings",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Destination name",
            "type" : "string"
          },
          "email" : {
            "description" : "Email address",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.RackMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rack" : {
            "description" : "???",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          }
        }
      },
      "otoroshi.models.ESAlgoSettings" : {
        "description" : "Settings to use elliptic curve signing algorithm",
        "type" : "object",
        "properties" : {
          "privateKey" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "The EC private key. If used for verification, can be null"
          },
          "size" : {
            "format" : "int32",
            "description" : "SHA function size",
            "type" : "integer"
          },
          "publicKey" : {
            "description" : "The EC private key. If used for signing, can be null",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          }
        }
      },
      "otoroshi.models.NoneGeolocationSettings" : {
        "type" : "object",
        "description" : "No geolocation extraction",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "none" ]
          }
        }
      },
      "WebAuthnRegistrationStartBody" : {
        "type" : "object",
        "description" : ""
      },
      "PatchDocument" : {
        "type" : "object",
        "description" : "A JSONPatch document as defined by RFC 6902",
        "required" : [ "op", "path" ],
        "properties" : {
          "op" : {
            "type" : "string",
            "description" : "The operation to be performed",
            "enum" : [ "add", "remove", "replace", "move", "copy", "test" ]
          },
          "path" : {
            "type" : "string",
            "description" : "A JSON-Pointer"
          },
          "value" : {
            "type" : "object",
            "description" : "The value to be used within the operations."
          },
          "from" : {
            "type" : "string",
            "description" : "A string containing a JSON Pointer value."
          }
        }
      },
      "otoroshi.models.Tenant" : {
        "description" : "An otoroshi model for an organization (otoroshi-ui)",
        "type" : "object",
        "properties" : {
          "description" : {
            "description" : "Entity description",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "name" : {
            "description" : "Entity name",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "id" : {
            "description" : "Entity id",
            "$ref" : "#/components/schemas/otoroshi.models.TenantId"
          }
        }
      },
      "otoroshi.models.BackOfficeUser" : {
        "description" : "User session for otoroshi-ui admins",
        "type" : "object",
        "properties" : {
          "randomId" : {
            "description" : "Session user random id",
            "type" : "string"
          },
          "profile" : {
            "description" : "Session user profile",
            "type" : "object"
          },
          "authConfigId" : {
            "description" : "Session created from auth module id",
            "type" : "string"
          },
          "rights" : {
            "description" : "Session user rights",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "createdAt" : {
            "description" : "Creation date for the session",
            "type" : "number"
          },
          "token" : {
            "description" : "Session tokens (only if OAuth/OIDC)",
            "type" : "object"
          },
          "name" : {
            "description" : "Session user name",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "email" : {
            "description" : "User email",
            "type" : "string"
          },
          "simpleLogin" : {
            "description" : "Session generated from a simple login module (like basic or ldap)",
            "type" : "boolean"
          },
          "expiredAt" : {
            "description" : "Expiration date for the session",
            "type" : "number"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "lastRefresh" : {
            "description" : "Last refresh of the session (OAuth with refresh tokens)",
            "type" : "number"
          }
        }
      },
      "otoroshi.models.GeolocationSettings" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.IpStackGeolocationSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.MaxmindGeolocationSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.NoneGeolocationSettings"
        } ]
      },
      "otoroshi.events.AlertEvent" : {
        "type" : "object",
        "description" : "Alert trail event"
      },
      "otoroshi.models.ApiDescriptor" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "exposeApi" : {
            "description" : "???",
            "type" : "boolean"
          },
          "openApiDescriptorUrl" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.utils.letsencrypt.LetsEncryptSettings" : {
        "description" : "Settings for connection to a let's encrypt (or ACME) server",
        "type" : "object",
        "properties" : {
          "privateKey" : {
            "description" : "Let's encrypt (ACME) private key",
            "type" : "string"
          },
          "contacts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Let's encrypt (ACME) contacts"
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Let's encrypt (ACME) contact emails"
          },
          "enabled" : {
            "description" : "Let's encrypt (ACME) enabled",
            "type" : "boolean"
          },
          "publicKey" : {
            "description" : "Let's encrypt (ACME) public key",
            "type" : "string"
          },
          "server" : {
            "description" : "Let's encrypt (ACME) server",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgTlsConfig" : {
        "description" : "TLS settings for the http client",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "Enabled",
            "type" : "boolean"
          },
          "certs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Trusted cert. ids"
          },
          "loose" : {
            "description" : "Loose verification",
            "type" : "boolean"
          },
          "trust_all" : {
            "description" : "Trust any certificate",
            "type" : "boolean"
          },
          "trusted_certs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Trusted cert. ids"
          }
        }
      },
      "otoroshi.models.ApiKeyRouteMatcher" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "oneTagIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "noneMetaKeysIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "oneMetaIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "oneMetaKeyIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allMetaKeysIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "noneTagIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allTagsIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allMetaIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "noneMetaIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.GoReplayS3Settings" : {
        "description" : "Settings to export to a S3 bucket",
        "type" : "object",
        "properties" : {
          "s3" : {
            "description" : "S3 bucket access settings",
            "$ref" : "#/components/schemas/otoroshi.storage.drivers.inmemory.S3Configuration"
          },
          "captureRequests" : {
            "description" : "Enable request capture",
            "type" : "boolean"
          },
          "methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Filter on http methods"
          },
          "maxFileSize" : {
            "format" : "int64",
            "description" : "Max file size for rolling",
            "type" : "integer"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "preferBackendRequest" : {
            "description" : "Capture internal requests instead of external",
            "type" : "boolean"
          },
          "captureResponses" : {
            "description" : "Enable response capture",
            "type" : "boolean"
          },
          "preferBackendResponse" : {
            "description" : "Capture internal responses instead of external",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.utils.mailer.SendgridSettings" : {
        "description" : "Settings for the sendgrid mailer",
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "description" : "Sendgrid apikey",
            "type" : "string"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "Destination email address"
          },
          "type" : {
            "description" : "the kind of mailer",
            "type" : "string",
            "enum" : [ "none", "console", "generic", "mailgun", "mailjet", "sendgrid" ]
          }
        }
      },
      "ByteStreamBody" : {
        "type" : "string",
        "description" : ""
      },
      "play.api.libs.ws.DefaultWSProxyServer" : {
        "type" : "object",
        "properties" : {
          "host" : {
            "type" : "string",
            "description" : "The hostname of the proxy server."
          },
          "port" : {
            "type" : "string",
            "description" : "The port of the proxy server."
          },
          "protocol" : {
            "type" : "string",
            "description" : "The protocol of the proxy server.  Use \"http\" or \"https\".  Defaults to \"http\" if not specified."
          },
          "principal" : {
            "type" : "string",
            "description" : "The principal (aka username) of the credentials for the proxy server."
          },
          "password" : {
            "type" : "string",
            "description" : "The password for the credentials for the proxy server."
          },
          "ntlmDomain" : {
            "type" : "string",
            "description" : "The ntlm domain for the proxy server."
          },
          "encoding" : {
            "type" : "string",
            "description" : "The realm's charset."
          },
          "nonProxyHosts" : {
            "type" : "string",
            "description" : "The non proxied hosts"
          }
        },
        "description" : "Proxy server"
      },
      "PemCertificateBody" : {
        "type" : "string",
        "description" : "PEM encoded certificate"
      },
      "otoroshi.models.LargeRequestFaultConfig" : {
        "description" : "Settings for a large request fault (chaos engineering)",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
            "type" : "number"
          },
          "additionalRequestSize" : {
            "format" : "int32",
            "description" : "The size added to the request body in bytes. Added payload will be spaces only.",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.models.NgBackend" : {
        "description" : "A backend representation with it's targets, load balancing and general settings",
        "type" : "object",
        "properties" : {
          "root" : {
            "description" : "The root path of the backend or the full rewrite path",
            "type" : "string"
          },
          "health_check" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.HealthCheck"
            } ],
            "description" : "???"
          },
          "client" : {
            "description" : "Client config. of the backend",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgClientConfig"
          },
          "load_balancing" : {
            "description" : "Loadbalancing config og the backend",
            "$ref" : "#/components/schemas/otoroshi.models.LoadBalancing"
          },
          "rewrite" : {
            "description" : "Does the backend performs a full url rewrite ?",
            "type" : "boolean"
          },
          "target_refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "List of NgStoredBackend ids"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
            },
            "description" : "The targets of the backend"
          }
        }
      },
      "ExperimentalFormResponse" : {
        "type" : "object",
        "description" : "The representation of a form to configure a plugin or an entity"
      },
      "OutagesList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.models.Outage"
        }
      },
      "PluginDescriptionsResponse" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PluginDescription"
        }
      },
      "otoroshi.script.PreRoutingRef" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.next.models.NgCacheConnectionSettings" : {
        "description" : "The settings for http cached connection at host level",
        "type" : "object",
        "properties" : {
          "queue_size" : {
            "format" : "int32",
            "description" : "How much request can be queue before dropping it",
            "type" : "integer"
          },
          "enabled" : {
            "description" : "Is cached connection enabled",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.DataExporterConfig" : {
        "description" : "Data exporter settings",
        "type" : "object",
        "properties" : {
          "desc" : {
            "description" : "Description",
            "type" : "string"
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "bufferSize" : {
            "format" : "int32",
            "description" : "Number of events in buffer",
            "type" : "integer"
          },
          "jsonWorkers" : {
            "format" : "int32",
            "description" : "Number of workers that transform events",
            "type" : "integer"
          },
          "groupDuration" : {
            "description" : "The max duration before sending group",
            "type" : "number"
          },
          "groupSize" : {
            "format" : "int32",
            "description" : "The max size of events group before sending",
            "type" : "integer"
          },
          "type" : {
            "description" : "Entity type",
            "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfigType"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          },
          "sendWorkers" : {
            "format" : "int32",
            "description" : "Number of workers that sends events",
            "type" : "integer"
          },
          "id" : {
            "description" : "Id of the exporter",
            "type" : "string"
          },
          "name" : {
            "description" : "Entity name",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "config" : {
            "description" : "Exporter config",
            "$ref" : "#/components/schemas/otoroshi.models.Exporter"
          },
          "projection" : {
            "description" : "Event projection",
            "type" : "object"
          },
          "enabled" : {
            "description" : "Is the exporter enabled",
            "type" : "boolean"
          },
          "filtering" : {
            "description" : "Filtering options",
            "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfigFiltering"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenKeyPairResponse" : {
        "description" : "Response for a keypair generation operation",
        "type" : "object",
        "properties" : {
          "publicKey" : {
            "description" : "Public key (PEM encoded)",
            "type" : "string"
          },
          "privateKey" : {
            "description" : "Private key (PEM encoded)",
            "type" : "string"
          }
        }
      },
      "BulkBody" : {
        "type" : "string",
        "description" : "Body composed of stringified JSON lines, each one representing an entity"
      },
      "PemCsrBody" : {
        "type" : "string",
        "description" : "PEM encoded csr"
      },
      "Unknown" : {
        "type" : "object",
        "description" : "value used by the openapi generator when no matching type found. Should be fixed in a near future."
      },
      "otoroshi.models.CustomHeadersAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "clientIdHeaderName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "clientSecretHeaderName" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.TlsSettings" : {
        "description" : "Global TLS settings. The default domain that will be picked if no certificate matches the current request",
        "type" : "object",
        "properties" : {
          "trustedCAsServer" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "List for CAs trusted by otoroshi when performing TLS termination"
          },
          "includeJdkCaClient" : {
            "description" : "Use known JDK CAs to build trust when performing request from otoroshi to backends",
            "type" : "boolean"
          },
          "randomIfNotFound" : {
            "description" : "Use a random one",
            "type" : "boolean"
          },
          "defaultDomain" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Default domain to choose if not found from current certificates"
          },
          "includeJdkCaServer" : {
            "description" : "Use known JDK CAs to build trust for incoming request",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.MetricsSettings" : {
        "description" : "Settings to export to otoroshi metrics",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Exported labels for prometheus"
          }
        }
      },
      "otoroshi.models.Sign" : {
        "description" : "jwt token re-sign policy settings",
        "type" : "object",
        "properties" : {
          "algoSettings" : {
            "description" : "Re-signing jwt token settings",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "verificationSettings" : {
            "description" : "Verification settings",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          },
          "type" : {
            "description" : "the kind of strategy",
            "type" : "string",
            "enum" : [ "PassThrough", "Sign", "Transform", "DefaultToken" ]
          }
        }
      },
      "otoroshi.models.PassThrough" : {
        "description" : "jwt token validation policicy that just validate the token",
        "type" : "object",
        "properties" : {
          "verificationSettings" : {
            "description" : "Verification settings",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          },
          "type" : {
            "description" : "the kind of strategy",
            "type" : "string",
            "enum" : [ "PassThrough", "Sign", "Transform", "DefaultToken" ]
          }
        }
      },
      "otoroshi.events.PulsarConfig" : {
        "description" : "Settings for connection to a pulsar cluster",
        "type" : "object",
        "properties" : {
          "mtlsConfig" : {
            "description" : "TLS settings to access pulsar",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "tlsTrustCertsFilePath" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Truststore path"
          },
          "namespace" : {
            "description" : "Pulsar namespace",
            "type" : "string"
          },
          "topic" : {
            "description" : "Pulsar topic",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "uri" : {
            "description" : "Pulsar access uri",
            "type" : "string"
          },
          "tenant" : {
            "description" : "Pulsar tenant",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.Restrictions" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "forbidden" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.RestrictionPath"
            },
            "description" : "???"
          },
          "allowed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.RestrictionPath"
            },
            "description" : "???"
          },
          "notFound" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.RestrictionPath"
            },
            "description" : "???"
          },
          "allowLast" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.events.StatsdConfig" : {
        "description" : "Settings for connection to a statsd agent",
        "type" : "object",
        "properties" : {
          "datadog" : {
            "description" : "Datadog agent",
            "type" : "boolean"
          },
          "host" : {
            "description" : "The host of the StatsD agent",
            "type" : "string"
          },
          "port" : {
            "format" : "int32",
            "description" : "The port of the StatsD agent",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.JWKSAlgoSettings" : {
        "description" : "Settings to use keypair from JWKS for verification",
        "type" : "object",
        "properties" : {
          "kty" : {
            "description" : "Key type",
            "type" : "string"
          },
          "proxy" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "Web proxy for http client"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Http header when fetching JWKS"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          },
          "ttl" : {
            "description" : "Cache ttl",
            "type" : "number"
          },
          "url" : {
            "description" : "JWKS url",
            "type" : "string"
          },
          "timeout" : {
            "description" : "Timeout when fetching JWKS",
            "type" : "number"
          },
          "tlsConfig" : {
            "description" : "TLS config",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          }
        }
      },
      "otoroshi.models.IpFiltering" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "whitelist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "blacklist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenCsrResponse" : {
        "description" : "Response for a csr generation operation",
        "type" : "object",
        "properties" : {
          "csr" : {
            "description" : "CSR (PEM encoded)",
            "type" : "string"
          },
          "publicKey" : {
            "description" : "Public key (PEM encoded)",
            "type" : "string"
          },
          "privateKey" : {
            "description" : "Private key (PEM encoded)",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.MaxmindGeolocationSettings" : {
        "description" : "Settings for connection to a maxmind db",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "Maxmlind db file path",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of geolocation",
            "type" : "string",
            "enum" : [ "none", "maxmind", "ipstack" ]
          },
          "enabled" : {
            "description" : "Geolocation using maxmind db enabled",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.LatencyInjectionFaultConfig" : {
        "description" : "Settings for a latency injection fault (chaos engineering)",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "The percentage of requests affected by this fault. Value should be between 0.0 and 1.0",
            "type" : "number"
          },
          "from" : {
            "description" : "The start range of latency added to the request",
            "type" : "number"
          },
          "to" : {
            "description" : "The end range of latency added to the request",
            "type" : "number"
          }
        }
      },
      "otoroshi.models.RSAKPAlgoSettings" : {
        "description" : "Settings to use RSA signing algorithm from a certificate keypair",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "SHA function size",
            "type" : "integer"
          },
          "certId" : {
            "description" : "Certificate id",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          }
        }
      },
      "otoroshi.utils.mailer.MailerSettings" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.ConsoleMailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.GenericMailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailgunSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailjetSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.NoneMailerSettings"
        }, {
          "$ref" : "#/components/schemas/otoroshi.utils.mailer.SendgridSettings"
        } ]
      },
      "otoroshi.models.InQueryParam" : {
        "description" : "JWT token location (query param)",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "Query param name",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of location",
            "type" : "string",
            "enum" : [ "InQueryParam", "InHeader", "InCookie" ]
          }
        }
      },
      "otoroshi.models.EntityLocation" : {
        "description" : "Location of any entity (teams and organization)",
        "type" : "object",
        "properties" : {
          "tenant" : {
            "description" : "Organization of the current entity",
            "$ref" : "#/components/schemas/otoroshi.models.TenantId"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.TeamId"
            },
            "description" : "Teams of the current entity"
          }
        }
      },
      "otoroshi.events.AuditEvent" : {
        "type" : "object",
        "description" : "Audit trail event"
      },
      "otoroshi.models.ErrorTemplate" : {
        "description" : "Service descriptor error template",
        "type" : "object",
        "properties" : {
          "template50x" : {
            "description" : "The 50x error html template",
            "type" : "string"
          },
          "templateMaintenance" : {
            "description" : "The maintenance html template",
            "type" : "string"
          },
          "templateBuild" : {
            "description" : "The build html template",
            "type" : "string"
          },
          "serviceId" : {
            "description" : "Service id for this template",
            "type" : "string"
          },
          "messages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Map of messages"
          },
          "template40x" : {
            "description" : "The 40x error html template",
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.mailer.NoneMailerSettings" : {
        "description" : "Settings for the /dev/null mailer",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "the kind of mailer",
            "type" : "string",
            "enum" : [ "none", "console", "generic", "mailgun", "mailjet", "sendgrid" ]
          }
        }
      },
      "otoroshi.models.SecComInfoTokenVersion" : {
        "type" : "string",
        "enum" : [ "Legacy", "Latest" ],
        "description" : "Version of the info token"
      },
      "BulkPatchBody" : {
        "type" : "object",
        "description" : "BulkPatchBody object"
      },
      "GlobalConfigImportBody" : {
        "type" : "object",
        "description" : ""
      },
      "otoroshi.auth.AuthModuleConfig" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.auth.BasicAuthModuleConfig"
        }, {
          "$ref" : "#/components/schemas/otoroshi.auth.GenericOauth2ModuleConfig"
        }, {
          "$ref" : "#/components/schemas/otoroshi.auth.LdapAuthModuleConfig"
        }, {
          "$ref" : "#/components/schemas/otoroshi.auth.Oauth1ModuleConfig"
        }, {
          "$ref" : "#/components/schemas/otoroshi.auth.SamlAuthModuleConfig"
        } ]
      },
      "otoroshi.utils.mailer.GenericMailerSettings" : {
        "description" : "Settings for the generic mailer (http requests)",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Sender headers"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "Destination email address"
          },
          "type" : {
            "description" : "the kind of mailer",
            "type" : "string",
            "enum" : [ "none", "console", "generic", "mailgun", "mailjet", "sendgrid" ]
          },
          "url" : {
            "description" : "Sender URL",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.GoReplayFileSettings" : {
        "description" : "Settings to export to a file",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "File path",
            "type" : "string"
          },
          "captureRequests" : {
            "description" : "Enable request capture",
            "type" : "boolean"
          },
          "methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Filter on http methods"
          },
          "maxFileSize" : {
            "format" : "int64",
            "description" : "Max file size for rolling",
            "type" : "integer"
          },
          "type" : {
            "description" : "the kind of exporter",
            "type" : "string",
            "enum" : [ "elastic", "webhook", "kafka", "pulsar", "file", "mailer", "custom", "console", "metrics" ]
          },
          "preferBackendRequest" : {
            "description" : "Capture internal requests instead of external",
            "type" : "boolean"
          },
          "captureResponses" : {
            "description" : "Enable response capture",
            "type" : "boolean"
          },
          "preferBackendResponse" : {
            "description" : "Capture internal responses instead of external",
            "type" : "boolean"
          }
        }
      },
      "Null" : {
        "type" : "object",
        "description" : "no value object, used to represent a None option value"
      },
      "TargetsList" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/otoroshi.models.Target"
        }
      },
      "otoroshi.models.WebAuthnOtoroshiAdmin" : {
        "description" : "An otoroshi admin user that uses webauthn at login",
        "type" : "object",
        "properties" : {
          "createdAt" : {
            "description" : "User creation date",
            "type" : "number"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "Entity metadata"
          },
          "password" : {
            "description" : "User password",
            "type" : "string"
          },
          "credentials" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "User webauthn credentials"
          },
          "rights" : {
            "description" : "User rights",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "typ" : {
            "description" : "User type",
            "$ref" : "#/components/schemas/otoroshi.models.OtoroshiAdminType"
          },
          "handle" : {
            "description" : "User webauthn handle",
            "type" : "string"
          },
          "label" : {
            "description" : "User label",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of admin",
            "type" : "string",
            "enum" : [ "simple", "webauthn" ]
          },
          "_loc" : {
            "description" : "Entity location",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "username" : {
            "description" : "User username",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Entity tags"
          }
        }
      },
      "PatchBody" : {
        "type" : "array",
        "items" : {
          "$ref" : "#/components/schemas/PatchDocument"
        }
      },
      "otoroshi.models.DataCenterMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "type" : {
            "description" : "the kind of predicate",
            "type" : "string",
            "enum" : [ "AlwaysMatch", "NetworkLocationMatch", "GeolocationMatch" ]
          },
          "dc" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.JwtTokenLocation" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/otoroshi.models.InCookie"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.InHeader"
        }, {
          "$ref" : "#/components/schemas/otoroshi.models.InQueryParam"
        } ]
      },
      "otoroshi.models.HSAlgoSettings" : {
        "description" : "Settings to use HMAC-SHA signing algorithm",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "Size for SHA function",
            "type" : "integer"
          },
          "base64" : {
            "description" : "The secret is base64 encoded",
            "type" : "boolean"
          },
          "secret" : {
            "description" : "HMAC secret",
            "type" : "string"
          },
          "type" : {
            "description" : "the kind of algosettings",
            "type" : "string",
            "enum" : [ "HSAlgoSettings", "RSAlgoSettings", "ESAlgoSettings", "JWKSAlgoSettings", "RSAKPAlgoSettings", "ESKPAlgoSettings", "KidAlgoSettings" ]
          }
        }
      },
      "otoroshi.next.models.NgTarget" : {
        "description" : "A target where incoming requests will be forwarded",
        "type" : "object",
        "properties" : {
          "ip_address" : {
            "oneOf" : [ {
              "type" : "string",
              "nullable" : true,
              "description" : "null type"
            }, {
              "type" : "string"
            } ],
            "description" : "Target ip address. Usefull to make manual DNS resolution without breaking SNI"
          },
          "protocol" : {
            "description" : "Protocol for the target",
            "type" : "string",
            "enum" : [ "HTTP/1.0", "HTTP/1.1", "HTTP/2.0" ]
          },
          "predicate" : {
            "description" : "Predicate to choose this target",
            "$ref" : "#/components/schemas/otoroshi.models.TargetPredicate"
          },
          "tls_config" : {
            "description" : "TLS settings to contact this target",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgTlsConfig"
          },
          "tls" : {
            "description" : "Does the target uses TLS",
            "type" : "boolean"
          },
          "port" : {
            "format" : "int32",
            "description" : "port of the target",
            "type" : "integer"
          },
          "id" : {
            "description" : "id of the target",
            "type" : "string"
          },
          "weight" : {
            "format" : "int32",
            "description" : "The weight of the target when choosing",
            "type" : "integer"
          },
          "hostname" : {
            "description" : "hostname of the target",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.UserAgentSettings" : {
        "description" : "Settings to extract informations about user agent (for otoroshi events)",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "User agent extraction enabled",
            "type" : "boolean"
          }
        }
      }
    },
    "securitySchemes" : {
      "otoroshi_auth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}