{
  "WebauthnAdminList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "createdAt" : {
          "description" : "User creation date",
          "type" : "number"
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "Entity metadata"
        },
        "password" : {
          "description" : "User password",
          "type" : "string"
        },
        "credentials" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "object"
          },
          "description" : "User webauthn credentials"
        },
        "rights" : {
          "description" : "User rights",
          "type" : "object",
          "properties" : { }
        },
        "handle" : {
          "description" : "User webauthn handle",
          "type" : "string"
        },
        "typ" : {
          "description" : "User type",
          "type" : "object",
          "properties" : { }
        },
        "label" : {
          "description" : "User label",
          "type" : "string"
        },
        "type" : {
          "description" : "the kind of admin",
          "type" : "string",
          "enum" : [ "simple", "webauthn" ]
        },
        "_loc" : {
          "description" : "Entity location",
          "type" : "object",
          "properties" : { }
        },
        "username" : {
          "description" : "User username",
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "Entity tags"
        }
      }
    }
  },
  "ErrorTemplateList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "template50x" : {
          "description" : "The 50x error html template",
          "type" : "string"
        },
        "templateMaintenance" : {
          "description" : "The maintenance html template",
          "type" : "string"
        },
        "templateBuild" : {
          "description" : "The build html template",
          "type" : "string"
        },
        "serviceId" : {
          "description" : "Service id for this template",
          "type" : "string"
        },
        "messages" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "Map of messages"
        },
        "template40x" : {
          "description" : "The 40x error html template",
          "type" : "string"
        }
      }
    }
  },
  "TokenResponse" : {
    "type" : "object",
    "description" : "User login token response",
    "properties" : {
      "valid" : {
        "type" : "string"
      }
    }
  },
  "ScriptsList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "Entity metadata"
        },
        "code" : {
          "description" : "The code of the script",
          "type" : "string"
        },
        "name" : {
          "description" : "The name of the script",
          "type" : "string"
        },
        "id" : {
          "description" : "The id of the script",
          "type" : "string"
        },
        "type" : {
          "description" : "Plugin type",
          "type" : "object",
          "properties" : { }
        },
        "_loc" : {
          "description" : "Entity location",
          "type" : "object",
          "properties" : { }
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "Entity tags"
        },
        "desc" : {
          "description" : "The description of the script",
          "type" : "string"
        }
      }
    }
  },
  "Done" : {
    "type" : "object",
    "description" : "operation is done",
    "properties" : {
      "done" : {
        "type" : "boolean"
      }
    }
  },
  "otoroshi.models.Team" : {
    "description" : "An otoroshi model for a team of users in the organization (otoroshi-ui)",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "name" : {
        "description" : "Entity name",
        "type" : "string"
      },
      "description" : {
        "description" : "Entity description",
        "type" : "string"
      },
      "id" : {
        "description" : "Entity id",
        "type" : "object",
        "properties" : { }
      },
      "tenant" : {
        "description" : "Entity organization",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  },
  "ServiceDescriptorList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "removeHeadersIn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "missingOnlyHeadersOut" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "tcpUdpTunneling" : {
          "description" : "???",
          "type" : "boolean"
        },
        "cors" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "forceHttps" : {
          "description" : "???",
          "type" : "boolean"
        },
        "matchingRoot" : {
          "nullable" : true,
          "description" : "null type",
          "type" : "string"
        },
        "plugins" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "letsEncrypt" : {
          "description" : "???",
          "type" : "boolean"
        },
        "useNewWSClient" : {
          "description" : "???",
          "type" : "boolean"
        },
        "chaosConfig" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "secComSettings" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "detectApiKeySooner" : {
          "description" : "???",
          "type" : "boolean"
        },
        "transformerRefs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "secComAlgoInfoToken" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "missingOnlyHeadersIn" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "secComAlgoChallengeOtoToBack" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "removeHeadersOut" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "stripPath" : {
          "description" : "???",
          "type" : "boolean"
        },
        "localHost" : {
          "description" : "???",
          "type" : "string"
        },
        "sendOtoroshiHeadersBack" : {
          "description" : "???",
          "type" : "boolean"
        },
        "id" : {
          "description" : "???",
          "type" : "string"
        },
        "api" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "secComTtl" : {
          "description" : "???",
          "type" : "number"
        },
        "secComVersion" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "targetsLoadBalancing" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "userFacing" : {
          "description" : "???",
          "type" : "boolean"
        },
        "hosts" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "restrictions" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "readOnly" : {
          "description" : "???",
          "type" : "boolean"
        },
        "secComInfoTokenVersion" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "_loc" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "enforceSecureCommunication" : {
          "description" : "???",
          "type" : "boolean"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "clientValidatorRef" : {
          "nullable" : true,
          "description" : "null type",
          "type" : "string"
        },
        "privateApp" : {
          "description" : "???",
          "type" : "boolean"
        },
        "paths" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "domain" : {
          "description" : "???",
          "type" : "string"
        },
        "name" : {
          "description" : "???",
          "type" : "string"
        },
        "transformerConfig" : {
          "description" : "???",
          "type" : "object"
        },
        "subdomain" : {
          "description" : "???",
          "type" : "string"
        },
        "maintenanceMode" : {
          "description" : "???",
          "type" : "boolean"
        },
        "secComHeaders" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "handleLegacyDomain" : {
          "description" : "???",
          "type" : "boolean"
        },
        "logAnalyticsOnServer" : {
          "description" : "???",
          "type" : "boolean"
        },
        "strictlyPrivate" : {
          "description" : "???",
          "type" : "boolean"
        },
        "description" : {
          "description" : "???",
          "type" : "string"
        },
        "buildMode" : {
          "description" : "???",
          "type" : "boolean"
        },
        "targets" : {
          "description" : "???",
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "predicate" : {
                "description" : "???",
                "type" : "object",
                "properties" : { }
              },
              "metadata" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "???"
              },
              "protocol" : {
                "description" : "???",
                "type" : "string",
                "enum" : [ "HTTP/1.0", "HTTP/1.1", "HTTP/2.0" ]
              },
              "scheme" : {
                "description" : "???",
                "type" : "string"
              },
              "mtlsConfig" : {
                "description" : "???",
                "type" : "object",
                "properties" : { }
              },
              "host" : {
                "description" : "???",
                "type" : "string"
              },
              "ipAddress" : {
                "nullable" : true,
                "description" : "null type",
                "type" : "string"
              },
              "weight" : {
                "format" : "int32",
                "description" : "???",
                "type" : "integer"
              },
              "tags" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                },
                "description" : "???"
              }
            }
          }
        },
        "enabled" : {
          "description" : "???",
          "type" : "boolean"
        },
        "additionalHeadersOut" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "sendStateChallenge" : {
          "description" : "???",
          "type" : "boolean"
        },
        "root" : {
          "description" : "???",
          "type" : "string"
        },
        "additionalHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "issueCertCA" : {
          "nullable" : true,
          "description" : "null type",
          "type" : "string"
        },
        "ipFiltering" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "redirection" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "redirectToLocal" : {
          "description" : "???",
          "type" : "boolean"
        },
        "headersVerification" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "useAkkaHttpClient" : {
          "description" : "???",
          "type" : "boolean"
        },
        "securityExcludedPatterns" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "authConfigRef" : {
          "nullable" : true,
          "description" : "null type",
          "type" : "string"
        },
        "canary" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "preRouting" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "secComExcludedPatterns" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "xForwardedHeaders" : {
          "description" : "???",
          "type" : "boolean"
        },
        "apiKeyConstraints" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "sendInfoToken" : {
          "description" : "???",
          "type" : "boolean"
        },
        "issueCert" : {
          "description" : "???",
          "type" : "boolean"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "privatePatterns" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "gzip" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "clientConfig" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "env" : {
          "description" : "???",
          "type" : "string"
        },
        "jwtVerifier" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "allowHttp10" : {
          "description" : "???",
          "type" : "boolean"
        },
        "publicPatterns" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "secComAlgoChallengeBackToOto" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "localScheme" : {
          "description" : "???",
          "type" : "string"
        },
        "healthCheck" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "matchingHeaders" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "overrideHost" : {
          "description" : "???",
          "type" : "boolean"
        },
        "secComUseSameAlgo" : {
          "description" : "???",
          "type" : "boolean"
        },
        "accessValidator" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        }
      }
    }
  },
  "otoroshi.models.ApiKey" : {
    "description" : "An otoroshi apikey that can allow you to access some services",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Bunch of metadata for the key"
      },
      "clientId" : {
        "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
        "type" : "string"
      },
      "clientName" : {
        "description" : "The name of the api key, for humans ;-)",
        "type" : "string"
      },
      "rotation" : {
        "description" : "Apikey rotation settings",
        "type" : "object",
        "properties" : { }
      },
      "description" : {
        "description" : "Description of this apikey",
        "type" : "string"
      },
      "restrictions" : {
        "description" : "Apikey restrictions settings",
        "type" : "object",
        "properties" : { }
      },
      "readOnly" : {
        "description" : "The apikey only allow access for GET, HEAD and OPTIONS verbs",
        "type" : "boolean"
      },
      "_loc" : {
        "description" : "The location of the apikey",
        "type" : "object",
        "properties" : { }
      },
      "enabled" : {
        "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
        "type" : "boolean"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Apikey tags"
      },
      "throttlingQuota" : {
        "format" : "int64",
        "description" : "Authorized number of calls per second, measured on 10 seconds",
        "type" : "integer"
      },
      "constrainedServicesOnly" : {
        "description" : "This apikey can only be used on services that constrained their apikey routing",
        "type" : "boolean"
      },
      "allowClientIdOnly" : {
        "description" : "This apikey can be used juste with the client_id value",
        "type" : "boolean"
      },
      "monthlyQuota" : {
        "format" : "int64",
        "description" : "Authorized number of calls per month",
        "type" : "integer"
      },
      "validUntil" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "authorizedEntities" : {
        "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "clientSecret" : {
        "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
        "type" : "string"
      },
      "dailyQuota" : {
        "format" : "int64",
        "description" : "Authorized number of calls per day",
        "type" : "integer"
      }
    }
  },
  "otoroshi.models.GlobalJwtVerifier" : {
    "description" : "Otoroshi model for JWT token verifier",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "algoSettings" : {
        "description" : "Algo settings of the verifier",
        "type" : "object",
        "properties" : { }
      },
      "name" : {
        "description" : "Verifier name",
        "type" : "string"
      },
      "id" : {
        "description" : "Verifier id",
        "type" : "string"
      },
      "source" : {
        "description" : "Where to find the jwt token",
        "type" : "object",
        "properties" : { }
      },
      "type" : {
        "description" : "the kind of verifier",
        "type" : "string",
        "enum" : [ "global" ]
      },
      "strict" : {
        "description" : "Does it fail if JWT not found",
        "type" : "boolean"
      },
      "strategy" : {
        "description" : "The strategy of the verifier",
        "type" : "object",
        "properties" : { }
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "desc" : {
        "description" : "Verifier description",
        "type" : "string"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  },
  "otoroshi.models.ServiceGroup" : {
    "description" : "The otoroshi model for a group of services",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Just a bunch of random properties"
      },
      "name" : {
        "description" : "The name of your service. Only for debug and human readability purposes",
        "type" : "string"
      },
      "description" : {
        "description" : "Entity description",
        "type" : "string"
      },
      "id" : {
        "description" : "A unique random string to identify your service",
        "type" : "string"
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  },
  "otoroshi.script.Script" : {
    "description" : "An otoroshi plugins stored as scala code in the otoroshi datastore",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "code" : {
        "description" : "The code of the script",
        "type" : "string"
      },
      "name" : {
        "description" : "The name of the script",
        "type" : "string"
      },
      "id" : {
        "description" : "The id of the script",
        "type" : "string"
      },
      "type" : {
        "description" : "Plugin type",
        "type" : "object",
        "properties" : { }
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "desc" : {
        "description" : "The description of the script",
        "type" : "string"
      }
    }
  },
  "otoroshi.next.models.StoredNgTarget" : {
    "description" : "A target that can be stored in the otoroshi datastore",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "The metadata of the target"
      },
      "name" : {
        "description" : "The name of the target",
        "type" : "string"
      },
      "description" : {
        "description" : "The description of the target",
        "type" : "string"
      },
      "id" : {
        "description" : "The id of the target",
        "type" : "string"
      },
      "_loc" : {
        "description" : "The location of the target",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "The tags of the target"
      },
      "target" : {
        "description" : "The actual target",
        "type" : "object",
        "properties" : { }
      }
    }
  },
  "AuditEventList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : { }
    }
  },
  "otoroshi.models.ServiceDescriptor" : {
    "description" : "???",
    "type" : "object",
    "properties" : {
      "removeHeadersIn" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "missingOnlyHeadersOut" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "tcpUdpTunneling" : {
        "description" : "???",
        "type" : "boolean"
      },
      "cors" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "forceHttps" : {
        "description" : "???",
        "type" : "boolean"
      },
      "matchingRoot" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "plugins" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "letsEncrypt" : {
        "description" : "???",
        "type" : "boolean"
      },
      "useNewWSClient" : {
        "description" : "???",
        "type" : "boolean"
      },
      "chaosConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "secComSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "detectApiKeySooner" : {
        "description" : "???",
        "type" : "boolean"
      },
      "transformerRefs" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "secComAlgoInfoToken" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "missingOnlyHeadersIn" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "secComAlgoChallengeOtoToBack" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "removeHeadersOut" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "stripPath" : {
        "description" : "???",
        "type" : "boolean"
      },
      "localHost" : {
        "description" : "???",
        "type" : "string"
      },
      "sendOtoroshiHeadersBack" : {
        "description" : "???",
        "type" : "boolean"
      },
      "id" : {
        "description" : "???",
        "type" : "string"
      },
      "api" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "secComTtl" : {
        "description" : "???",
        "type" : "number"
      },
      "secComVersion" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "targetsLoadBalancing" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "userFacing" : {
        "description" : "???",
        "type" : "boolean"
      },
      "hosts" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "restrictions" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "readOnly" : {
        "description" : "???",
        "type" : "boolean"
      },
      "secComInfoTokenVersion" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "_loc" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "enforceSecureCommunication" : {
        "description" : "???",
        "type" : "boolean"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "clientValidatorRef" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "privateApp" : {
        "description" : "???",
        "type" : "boolean"
      },
      "paths" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "domain" : {
        "description" : "???",
        "type" : "string"
      },
      "name" : {
        "description" : "???",
        "type" : "string"
      },
      "transformerConfig" : {
        "description" : "???",
        "type" : "object"
      },
      "subdomain" : {
        "description" : "???",
        "type" : "string"
      },
      "maintenanceMode" : {
        "description" : "???",
        "type" : "boolean"
      },
      "secComHeaders" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "handleLegacyDomain" : {
        "description" : "???",
        "type" : "boolean"
      },
      "logAnalyticsOnServer" : {
        "description" : "???",
        "type" : "boolean"
      },
      "strictlyPrivate" : {
        "description" : "???",
        "type" : "boolean"
      },
      "description" : {
        "description" : "???",
        "type" : "string"
      },
      "buildMode" : {
        "description" : "???",
        "type" : "boolean"
      },
      "targets" : {
        "description" : "???",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : {
            "predicate" : {
              "description" : "???",
              "type" : "object",
              "properties" : { }
            },
            "metadata" : {
              "type" : "object",
              "additionalProperties" : {
                "type" : "string"
              },
              "description" : "???"
            },
            "protocol" : {
              "description" : "???",
              "type" : "string",
              "enum" : [ "HTTP/1.0", "HTTP/1.1", "HTTP/2.0" ]
            },
            "scheme" : {
              "description" : "???",
              "type" : "string"
            },
            "mtlsConfig" : {
              "description" : "???",
              "type" : "object",
              "properties" : { }
            },
            "host" : {
              "description" : "???",
              "type" : "string"
            },
            "ipAddress" : {
              "nullable" : true,
              "description" : "null type",
              "type" : "string"
            },
            "weight" : {
              "format" : "int32",
              "description" : "???",
              "type" : "integer"
            },
            "tags" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              },
              "description" : "???"
            }
          }
        }
      },
      "enabled" : {
        "description" : "???",
        "type" : "boolean"
      },
      "additionalHeadersOut" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "sendStateChallenge" : {
        "description" : "???",
        "type" : "boolean"
      },
      "root" : {
        "description" : "???",
        "type" : "string"
      },
      "additionalHeaders" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "issueCertCA" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "ipFiltering" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "redirection" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "redirectToLocal" : {
        "description" : "???",
        "type" : "boolean"
      },
      "headersVerification" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "useAkkaHttpClient" : {
        "description" : "???",
        "type" : "boolean"
      },
      "securityExcludedPatterns" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "authConfigRef" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "canary" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "preRouting" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "secComExcludedPatterns" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "xForwardedHeaders" : {
        "description" : "???",
        "type" : "boolean"
      },
      "apiKeyConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "sendInfoToken" : {
        "description" : "???",
        "type" : "boolean"
      },
      "issueCert" : {
        "description" : "???",
        "type" : "boolean"
      },
      "groups" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "privatePatterns" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "gzip" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "clientConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "env" : {
        "description" : "???",
        "type" : "string"
      },
      "jwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "allowHttp10" : {
        "description" : "???",
        "type" : "boolean"
      },
      "publicPatterns" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "secComAlgoChallengeBackToOto" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "localScheme" : {
        "description" : "???",
        "type" : "string"
      },
      "healthCheck" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "matchingHeaders" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "overrideHost" : {
        "description" : "???",
        "type" : "boolean"
      },
      "secComUseSameAlgo" : {
        "description" : "???",
        "type" : "boolean"
      },
      "accessValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      }
    }
  },
  "otoroshi.ssl.Cert" : {
    "description" : "The otoroshi model for X509 certificates",
    "type" : "object",
    "properties" : {
      "certType" : {
        "type" : "string",
        "description" : "the kind of certificate",
        "enum" : [ "client", "ca", "letsEncrypt", "keypair", "selfSigned", "certificate" ]
      },
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "subject" : {
        "description" : "Certificate subject",
        "type" : "string"
      },
      "letsEncrypt" : {
        "description" : "Let's encrypt (ACME) generated",
        "type" : "boolean"
      },
      "keypair" : {
        "description" : "Is cert used for its keypair only ?",
        "type" : "boolean"
      },
      "description" : {
        "description" : "Entity description",
        "type" : "string"
      },
      "revoked" : {
        "description" : "Certificate is revoked",
        "type" : "boolean"
      },
      "valid" : {
        "description" : "Is cert valid",
        "type" : "boolean"
      },
      "password" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "autoRenew" : {
        "description" : "Auto renew cert",
        "type" : "boolean"
      },
      "exposed" : {
        "description" : "Is the cert exposed (public key exposed in jwks.json)",
        "type" : "boolean"
      },
      "client" : {
        "description" : "Is cert a client cert ?",
        "type" : "boolean"
      },
      "from" : {
        "description" : "Start date",
        "type" : "number"
      },
      "selfSigned" : {
        "description" : "Is cert self signed",
        "type" : "boolean"
      },
      "id" : {
        "description" : "Entity id",
        "type" : "string"
      },
      "ca" : {
        "description" : "Is cert a CA ?",
        "type" : "boolean"
      },
      "chain" : {
        "description" : "Certicates chain (PEM encoded)",
        "type" : "string"
      },
      "sans" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Certificate SANs"
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "privateKey" : {
        "description" : "Certificate private key (PEM encoded)",
        "type" : "string"
      },
      "caRef" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "domain" : {
        "description" : "Certificate domain",
        "type" : "string"
      },
      "name" : {
        "description" : "Entity name",
        "type" : "string"
      },
      "to" : {
        "description" : "Stop date",
        "type" : "number"
      }
    }
  },
  "otoroshi.next.models.NgRoute" : {
    "description" : "A routing primitive representing how a request is matched and where the request is forwarded",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "The metadata of the route"
      },
      "backend_ref" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "capture" : {
        "description" : "Capture http traffic",
        "type" : "boolean"
      },
      "groups" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "The groups of the route"
      },
      "description" : {
        "description" : "The description of the route",
        "type" : "string"
      },
      "_loc" : {
        "description" : "The location of the route",
        "type" : "object",
        "properties" : { }
      },
      "enabled" : {
        "description" : "Is the route enabled",
        "type" : "boolean"
      },
      "export_reporting" : {
        "description" : "Export the execution reporting through standard data exporter",
        "type" : "boolean"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "The tags of the route"
      },
      "debug_flow" : {
        "description" : "Enable report debugging",
        "type" : "boolean"
      },
      "name" : {
        "description" : "The name of the route",
        "type" : "string"
      },
      "backend" : {
        "description" : "The backend of the route",
        "type" : "object",
        "properties" : { }
      },
      "id" : {
        "description" : "The ud of the route",
        "type" : "string"
      },
      "frontend" : {
        "description" : "The frontend of the route",
        "type" : "object",
        "properties" : { }
      }
    }
  },
  "otoroshi.models.GlobalConfig" : {
    "description" : "The global config (dynamic) for otoroshi",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "backOfficeAuthRef" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "plugins" : {
        "description" : "global plugins settings",
        "type" : "object",
        "properties" : { }
      },
      "elasticReadsConfig" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "logAnalyticsOnServer" : {
        "description" : "Log analytics event on the server",
        "type" : "boolean"
      },
      "tlsSettings" : {
        "description" : "TLS settings",
        "type" : "object",
        "properties" : { }
      },
      "geolocationSettings" : {
        "description" : "Settings for geolocation extraction",
        "type" : "object",
        "properties" : { }
      },
      "autoCert" : {
        "description" : "Auto certs settings",
        "type" : "object",
        "properties" : { }
      },
      "endlessIpAddresses" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros"
      },
      "streamEntityOnly" : {
        "description" : "HTTP will be streamed only. Doesn't work with old browsers",
        "type" : "boolean"
      },
      "alertsEmails" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Email addresses that will receive all Otoroshi alert events"
      },
      "middleFingers" : {
        "description" : "Use middle finger emoji as a response character for endless HTTP responses",
        "type" : "boolean"
      },
      "alertsWebhooks" : {
        "description" : "Webhook that will receive all Otoroshi alert events",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "maxWebhookSize" : {
        "format" : "int32",
        "description" : "Max number of items in webhooks",
        "type" : "integer"
      },
      "cleverSettings" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "u2fLoginOnly" : {
        "description" : "If enabled, login to backoffice through Auth0 will be disabled",
        "type" : "boolean"
      },
      "userAgentSettings" : {
        "description" : "Settings for useragent extraction",
        "type" : "object",
        "properties" : { }
      },
      "otoroshiId" : {
        "description" : "Unique id for this otoroshi instance",
        "type" : "string"
      },
      "proxies" : {
        "description" : "Web proxies settings",
        "type" : "object",
        "properties" : { }
      },
      "mailerSettings" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "ipFiltering" : {
        "description" : "Global ip filtering settings",
        "type" : "object",
        "properties" : { }
      },
      "lines" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Possibles lines for Otoroshi"
      },
      "useCircuitBreakers" : {
        "description" : "If enabled, services will be authorized to use circuit breakers",
        "type" : "boolean"
      },
      "scripts" : {
        "description" : "global plugins settings. will be deprecated soon",
        "type" : "object",
        "properties" : { }
      },
      "maxLogsSize" : {
        "format" : "int32",
        "description" : "Number of events kept locally",
        "type" : "integer"
      },
      "useAkkaHttpClient" : {
        "description" : "Globally use akka http client for everything",
        "type" : "boolean"
      },
      "quotasSettings" : {
        "description" : "Settings to generate alert when an apikey almost exceeded or exceeded its quotas",
        "type" : "object",
        "properties" : { }
      },
      "apiReadOnly" : {
        "description" : "If enabled, Admin API won't be able to write/update/delete entities",
        "type" : "boolean"
      },
      "analyticsWebhooks" : {
        "description" : "Webhook that will receive all internal Otoroshi events",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "kafkaConfig" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "templates" : {
        "description" : "The otoroshi default templates for entities",
        "type" : "object",
        "properties" : { }
      },
      "enableEmbeddedMetrics" : {
        "description" : "Enable embedded metrics",
        "type" : "boolean"
      },
      "limitConcurrentRequests" : {
        "description" : "If enabled, Otoroshi will reject new request if too much at the same time",
        "type" : "boolean"
      },
      "maxConcurrentRequests" : {
        "format" : "int64",
        "description" : "The number of authorized request processed at the same time",
        "type" : "integer"
      },
      "maxHttp10ResponseSize" : {
        "format" : "int64",
        "description" : "The max size in bytes of an HTTP 1.0 response",
        "type" : "integer"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "letsEncryptSettings" : {
        "description" : "Let's encrypt (ACME) settings",
        "type" : "object",
        "properties" : { }
      },
      "autoLinkToDefaultGroup" : {
        "description" : "If not defined, every new service descriptor will be added to the default group",
        "type" : "boolean"
      },
      "throttlingQuota" : {
        "format" : "int64",
        "description" : "Authorized number of calls per second globally, measured on 10 seconds",
        "type" : "integer"
      },
      "snowMonkeyConfig" : {
        "description" : "Snowmonky settings",
        "type" : "object",
        "properties" : {
          "dryRun" : {
            "description" : "Whether or not outages will actualy impact requests",
            "type" : "boolean"
          },
          "targetGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "Groups impacted by Snow Monkey. If empty, all groups will be impacted"
          },
          "includeUserFacingDescriptors" : {
            "description" : "Whether or not user facing apps. will be impacted by Snow Monkey",
            "type" : "boolean"
          },
          "outageDurationTo" : {
            "description" : "End of outage duration range",
            "type" : "number"
          },
          "outageDurationFrom" : {
            "description" : "Start of outage duration range",
            "type" : "number"
          },
          "startTime" : {
            "description" : "Start time of Snow Monkey each day",
            "type" : "string"
          },
          "stopTime" : {
            "description" : "Stop time of Snow Monkey each day",
            "type" : "string"
          },
          "chaosConfig" : {
            "description" : "Chaos settings",
            "type" : "object",
            "properties" : { }
          },
          "timesPerDay" : {
            "format" : "int32",
            "description" : "Number of time per day each service will be outage",
            "type" : "integer"
          },
          "outageStrategy" : {
            "description" : "",
            "type" : "object",
            "properties" : { }
          },
          "enabled" : {
            "description" : "Whether or not this config is enabled",
            "type" : "boolean"
          }
        }
      },
      "statsdConfig" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "maintenanceMode" : {
        "description" : "Global maintenant mode",
        "type" : "boolean"
      },
      "perIpThrottlingQuota" : {
        "format" : "int64",
        "description" : "Authorized number of calls per second globally per IP address, measured on 10 seconds",
        "type" : "integer"
      },
      "elasticWritesConfigs" : {
        "description" : "Configs. for Elastic writes",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "trustXForwarded" : {
        "description" : "Use X-Forwarded-* headers for routing",
        "type" : "boolean"
      }
    }
  },
  "StringList" : {
    "type" : "array",
    "items" : {
      "type" : "string"
    }
  },
  "HealthCheckEventList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : { }
    }
  },
  "LiveStats" : {
    "type" : "object",
    "description" : "Service live stats"
  },
  "Any" : {
    "type" : "object"
  },
  "otoroshi.models.SimpleOtoroshiAdmin" : {
    "description" : "An otoroshi admin user",
    "type" : "object",
    "properties" : {
      "createdAt" : {
        "description" : "User creation date",
        "type" : "number"
      },
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "password" : {
        "description" : "User password (bcrypt hashed)",
        "type" : "string"
      },
      "rights" : {
        "description" : "User rights",
        "type" : "object",
        "properties" : { }
      },
      "typ" : {
        "description" : "Type of user",
        "type" : "object",
        "properties" : { }
      },
      "label" : {
        "description" : "User label",
        "type" : "string"
      },
      "type" : {
        "description" : "the kind of admin",
        "type" : "string",
        "enum" : [ "simple", "webauthn" ]
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "username" : {
        "description" : "User username",
        "type" : "string"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  },
  "otoroshi.ssl.pki.models.SignCertResponse" : {
    "description" : "Response for a certificate signing operation",
    "type" : "object",
    "properties" : {
      "csr" : {
        "description" : "CSR (PEM encoded)",
        "type" : "string"
      },
      "cert" : {
        "description" : "Cert (PEM encoded)",
        "type" : "string"
      },
      "ca" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      }
    }
  },
  "otoroshi.tcp.TcpService" : {
    "description" : "Model for a TCP proxy",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "description" : {
        "description" : "Entity description",
        "type" : "string"
      },
      "rules" : {
        "description" : "Routing rules",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "interface" : {
        "description" : "Network interface",
        "type" : "string"
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "enabled" : {
        "description" : "Service enabled",
        "type" : "boolean"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "sni" : {
        "description" : "SNI settings",
        "type" : "object",
        "properties" : { }
      },
      "port" : {
        "format" : "int32",
        "description" : "network port",
        "type" : "integer"
      },
      "name" : {
        "description" : "Entity name",
        "type" : "string"
      },
      "tls" : {
        "description" : "TLS mode",
        "type" : "object",
        "properties" : { }
      },
      "id" : {
        "description" : "Entity id",
        "type" : "string"
      },
      "clientAuth" : {
        "description" : "Use client authentication",
        "type" : "object",
        "properties" : { }
      }
    }
  },
  "otoroshi.models.RemainingQuotas" : {
    "description" : "Remaining quotas for an apikey",
    "type" : "object",
    "properties" : {
      "currentCallsPerSec" : {
        "format" : "int64",
        "description" : "Current number of call per second",
        "type" : "integer"
      },
      "remainingCallsPerSec" : {
        "format" : "int64",
        "description" : "Remaining number of call per second",
        "type" : "integer"
      },
      "currentCallsPerDay" : {
        "format" : "int64",
        "description" : "Current number of call per day",
        "type" : "integer"
      },
      "authorizedCallsPerDay" : {
        "format" : "int64",
        "description" : "Number of authorized call per day",
        "type" : "integer"
      },
      "currentCallsPerMonth" : {
        "format" : "int64",
        "description" : "Current number of call per month",
        "type" : "integer"
      },
      "remainingCallsPerMonth" : {
        "format" : "int64",
        "description" : "Remaining number of call per month",
        "type" : "integer"
      },
      "authorizedCallsPerSec" : {
        "format" : "int64",
        "description" : "Number of authorized call per second",
        "type" : "integer"
      },
      "authorizedCallsPerMonth" : {
        "format" : "int64",
        "description" : "Number of authorized call per month",
        "type" : "integer"
      },
      "remainingCallsPerDay" : {
        "format" : "int64",
        "description" : "Remaining number of call per day",
        "type" : "integer"
      }
    }
  },
  "ErrorResponse" : {
    "type" : "object",
    "description" : "error response"
  },
  "otoroshi.next.models.StoredNgBackend" : {
    "description" : "A backend that can be stored in the otoroshi datastore",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "The metadata of the backend"
      },
      "name" : {
        "description" : "The name of the backend",
        "type" : "string"
      },
      "description" : {
        "description" : "The description of the backend",
        "type" : "string"
      },
      "backend" : {
        "description" : "The actual backend",
        "type" : "object",
        "properties" : { }
      },
      "id" : {
        "description" : "The id of the backend",
        "type" : "string"
      },
      "_loc" : {
        "description" : "The location of the backend",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "The tags of the backend"
      }
    }
  },
  "Empty" : {
    "type" : "object",
    "description" : "an empty body. Useful for RPC like endpoints"
  },
  "otoroshi.ssl.pki.models.GenCertResponse" : {
    "description" : "Response for a certificate generation operation",
    "type" : "object",
    "properties" : {
      "csr" : {
        "description" : "CSR (PEM encoded)",
        "type" : "string"
      },
      "csrQuery" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "serial" : {
        "format" : "int64",
        "description" : "Certificate serial number",
        "type" : "integer"
      },
      "cert" : {
        "description" : "Cert (PEM encoded)",
        "type" : "string"
      },
      "caChain" : {
        "type" : "array",
        "items" : {
          "type" : "string",
          "description" : "pem encoded X509 certificate"
        },
        "description" : "Ca chain (PEM encoded)"
      },
      "ca" : {
        "description" : "Ca cert (PEM encoded)",
        "type" : "string"
      },
      "key" : {
        "description" : "Private key (PEM encoded)",
        "type" : "string"
      }
    }
  },
  "otoroshi.models.PrivateAppsUser" : {
    "description" : "User session for private apps",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "lastRefresh" : {
        "description" : "Session last refresh (if OAuth refresh_token supported)",
        "type" : "number"
      },
      "profile" : {
        "description" : "Session user profile",
        "type" : "object"
      },
      "authConfigId" : {
        "description" : "Auth module id that created the session",
        "type" : "string"
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "token" : {
        "description" : "Session tokens (from OAuth)",
        "type" : "object"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "expiredAt" : {
        "description" : "Session expiration date",
        "type" : "number"
      },
      "createdAt" : {
        "description" : "Creation date of the session",
        "type" : "number"
      },
      "randomId" : {
        "description" : "Session random id",
        "type" : "string"
      },
      "name" : {
        "description" : "Entity name",
        "type" : "string"
      },
      "realm" : {
        "description" : "Session realm name",
        "type" : "string"
      },
      "email" : {
        "description" : "Session user email",
        "type" : "string"
      },
      "otoroshiData" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      }
    }
  },
  "HostMetrics" : {
    "type" : "object",
    "description" : "Host metrics"
  },
  "otoroshi.next.models.NgService" : {
    "description" : "A composition of multiple routes with the same plugins",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "The metadata of the service"
      },
      "capture" : {
        "description" : "Capture http traffic",
        "type" : "boolean"
      },
      "description" : {
        "description" : "The description of the service",
        "type" : "string"
      },
      "groups" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "The groups of the service"
      },
      "_loc" : {
        "description" : "The location of the service",
        "type" : "object",
        "properties" : { }
      },
      "enabled" : {
        "description" : "Is the service enabled",
        "type" : "boolean"
      },
      "export_reporting" : {
        "description" : "Export the execution reporting through standard data exporter",
        "type" : "boolean"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "The tags of the service"
      },
      "debug_flow" : {
        "description" : "Enable report debugging",
        "type" : "boolean"
      },
      "routes" : {
        "description" : "The routes of the service",
        "type" : "array",
        "items" : {
          "type" : "object",
          "properties" : { }
        }
      },
      "name" : {
        "description" : "The name of the service",
        "type" : "string"
      },
      "client" : {
        "description" : "The client config of the service",
        "type" : "object",
        "properties" : { }
      },
      "id" : {
        "description" : "The id of the service",
        "type" : "string"
      }
    }
  },
  "AlertEventList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : { }
    }
  },
  "otoroshi.models.SnowMonkeyConfig" : {
    "description" : "Settings for the snow monkey (chaos engineering)",
    "type" : "object",
    "properties" : {
      "dryRun" : {
        "description" : "Whether or not outages will actualy impact requests",
        "type" : "boolean"
      },
      "targetGroups" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Groups impacted by Snow Monkey. If empty, all groups will be impacted"
      },
      "includeUserFacingDescriptors" : {
        "description" : "Whether or not user facing apps. will be impacted by Snow Monkey",
        "type" : "boolean"
      },
      "outageDurationTo" : {
        "description" : "End of outage duration range",
        "type" : "number"
      },
      "outageDurationFrom" : {
        "description" : "Start of outage duration range",
        "type" : "number"
      },
      "startTime" : {
        "description" : "Start time of Snow Monkey each day",
        "type" : "string"
      },
      "stopTime" : {
        "description" : "Stop time of Snow Monkey each day",
        "type" : "string"
      },
      "chaosConfig" : {
        "description" : "Chaos settings",
        "type" : "object",
        "properties" : { }
      },
      "timesPerDay" : {
        "format" : "int32",
        "description" : "Number of time per day each service will be outage",
        "type" : "integer"
      },
      "outageStrategy" : {
        "description" : "",
        "type" : "object",
        "properties" : { }
      },
      "enabled" : {
        "description" : "Whether or not this config is enabled",
        "type" : "boolean"
      }
    }
  },
  "CertValidResponse" : {
    "type" : "object",
    "description" : "Is certificate valid",
    "properties" : {
      "valid" : {
        "type" : "boolean"
      }
    }
  },
  "BulkResponseBody" : {
    "type" : "object",
    "description" : "BulkResponseBody object"
  },
  "otoroshi.models.Target" : {
    "description" : "???",
    "type" : "object",
    "properties" : {
      "predicate" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "???"
      },
      "protocol" : {
        "description" : "???",
        "type" : "string",
        "enum" : [ "HTTP/1.0", "HTTP/1.1", "HTTP/2.0" ]
      },
      "scheme" : {
        "description" : "???",
        "type" : "string"
      },
      "mtlsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "host" : {
        "description" : "???",
        "type" : "string"
      },
      "ipAddress" : {
        "nullable" : true,
        "description" : "null type",
        "type" : "string"
      },
      "weight" : {
        "format" : "int32",
        "description" : "???",
        "type" : "integer"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "???"
      }
    }
  },
  "SimpleAdminList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "createdAt" : {
          "description" : "User creation date",
          "type" : "number"
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "Entity metadata"
        },
        "password" : {
          "description" : "User password (bcrypt hashed)",
          "type" : "string"
        },
        "rights" : {
          "description" : "User rights",
          "type" : "object",
          "properties" : { }
        },
        "typ" : {
          "description" : "Type of user",
          "type" : "object",
          "properties" : { }
        },
        "label" : {
          "description" : "User label",
          "type" : "string"
        },
        "type" : {
          "description" : "the kind of admin",
          "type" : "string",
          "enum" : [ "simple", "webauthn" ]
        },
        "_loc" : {
          "description" : "Entity location",
          "type" : "object",
          "properties" : { }
        },
        "username" : {
          "description" : "User username",
          "type" : "string"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "Entity tags"
        }
      }
    }
  },
  "otoroshi.models.OtoroshiAdmin" : {
    "oneOfConstraints" : [ {
      "required" : [ "createdAt", "metadata", "password", "rights", "typ", "label", "type", "_loc", "username", "tags" ]
    }, {
      "required" : [ "createdAt", "metadata", "password", "credentials", "rights", "typ", "handle", "label", "type", "_loc", "username", "tags" ]
    } ],
    "type" : "object",
    "properties" : {
      "createdAt" : {
        "description" : "User creation date",
        "type" : "number"
      },
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "password" : {
        "description" : "User password",
        "type" : "string"
      },
      "credentials" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "User webauthn credentials"
      },
      "rights" : {
        "description" : "User rights",
        "type" : "object",
        "properties" : { }
      },
      "handle" : {
        "description" : "User webauthn handle",
        "type" : "string"
      },
      "typ" : {
        "description" : "User type",
        "type" : "object",
        "properties" : { }
      },
      "label" : {
        "description" : "User label",
        "type" : "string"
      },
      "type" : {
        "description" : "the kind of admin",
        "type" : "string",
        "enum" : [ "simple", "webauthn" ]
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "username" : {
        "description" : "User username",
        "type" : "string"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  },
  "otoroshi.models.Tenant" : {
    "description" : "An otoroshi model for an organization (otoroshi-ui)",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "name" : {
        "description" : "Entity name",
        "type" : "string"
      },
      "description" : {
        "description" : "Entity description",
        "type" : "string"
      },
      "id" : {
        "description" : "Entity id",
        "type" : "object",
        "properties" : { }
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  },
  "otoroshi.models.BackOfficeUser" : {
    "description" : "User session for otoroshi-ui admins",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "lastRefresh" : {
        "description" : "Last refresh of the session (OAuth with refresh tokens)",
        "type" : "number"
      },
      "profile" : {
        "description" : "Session user profile",
        "type" : "object"
      },
      "authConfigId" : {
        "description" : "Session created from auth module id",
        "type" : "string"
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "token" : {
        "description" : "Session tokens (only if OAuth/OIDC)",
        "type" : "object"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "createdAt" : {
        "description" : "Creation date for the session",
        "type" : "number"
      },
      "expiredAt" : {
        "description" : "Expiration date for the session",
        "type" : "number"
      },
      "randomId" : {
        "description" : "Session user random id",
        "type" : "string"
      },
      "simpleLogin" : {
        "description" : "Session generated from a simple login module (like basic or ldap)",
        "type" : "boolean"
      },
      "rights" : {
        "description" : "Session user rights",
        "type" : "object",
        "properties" : { }
      },
      "name" : {
        "description" : "Session user name",
        "type" : "string"
      },
      "email" : {
        "description" : "User email",
        "type" : "string"
      }
    }
  },
  "ExperimentalFormResponse" : {
    "type" : "object",
    "description" : "The representation of a form to configure a plugin or an entity"
  },
  "OutagesList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : { }
    }
  },
  "otoroshi.models.DataExporterConfig" : {
    "description" : "Data exporter settings",
    "type" : "object",
    "properties" : {
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "type" : {
        "description" : "Entity type",
        "type" : "object",
        "properties" : { }
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "enabled" : {
        "description" : "Is the exporter enabled",
        "type" : "boolean"
      },
      "groupDuration" : {
        "description" : "The max duration before sending group",
        "type" : "number"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      },
      "jsonWorkers" : {
        "format" : "int32",
        "description" : "Number of workers that transform events",
        "type" : "integer"
      },
      "name" : {
        "description" : "Entity name",
        "type" : "string"
      },
      "groupSize" : {
        "format" : "int32",
        "description" : "The max size of events group before sending",
        "type" : "integer"
      },
      "id" : {
        "description" : "Id of the exporter",
        "type" : "string"
      },
      "projection" : {
        "description" : "Event projection",
        "type" : "object"
      },
      "config" : {
        "description" : "Exporter config",
        "type" : "object",
        "properties" : { }
      },
      "filtering" : {
        "description" : "Filtering options",
        "type" : "object",
        "properties" : { }
      },
      "sendWorkers" : {
        "format" : "int32",
        "description" : "Number of workers that sends events",
        "type" : "integer"
      },
      "desc" : {
        "description" : "Description",
        "type" : "string"
      },
      "bufferSize" : {
        "format" : "int32",
        "description" : "Number of events in buffer",
        "type" : "integer"
      }
    }
  },
  "otoroshi.ssl.pki.models.GenKeyPairResponse" : {
    "description" : "Response for a keypair generation operation",
    "type" : "object",
    "properties" : {
      "publicKey" : {
        "description" : "Public key (PEM encoded)",
        "type" : "string"
      },
      "privateKey" : {
        "description" : "Private key (PEM encoded)",
        "type" : "string"
      }
    }
  },
  "Unknown" : {
    "type" : "object",
    "description" : "value used by the openapi generator when no matching type found. Should be fixed in a near future."
  },
  "otoroshi.ssl.pki.models.GenCsrResponse" : {
    "description" : "Response for a csr generation operation",
    "type" : "object",
    "properties" : {
      "csr" : {
        "description" : "CSR (PEM encoded)",
        "type" : "string"
      },
      "publicKey" : {
        "description" : "Public key (PEM encoded)",
        "type" : "string"
      },
      "privateKey" : {
        "description" : "Private key (PEM encoded)",
        "type" : "string"
      }
    }
  },
  "otoroshi.models.ErrorTemplate" : {
    "description" : "Service descriptor error template",
    "type" : "object",
    "properties" : {
      "template50x" : {
        "description" : "The 50x error html template",
        "type" : "string"
      },
      "templateMaintenance" : {
        "description" : "The maintenance html template",
        "type" : "string"
      },
      "templateBuild" : {
        "description" : "The build html template",
        "type" : "string"
      },
      "serviceId" : {
        "description" : "Service id for this template",
        "type" : "string"
      },
      "messages" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Map of messages"
      },
      "template40x" : {
        "description" : "The 40x error html template",
        "type" : "string"
      }
    }
  },
  "otoroshi.auth.AuthModuleConfig" : {
    "oneOfConstraints" : [ ],
    "type" : "object",
    "properties" : { }
  },
  "TargetsList" : {
    "type" : "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "predicate" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "metadata" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          },
          "description" : "???"
        },
        "protocol" : {
          "description" : "???",
          "type" : "string",
          "enum" : [ "HTTP/1.0", "HTTP/1.1", "HTTP/2.0" ]
        },
        "scheme" : {
          "description" : "???",
          "type" : "string"
        },
        "mtlsConfig" : {
          "description" : "???",
          "type" : "object",
          "properties" : { }
        },
        "host" : {
          "description" : "???",
          "type" : "string"
        },
        "ipAddress" : {
          "nullable" : true,
          "description" : "null type",
          "type" : "string"
        },
        "weight" : {
          "format" : "int32",
          "description" : "???",
          "type" : "integer"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "description" : "???"
        }
      }
    }
  },
  "otoroshi.models.WebAuthnOtoroshiAdmin" : {
    "description" : "An otoroshi admin user that uses webauthn at login",
    "type" : "object",
    "properties" : {
      "createdAt" : {
        "description" : "User creation date",
        "type" : "number"
      },
      "metadata" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "string"
        },
        "description" : "Entity metadata"
      },
      "password" : {
        "description" : "User password",
        "type" : "string"
      },
      "credentials" : {
        "type" : "object",
        "additionalProperties" : {
          "type" : "object"
        },
        "description" : "User webauthn credentials"
      },
      "rights" : {
        "description" : "User rights",
        "type" : "object",
        "properties" : { }
      },
      "handle" : {
        "description" : "User webauthn handle",
        "type" : "string"
      },
      "typ" : {
        "description" : "User type",
        "type" : "object",
        "properties" : { }
      },
      "label" : {
        "description" : "User label",
        "type" : "string"
      },
      "type" : {
        "description" : "the kind of admin",
        "type" : "string",
        "enum" : [ "simple", "webauthn" ]
      },
      "_loc" : {
        "description" : "Entity location",
        "type" : "object",
        "properties" : { }
      },
      "username" : {
        "description" : "User username",
        "type" : "string"
      },
      "tags" : {
        "type" : "array",
        "items" : {
          "type" : "string"
        },
        "description" : "Entity tags"
      }
    }
  }
}