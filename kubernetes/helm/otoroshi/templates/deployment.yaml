apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    helm.sh/chart: {{ template "otoroshi.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    meta.helm.sh/release-name: {{ .Release.Name }}
  annotations:
  {{- with .Values.deployment.annotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "otoroshi.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  {{- if .Values.global.prod }}
  replicas: {{ .Values.replicas }}
  {{- end}}
  {{- if not .Values.global.prod }}
  replicas: 1
  {{- end}}
  strategy:
  {{- with .Values.strategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "otoroshi.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      hostNetwork: false
      containers:
      - image: {{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: {{ .Values.name }}
        ports:
          - containerPort: {{ .Values.image.http }}
            name: "http"
            protocol: TCP
          - containerPort: {{ .Values.image.https }}
            name: "https"
            protocol: TCP
        env:
          - name: APP_STORAGE_ROOT
            value: {{ .Values.env.storageRoot }}
          - name: OTOROSHI_INITIAL_ADMIN_PASSWORD
            value: {{ .Values.env.password }}
          - name: APP_DOMAIN
            value: {{ .Values.env.domain }}
          - name: APP_STORAGE
            {{- if .Values.global.prod }}
            value: lettuce
            {{- end}}
            {{- if not .Values.global.prod }}
            value: inmemory
            {{- end}}
          - name: REDIS_URL
            # value: {{ .Values.env.redisURL }}
            value: 'redis://{{ .Release.Name }}-redis-master:6379'
          - name: ADMIN_API_CLIENT_ID
            value: {{ .Values.env.clientId }}
          - name: ADMIN_API_CLIENT_SECRET
            value: {{ .Values.env.clientSecret }}
          - name: ADMIN_API_ADDITIONAL_EXPOSED_DOMAIN
            value: otoroshi-api-service.{{ .Release.Namespace }}.svc.cluster.local
          - name: OTOROSHI_SECRET
            value: {{ .Values.env.secret }}
          - name: HEALTH_LIMIT
            value: "5000"
          - name: SSL_OUTSIDE_CLIENT_AUTH
            value: Want
          - name: HTTPS_WANT_CLIENT_AUTH
            value: "true"
          - name: OTOROSHI_INITIAL_CUSTOMIZATION
            value: >
              {
                "config":{
                  "tlsSettings": {
                    "defaultDomain": "www.{{ .Values.env.domain }}",
                    "randomIfNotFound": false
                  },
                  "scripts":{
                    "enabled":true,
                    "sinkRefs":[
                      "cp:otoroshi.plugins.jobs.kubernetes.KubernetesAdmissionWebhookCRDValidator",
                      "cp:otoroshi.plugins.jobs.kubernetes.KubernetesAdmissionWebhookSidecarInjector"
                    ],
                    "sinkConfig": {},
                    "jobRefs":[
                      "cp:otoroshi.plugins.jobs.kubernetes.KubernetesOtoroshiCRDsControllerJob"
                    ],
                    "jobConfig":{
                      "KubernetesConfig": {
                        "trust": false,
                        "namespaces": [
                          "*"
                        ],
                        "labels": {},
                        "namespacesLabels": {},
                        "ingressClasses": [
                          "otoroshi"
                        ],
                        "defaultGroup": "default",
                        "ingresses": false,
                        "crds": true,
                        "coreDnsIntegration": false,
                        "coreDnsIntegrationDryRun": false,
                        "kubeLeader": false,
                        "restartDependantDeployments": false,
                        "watch": false,
                        "syncDaikokuApikeysOnly": false,
                        "kubeSystemNamespace": "kube-system",
                        "coreDnsConfigMapName": "coredns",
                        "coreDnsDeploymentName": "coredns",
                        "corednsPort": 53,
                        "otoroshiServiceName": "{{ .Values.service.name }}",
                        "otoroshiNamespace": "{{ .Release.Namespace }}",
                        "clusterDomain": "cluster.local",
                        "syncIntervalSeconds": 60,
                        "coreDnsEnv": null,
                        "watchTimeoutSeconds": 60,
                        "watchGracePeriodSeconds": 5,
                        "mutatingWebhookName": "otoroshi-admission-webhook-injector",
                        "validatingWebhookName": "otoroshi-admission-webhook-validation",
                        "templates": {
                          "service-group": {},
                          "service-descriptor": {},
                          "apikeys": {},
                          "global-config": {},
                          "jwt-verifier": {},
                          "tcp-service": {},
                          "certificate": {},
                          "auth-module": {},
                          "script": {},
                          "organizations": {},
                          "teams": {},
                          "webhooks": {
                            "flags": {
                              "requestCert": true,
                              "originCheck": true,
                              "tokensCheck": true,
                              "displayEnv": false,
                              "tlsTrace": false
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
          - name: JAVA_OPTS
            value: '-Xms2g -Xmx4g -XX:+UseContainerSupport -XX:MaxRAMPercentage=80.0'
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.image.http }}
          {{- with .Values.probes.readiness }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /live
            port: {{ .Values.image.http }}
          {{- with .Values.probes.liveness }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        resources:
          {{- with .Values.resources }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
        
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    meta.helm.sh/release-name: {{ .Release.Name }}
spec:
  selector:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - port: {{ .Values.service.http }}
    name: "http"
    targetPort: "http"
  - port: {{ .Values.service.https }}
    name: "https"
    targetPort: "https"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.apiName }}
  labels:
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    meta.helm.sh/release-name: {{ .Release.Name }}
spec:
  selector:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - port: {{ .Values.service.http }}
    name: "http"
    targetPort: "http"
  - port: {{ .Values.service.https }}
    name: "https"
    targetPort: "https"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.loadbalancer.name }}
  labels:
    app.kubernetes.io/managed-by: "Helm"
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    meta.helm.sh/release-name: {{ .Release.Name }}
spec:
  {{- if .Values.loadbalancer.enabled }}
  type: LoadBalancer
  {{- end }}
  {{- if not .Values.loadbalancer.enabled }}
  type: ClusterIP
  {{- end }}
  selector:
    app.kubernetes.io/name: {{ template "otoroshi.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
  - port: {{ .Values.loadbalancer.http }}
    name: "http"
    targetPort: "http"
    {{- if not .Values.loadbalancer.enabled }}
    nodePort: {{ .Values.loadbalancer.nodePort.http }}
    {{- end }}
  - port: {{ .Values.loadbalancer.https }}
    name: "https"
    targetPort: "https"
    {{- if not .Values.loadbalancer.enabled }}
    nodePort: {{ .Values.loadbalancer.nodePort.https }}
    {{- end }}