{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Otoroshi Admin API",
    "description" : "Admin API of the Otoroshi reverse proxy",
    "version" : "1.5.0-dev",
    "contact" : {
      "name" : "Otoroshi Team",
      "email" : "oss@maif.fr"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs" : {
    "url" : "https://www.otoroshi.io",
    "description" : "everything about otoroshi"
  },
  "servers" : [ {
    "url" : "http://otoroshi-api.oto.tools:8080",
    "description" : "your local otoroshi server"
  } ],
  "tags" : [ {
    "name" : "admin-sessions",
    "description" : "???"
  }, {
    "name" : "admins",
    "description" : "???"
  }, {
    "name" : "analytics",
    "description" : "???"
  }, {
    "name" : "apikeys",
    "description" : "???"
  }, {
    "name" : "apps-sessions",
    "description" : "???"
  }, {
    "name" : "auth-modules",
    "description" : "???"
  }, {
    "name" : "certificates",
    "description" : "???"
  }, {
    "name" : "cluster",
    "description" : "???"
  }, {
    "name" : "data-exporters",
    "description" : "???"
  }, {
    "name" : "events",
    "description" : "???"
  }, {
    "name" : "experimental",
    "description" : "???"
  }, {
    "name" : "globalconfig",
    "description" : "???"
  }, {
    "name" : "groups",
    "description" : "???"
  }, {
    "name" : "import-export",
    "description" : "???"
  }, {
    "name" : "jwt-verifiers",
    "description" : "???"
  }, {
    "name" : "lines",
    "description" : "???"
  }, {
    "name" : "live",
    "description" : "???"
  }, {
    "name" : "organizations",
    "description" : "???"
  }, {
    "name" : "pki",
    "description" : "???"
  }, {
    "name" : "privateapps",
    "description" : "???"
  }, {
    "name" : "scripts",
    "description" : "???"
  }, {
    "name" : "services",
    "description" : "???"
  }, {
    "name" : "snowmonkey",
    "description" : "???"
  }, {
    "name" : "tcp",
    "description" : "???"
  }, {
    "name" : "teams",
    "description" : "???"
  }, {
    "name" : "templates",
    "description" : "???"
  } ],
  "paths" : {
    "/api/stats" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.filterableStats",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/stats/global" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.globalStats",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/stats" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceStats",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_template" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Creates a new Script from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateScript",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_list" : {
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.findAllScriptsList",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.registerWebAuthnAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.webAuthnAdmins",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{groupId}/status" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.groupStatus",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the groupId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/{id}" : {
      "patch" : {
        "tags" : [ "teams" ],
        "summary" : "Updates (using json-patch) a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Team"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Find a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "teams" ],
        "summary" : "Deletes a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "teams" ],
        "summary" : "Updates a specific Team using its id",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Team"
              }
            }
          }
        }
      }
    },
    "/api/teams" : {
      "post" : {
        "tags" : [ "teams" ],
        "summary" : "Creates a Team",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Team"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Find all possible Teams entities",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.Team"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/_bulk" : {
      "patch" : {
        "tags" : [ "teams" ],
        "summary" : "Update (using json-patch) multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "teams" ],
        "summary" : "Create multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "teams" ],
        "summary" : "Delete multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "teams" ],
        "summary" : "Update multiple Teams at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TeamsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Team"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/targets" : {
      "patch" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.updateServiceTargets",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceAddTarget",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceTargets",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceDeleteTarget",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/forms" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.forms",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/{id}" : {
      "patch" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Updates (using json-patch) a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Find a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Deletes a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Updates a specific AuthModuleConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/cluster/members" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.getClusterMembers",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.clearClusterMembers",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.initiateStoredNgTarget",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/_bulk" : {
      "patch" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Update (using json-patch) multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Create multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Delete multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Update multiple AuthModuleConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/plugins/categories" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.categories",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts" : {
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Creates a Script",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.script.Script"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Find all possible Scripts entities",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.script.Script"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/privateapps/sessions/{id}/{username}" : {
      "post" : {
        "tags" : [ "privateapps" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.PrivateAppsController.registerSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        }, {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/cluster/sessions/{id}" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.isSessionValid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/_bulk" : {
      "patch" : {
        "tags" : [ "apikeys" ],
        "summary" : "Update (using json-patch) multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "apikeys" ],
        "summary" : "Create multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apikeys" ],
        "summary" : "Delete multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "apikeys" ],
        "summary" : "Update multiple ApiKeys at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps-sessions/{id}" : {
      "delete" : {
        "tags" : [ "apps-sessions" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardPrivateAppsSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services" : {
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Creates a ServiceDescriptor",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Find all possible ServiceDescriptors entities",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants" : {
      "post" : {
        "tags" : [ "organizations" ],
        "summary" : "Creates a Tenant",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Tenant"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "organizations" ],
        "summary" : "Find all possible Tenants entities",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/new/service" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new Service from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateService_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/config" : {
      "patch" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.patchSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.getSnowMonkeyConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.updateSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/globalconfig/_template" : {
      "get" : {
        "tags" : [ "globalconfig" ],
        "summary" : "Creates a new GlobalConfig from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateGlobalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/alert/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.EventsController.alertEvents",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/lines/{line}/services" : {
      "get" : {
        "tags" : [ "lines" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.servicesForALine",
        "parameters" : [ {
          "name" : "line",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The line param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple StoredNgBackends at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific NgService using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
              }
            }
          }
        }
      }
    },
    "/api/groups" : {
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Creates a ServiceGroup",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Find all possible ServiceGroups entities",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/plugins/steps" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.steps",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/{entity}/_template" : {
      "post" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_templates",
        "parameters" : [ {
          "name" : "entity",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the entity parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific StoredNgTarget using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
              }
            }
          }
        }
      }
    },
    "/api/pki/cas/{ca}/cas" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genSubCA",
        "parameters" : [ {
          "name" : "ca",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the ca parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/verifiers/{id}" : {
      "patch" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Updates (using json-patch) a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Find a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Deletes a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Updates a specific GlobalJwtVerifier using its id",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.initiateStoredNgBackend",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-sessions/{id}" : {
      "delete" : {
        "tags" : [ "admin-sessions" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/tcp/_template" : {
      "get" : {
        "tags" : [ "tcp" ],
        "summary" : "Creates a new TcpService from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTcpService_tcp",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/status/global" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.globalStatus",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/_bulk" : {
      "patch" : {
        "tags" : [ "services" ],
        "summary" : "Update (using json-patch) multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "services" ],
        "summary" : "Create multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Delete multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Update multiple ServiceDescriptors at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/outages" : {
      "get" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.getSnowMonkeyOutages",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.resetSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs/_bulk" : {
      "patch" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Update (using json-patch) multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Create multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Delete multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Update multiple DataExporterConfigs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.initiateService",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/_bulk" : {
      "patch" : {
        "tags" : [ "organizations" ],
        "summary" : "Update (using json-patch) multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "organizations" ],
        "summary" : "Create multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "organizations" ],
        "summary" : "Delete multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "organizations" ],
        "summary" : "Update multiple Tenants at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/_bundle" : {
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.importBundle",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/cluster/state" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.internalState",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/new/resources" : {
      "post" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new Resources from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateResources",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_p12" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.importCertFromP12",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/pki/keys" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genKeyPair",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/otoroshi.json" : {
      "post" : {
        "tags" : [ "import-export" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ImportExportController.fullImport",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "import-export" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ImportExportController.fullExport",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths" : {
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Creates a AuthModuleConfig",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Find all possible AuthModuleConfigs entities",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn/_template" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_webauthn",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new WebauthnAdmin from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateWebauthnAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{id}" : {
      "patch" : {
        "tags" : [ "groups" ],
        "summary" : "Updates (using json-patch) a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Find a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "summary" : "Deletes a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Updates a specific ServiceGroup using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
              }
            }
          }
        }
      }
    },
    "/api/tenants/{id}" : {
      "patch" : {
        "tags" : [ "organizations" ],
        "summary" : "Updates (using json-patch) a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Tenant"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "organizations" ],
        "summary" : "Find a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "organizations" ],
        "summary" : "Deletes a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "organizations" ],
        "summary" : "Updates a specific Tenant using its id",
        "operationId" : "otoroshi.controllers.adminapi.TenantsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.Tenant"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.Tenant"
              }
            }
          }
        }
      }
    },
    "/api/live" : {
      "get" : {
        "tags" : [ "live" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.globalLiveStats",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific StoredNgBackend using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/{id}" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates (using json-patch) a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Deletes a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Updates a specific NgRoute using its id",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
              }
            }
          }
        }
      }
    },
    "/api/experimental/frontends/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgFrontendsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn/{username}/{id}" : {
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.webAuthnDeleteAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        }, {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a NgRoute",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible NgRoutes entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/import" : {
      "post" : {
        "tags" : [ "import-export" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ImportExportController.fullImportFromFile",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/pki/cas" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genSelfSignedCA",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/scripts/{id}" : {
      "patch" : {
        "tags" : [ "scripts" ],
        "summary" : "Updates (using json-patch) a specific Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.script.Script"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "scripts" ],
        "summary" : "Find a specific Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "scripts" ],
        "summary" : "Deletes a specific Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "scripts" ],
        "summary" : "Updates a specific Script using its id",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.script.Script"
              }
            }
          }
        }
      }
    },
    "/api/events" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.filterableEvents",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/certs" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genSelfSignedCert",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/new/tcp/service" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new TcpService from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTcpService_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/{id}/register/finish" : {
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.finishRegistration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/new/group" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new ServiceGroup from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateServiceGroup_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/tcp/services/_template" : {
      "post" : {
        "tags" : [ "tcp" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_tcp",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/tcp/services/_bulk" : {
      "patch" : {
        "tags" : [ "tcp" ],
        "summary" : "Update (using json-patch) multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "tcp" ],
        "summary" : "Create multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "tcp" ],
        "summary" : "Delete multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "tcp" ],
        "summary" : "Update multiple TcpServices at the same time",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/_template" : {
      "get" : {
        "tags" : [ "auth-modules" ],
        "summary" : "Creates a new AuthModule from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateAuthModule",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/tcp/services" : {
      "post" : {
        "tags" : [ "tcp" ],
        "summary" : "Creates a TcpService",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "tcp" ],
        "summary" : "Find all possible TcpServices entities",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/verifiers/_template" : {
      "get" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Creates a new JwtVerifier from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateJwtVerifier",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/globalconfig" : {
      "patch" : {
        "tags" : [ "globalconfig" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.GlobalConfigController.patchGlobalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "globalconfig" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.GlobalConfigController.globalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "globalconfig" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.GlobalConfigController.updateGlobalConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/response" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceResponseTime",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/new/apikey" : {
      "get" : {
        "tags" : [ "templates" ],
        "summary" : "Creates a new ApiKey from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateApiKey_templates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/{id}" : {
      "patch" : {
        "tags" : [ "apikeys" ],
        "summary" : "Updates (using json-patch) a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Find a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apikeys" ],
        "summary" : "Deletes a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "apikeys" ],
        "summary" : "Updates a specific ApiKey using its id",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_data" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.certificateData",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/cluster/quotas" : {
      "put" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.updateQuotas",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/admins/webauthn/{username}" : {
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.updateWebAuthnAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/groups/_bulk" : {
      "patch" : {
        "tags" : [ "groups" ],
        "summary" : "Update (using json-patch) multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "groups" ],
        "summary" : "Create multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "groups" ],
        "summary" : "Delete multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "groups" ],
        "summary" : "Update multiple ServiceGroups at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends/_form" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a NgService",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible NgServices entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/live" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.serviceLiveStats_services",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple NgServices at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_bulk" : {
      "patch" : {
        "tags" : [ "scripts" ],
        "summary" : "Update (using json-patch) multiple Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "Create multiple Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "scripts" ],
        "summary" : "Delete multiple Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "scripts" ],
        "summary" : "Update multiple Scripts at the same time",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.script.Script"
                }
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs/{id}" : {
      "patch" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Updates (using json-patch) a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Find a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Deletes a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Updates a specific DataExporterConfig using its id",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
              }
            }
          }
        }
      }
    },
    "/api/pki/csrs" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genCsr",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/groups/_template" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "Creates a new ServiceGroup from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateServiceGroup_groups",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/verifiers" : {
      "post" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Creates a GlobalJwtVerifier",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Find all possible GlobalJwtVerifiers entities",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/simple/{username}" : {
      "delete" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.deleteAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.updateAdmin",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs" : {
      "post" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Creates a DataExporterConfig",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Find all possible DataExporterConfigs entities",
        "operationId" : "otoroshi.controllers.adminapi.DataExporterConfigController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/data-exporter-configs/_template" : {
      "get" : {
        "tags" : [ "data-exporters" ],
        "summary" : "Creates a new DataExporterConfig from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateDataExporterConfig",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/_template" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.initiateRoute",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/teams/_template" : {
      "get" : {
        "tags" : [ "teams" ],
        "summary" : "Creates a new Team from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTeam",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin-sessions" : {
      "get" : {
        "tags" : [ "admin-sessions" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.sessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "admin-sessions" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardAllSessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/admins/simple/_template" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new Template from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.createFromTemplate_simple",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "Creates a new SimpleAdmin from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateSimpleAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/{id}" : {
      "patch" : {
        "tags" : [ "certificates" ],
        "summary" : "Updates (using json-patch) a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "certificates" ],
        "summary" : "Find a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "certificates" ],
        "summary" : "Deletes a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "certificates" ],
        "summary" : "Updates a specific Cert using its id",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      }
    },
    "/api/cluster/user-tokens/{id}" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.getUserToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/_start" : {
      "post" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.startSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/experimental/plugins/all" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.plugins",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/events/_template" : {
      "get" : {
        "tags" : [ "analytics" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.templateSpec",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{id}" : {
      "patch" : {
        "tags" : [ "services" ],
        "summary" : "Updates (using json-patch) a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Find a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "Deletes a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "Updates a specific ServiceDescriptor using its id",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
              }
            }
          }
        }
      }
    },
    "/api/apikeys" : {
      "post" : {
        "tags" : [ "apikeys" ],
        "summary" : "Creates a ApiKey",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Find all possible ApiKeys entities",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/cas/{ca}/certs" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genCert",
        "parameters" : [ {
          "name" : "ca",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the ca parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/events" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceEvents",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/_template" : {
      "get" : {
        "tags" : [ "certificates" ],
        "summary" : "Creates a new Certificate from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateCertificate",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/audit/events" : {
      "get" : {
        "tags" : [ "events" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.EventsController.auditEvents",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/snowmonkey/_stop" : {
      "post" : {
        "tags" : [ "snowmonkey" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.SnowMonkeyController.stopSnowMonkey",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/experimental/forms/_single" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.NgPluginsController.form",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/_bulk" : {
      "patch" : {
        "tags" : [ "certificates" ],
        "summary" : "Update (using json-patch) multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "Create multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "certificates" ],
        "summary" : "Delete multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "certificates" ],
        "summary" : "Update multiple Certs at the same time",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        }
      }
    },
    "/api/tenants/_template" : {
      "get" : {
        "tags" : [ "organizations" ],
        "summary" : "Creates a new Tenant from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateTenant",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/health" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceHealth",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/canary" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.CanaryController.serviceCanaryMembers",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.CanaryController.resetServiceCanaryMembers",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/live/host" : {
      "get" : {
        "tags" : [ "live" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.hostMetrics",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_valid" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.certificateIsValid",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/cluster/live" : {
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.liveCluster",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates" : {
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "Creates a Cert",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "certificates" ],
        "summary" : "Find all possible Certs entities",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/{id}/quotas" : {
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.apiKeyQuotas",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apikeys" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ApiKeysController.resetApiKeyQuotas",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/cluster/user-tokens" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.setUserToken",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/pki/certs/_letencrypt" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.genLetsEncryptCert",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/live/{id}" : {
      "get" : {
        "tags" : [ "live" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.StatsController.serviceLiveStats_live",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/verifiers/_bulk" : {
      "patch" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Update (using json-patch) multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Create multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Delete multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "jwt-verifiers" ],
        "summary" : "Update multiple GlobalJwtVerifiers at the same time",
        "operationId" : "otoroshi.controllers.adminapi.JwtVerifierController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
                }
              }
            }
          }
        }
      }
    },
    "/api/lines" : {
      "get" : {
        "tags" : [ "lines" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.allLines",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/apps-sessions" : {
      "get" : {
        "tags" : [ "apps-sessions" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.privateAppsSessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "apps-sessions" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.discardAllPrivateAppsSessions",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/apikeys/_template" : {
      "get" : {
        "tags" : [ "apikeys" ],
        "summary" : "Creates a new ApiKey from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateApiKey_apikeys",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/backends" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a StoredNgBackend",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible StoredNgBackends entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgBackendsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/routes/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple NgRoutes at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
                }
              }
            }
          }
        }
      }
    },
    "/api/groups/{id}/services" : {
      "get" : {
        "tags" : [ "groups" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServiceGroupController.serviceGroupServices",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Creates a StoredNgTarget",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.createAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "201" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "Find all possible StoredNgTargets entities",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.findAllEntitiesAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/template" : {
      "post" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.createServiceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.serviceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.deleteServiceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ServicesController.updateServiceTemplate",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The serviceId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/status" : {
      "post" : {
        "tags" : [ "analytics" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.servicesStatus",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/privateapps/sessions/send/{id}/{username}" : {
      "post" : {
        "tags" : [ "privateapps" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.PrivateAppsController.sendSelfUpdateLink",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        }, {
          "name" : "username",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the username parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/admins/simple" : {
      "post" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.registerSimpleAdmin",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "admins" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.UsersController.simpleAdmins",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/auths/{id}/register/start" : {
      "post" : {
        "tags" : [ "auth-modules" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AuthModulesController.startRegistration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/services/{serviceId}/status" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.AnalyticsController.serviceStatus",
        "parameters" : [ {
          "name" : "serviceId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the serviceId parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/experimental/services/_openapi" : {
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgServicesController.fromOpenapi",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/experimental/targets/_bulk" : {
      "patch" : {
        "tags" : [ "experimental" ],
        "summary" : "Update (using json-patch) multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkPatchAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/BulkPatchBody"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimental" ],
        "summary" : "Create multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkCreateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "experimental" ],
        "summary" : "Delete multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkDeleteAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "experimental" ],
        "summary" : "Update multiple StoredNgTargets at the same time",
        "operationId" : "otoroshi.next.controllers.adminapi.NgTargetsController.bulkUpdateAction",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BulkResponseBody"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
                }
              }
            }
          }
        }
      }
    },
    "/api/scripts/_compile" : {
      "post" : {
        "tags" : [ "scripts" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ScriptApiController.compileScript",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/experimental/certificates/_by_domain" : {
      "get" : {
        "tags" : [ "experimental" ],
        "summary" : "???",
        "operationId" : "otoroshi.next.controllers.adminapi.NgRoutesController.domainsAndCertificates",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/pki/cas/{ca}/certs/_sign" : {
      "post" : {
        "tags" : [ "pki" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.PkiController.signCert",
        "parameters" : [ {
          "name" : "ca",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the ca parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/cluster/login-tokens/{id}" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.createLoginToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.isLoginTokenValid",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "the id parameter"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/certificates/{certId}/_renew" : {
      "post" : {
        "tags" : [ "certificates" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.CertificatesController.renewCert",
        "parameters" : [ {
          "name" : "certId",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The certId param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    },
    "/api/tcp/services/{id}" : {
      "patch" : {
        "tags" : [ "tcp" ],
        "summary" : "Updates (using json-patch) a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.patchEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
              }
            }
          }
        }
      },
      "get" : {
        "tags" : [ "tcp" ],
        "summary" : "Find a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.findEntityByIdAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "tcp" ],
        "summary" : "Deletes a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.deleteEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "tcp" ],
        "summary" : "Updates a specific TcpService using its id",
        "operationId" : "otoroshi.controllers.adminapi.TcpServiceApiController.updateEntityAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "schema" : {
            "type" : "string"
          },
          "required" : true,
          "description" : "The id param of the target entity"
        } ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/x-ndjson" : {
                "schema" : {
                  "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body in nd-json format (1 stringified entity per line)",
          "required" : true,
          "content" : {
            "application/x-ndjson" : {
              "schema" : {
                "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
              }
            }
          }
        }
      }
    },
    "/api/services/_template" : {
      "get" : {
        "tags" : [ "services" ],
        "summary" : "Creates a new Service from a template",
        "operationId" : "otoroshi.controllers.adminapi.TemplatesController.initiateService_services",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        }
      }
    },
    "/api/cluster/sessions" : {
      "post" : {
        "tags" : [ "cluster" ],
        "summary" : "???",
        "operationId" : "otoroshi.controllers.adminapi.ClusterController.createSession",
        "parameters" : [ ],
        "security" : [ {
          "otoroshi_auth" : [ ]
        } ],
        "responses" : {
          "401" : {
            "description" : "You have to provide an Api Key. Api Key can be passed with 'Otoroshi-Client-Id' and 'Otoroshi-Client-Secret' headers, or use basic http authentication",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad resource format. Take another look to the swagger, or open an issue",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Resource not found or does not exist",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Successful operation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Unknown"
                }
              }
            }
          }
        },
        "requestBody" : {
          "description" : "the request body",
          "required" : true,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Unknown"
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "otoroshi.models.ElasticAnalyticsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "clusterUri" : {
            "description" : "???",
            "type" : "string"
          },
          "applyTemplate" : {
            "description" : "???",
            "type" : "boolean"
          },
          "indexSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.IndexSettings"
          },
          "type" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "index" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "password" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "version" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesIngressControllerJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgRouteDataStore" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.CorsSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowCredentials" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maxAge" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "number"
            } ],
            "description" : "???"
          },
          "allowMethods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allowHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "exposeHeaders" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allowOrigin" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.apikeys.BiscuitConf" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "checks" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sealedToken" : {
            "description" : "???",
            "type" : "boolean"
          },
          "facts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "privkey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "secret" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.LargeResponseFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "additionalResponseSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.MappingSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "map" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "values" : {
            "description" : "???",
            "type" : "object"
          },
          "remove" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.NgContextualPlugins" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "_env" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.env.Env"
          },
          "next_plugins_merge" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesEntity" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.ApikeyQuotas" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.core.apikeys.JwtApikeyExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.GzipResponseCompressor" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "compression_level" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "buffer_size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "chunked_threshold" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "excluded_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "white_list" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "black_list" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.VerificationSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "fields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "arrayFields" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.NgMinimalRoute" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "frontend" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgFrontend"
          },
          "backend" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgMinimalBackend"
          },
          "backend_ref" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.NgLatencyInjectionFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "from" : {
            "description" : "???",
            "type" : "number"
          },
          "to" : {
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.next.plugins.JwtVerification" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "verifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.log4j.Log4jExpressionText" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "value" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgGzipConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "compression_level" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "buffer_size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "chunked_threshold" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "excluded_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "white_list" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "black_list" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.W3CTracingConfigKind" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.JQConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "request" : {
            "description" : "???",
            "type" : "string"
          },
          "response" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.TeamId" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rawValue" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgAllowedMethodsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "forbidden" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.RegionMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "region" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.Cors" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allow_credentials" : {
            "description" : "???",
            "type" : "boolean"
          },
          "max_age" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "number"
            } ],
            "description" : "???"
          },
          "allow_origin" : {
            "description" : "???",
            "type" : "string"
          },
          "allow_methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "excluded_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allow_headers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "expose_headers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.PublicPrivatePaths" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "strict" : {
            "description" : "???",
            "type" : "boolean"
          },
          "public_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "private_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.GroupRights" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "userRights" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.quotas.ServiceQuotasConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "throttlingQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "dailyQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "monthlyQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.plugins.ApikeyCalls" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "extractors" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyExtractors"
          },
          "pass_with_user" : {
            "description" : "???",
            "type" : "boolean"
          },
          "wipe_backend_request" : {
            "description" : "???",
            "type" : "boolean"
          },
          "validate" : {
            "description" : "???",
            "type" : "boolean"
          },
          "routing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyMatcher"
          }
        }
      },
      "otoroshi.script.AccessContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "attrs" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.TypedMap"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          },
          "descriptor" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
          },
          "index" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "globalConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "apikey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
            } ],
            "description" : "???"
          },
          "snowflake" : {
            "description" : "???",
            "type" : "string"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.PrivateAppsUser"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.JQResponseConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.http.MtlsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "mtls" : {
            "description" : "???",
            "type" : "boolean"
          },
          "loose" : {
            "description" : "???",
            "type" : "boolean"
          },
          "trustAll" : {
            "description" : "???",
            "type" : "boolean"
          },
          "trustedCerts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "certs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.geoloc.IpStackGeolocationInfoExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.metrics.PrometheusServiceMetrics" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesClient" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "config" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.KubernetesConfig"
          },
          "env" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.env.Env"
          }
        }
      },
      "otoroshi.models.RefJwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ids" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.AuthModule" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "module" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "pass_with_apikey" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.clientcert.HasClientCertValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.WeightedBestResponseTime" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.next.plugins.AdditionalHeadersIn" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.script.PreRoutingContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "globalConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "snowflake" : {
            "description" : "???",
            "type" : "string"
          },
          "descriptor" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          },
          "index" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "attrs" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.TypedMap"
          }
        }
      },
      "otoroshi.next.plugins.IpAddressAllowedList" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.apikeys.ApikeyAuthModule" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.CustomTimeouts" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "callAndStreamTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "callTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "idleTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "globalTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "connectionTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.BasicAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "headerName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "queryName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.Transform" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "verificationSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          },
          "transformSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TransformSettings"
          },
          "algoSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          }
        }
      },
      "otoroshi.models.KidAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "onlyExposedCerts" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.loggers.ResponseBodyEvent" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "reqId" : {
            "description" : "???",
            "type" : "string"
          },
          "from" : {
            "description" : "???",
            "type" : "string"
          },
          "ua" : {
            "description" : "???",
            "type" : "string"
          },
          "method" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.MockResponses" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.MockResponse"
            },
            "description" : "???"
          },
          "pass_through" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.TenantId" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rawValue" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.auth.SAMLCanocalizationMethod" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgTreeRouter_Test" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.utils.mailer.MailgunSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "eu" : {
            "description" : "???",
            "type" : "boolean"
          },
          "apiKey" : {
            "description" : "???",
            "type" : "string"
          },
          "domain" : {
            "description" : "???",
            "type" : "string"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.FileSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "maxFileSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.plugins.workflow.WorkflowEndpoint" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.InfraProviderMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "provider" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.Exporter" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.discovery.SelfRegistrationConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.next.models.NgMatchedRoutes" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "routes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
            },
            "description" : "???"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "no_more_segments" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.JsonToXmlResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.LdapAuthModuleConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rightsOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/otoroshi.models.UserRights"
            },
            "description" : "???"
          },
          "extractProfile" : {
            "description" : "???",
            "type" : "boolean"
          },
          "groupRights" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/otoroshi.auth.GroupRights"
            },
            "description" : "???"
          },
          "userValidators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.UserValidator"
            },
            "description" : "???"
          },
          "metadataField" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "extractProfileFilter" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "extraMetadata" : {
            "description" : "???",
            "type" : "object"
          },
          "adminPassword" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "adminUsername" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "searchFilter" : {
            "description" : "???",
            "type" : "string"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "userBase" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "superAdmins" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowEmptyPassword" : {
            "description" : "???",
            "type" : "boolean"
          },
          "groupFilters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.GroupFilter"
            },
            "description" : "???"
          },
          "basicAuth" : {
            "description" : "???",
            "type" : "boolean"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "extractProfileFilterNot" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "emailField" : {
            "description" : "???",
            "type" : "string"
          },
          "nameField" : {
            "description" : "???",
            "type" : "string"
          },
          "sessionMaxAge" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "sessionCookieValues" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SessionCookieValues"
          },
          "serverUrls" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "dataOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "???"
          },
          "searchBase" : {
            "description" : "???",
            "type" : "string"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.Keys" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.QuotasAlmostExceededSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "dailyQuotasThreshold" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "monthlyQuotasThreshold" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.next.plugins.JQResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.OtoroshiInfos" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.models.Team" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "tenant" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TenantId"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "id" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TeamId"
          }
        }
      },
      "otoroshi.models.ChaosConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "badResponsesFaultConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.BadResponsesFaultConfig"
            } ],
            "description" : "???"
          },
          "largeRequestFaultConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.LargeRequestFaultConfig"
            } ],
            "description" : "???"
          },
          "largeResponseFaultConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.LargeResponseFaultConfig"
            } ],
            "description" : "???"
          },
          "latencyInjectionFaultConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.LatencyInjectionFaultConfig"
            } ],
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.events.HealthCheckEvent" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "error" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "health" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "logicCheck" : {
            "description" : "???",
            "type" : "boolean"
          },
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "duration" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.plugins.authcallers.OAuth2Kind" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.SecComVersion" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.authcallers.OAuth2Caller" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.TransformSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtTokenLocation"
          },
          "mappingSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.MappingSettings"
          }
        }
      },
      "otoroshi.plugins.izanami.IzanamiCanaryRoutingConfigRoute" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "variants" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "wildcard" : {
            "description" : "???",
            "type" : "boolean"
          },
          "default" : {
            "description" : "???",
            "type" : "string"
          },
          "regex" : {
            "description" : "???",
            "type" : "boolean"
          },
          "exact" : {
            "description" : "???",
            "type" : "boolean"
          },
          "route" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.ApiKey" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "dailyQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "throttlingQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "constrainedServicesOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowClientIdOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "restrictions" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Restrictions"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "readOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "clientSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "validUntil" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "number"
            } ],
            "description" : "???"
          },
          "clientName" : {
            "description" : "???",
            "type" : "string"
          },
          "monthlyQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "rotation" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKeyRotation"
          },
          "authorizedEntities" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.EntityIdentifier"
            },
            "description" : "???"
          },
          "clientId" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.oidc.OIDCAccessTokenValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.UserRight" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "tenant" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TenantAccess"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.TeamAccess"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.InHeader" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "remove" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.auth.GenericOauth2ModuleConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "superAdmins" : {
            "description" : "???",
            "type" : "boolean"
          },
          "loginUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "userInfoUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "accessTokenField" : {
            "description" : "???",
            "type" : "string"
          },
          "clientId" : {
            "description" : "???",
            "type" : "string"
          },
          "noWildcardRedirectURI" : {
            "description" : "???",
            "type" : "boolean"
          },
          "userValidators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.UserValidator"
            },
            "description" : "???"
          },
          "extraMetadata" : {
            "description" : "???",
            "type" : "object"
          },
          "apiKeyTagsField" : {
            "description" : "???",
            "type" : "string"
          },
          "authorizeUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "dataOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "otoroshiDataField" : {
            "description" : "???",
            "type" : "string"
          },
          "readProfileFromToken" : {
            "description" : "???",
            "type" : "boolean"
          },
          "pkce" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.auth.PKCEConfig"
            } ],
            "description" : "???"
          },
          "sessionMaxAge" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "clientSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "introspectionUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "otoroshiRightsField" : {
            "description" : "???",
            "type" : "string"
          },
          "claims" : {
            "description" : "???",
            "type" : "string"
          },
          "nameField" : {
            "description" : "???",
            "type" : "string"
          },
          "sessionCookieValues" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SessionCookieValues"
          },
          "useCookie" : {
            "description" : "???",
            "type" : "boolean"
          },
          "proxy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "scope" : {
            "description" : "???",
            "type" : "string"
          },
          "refreshTokens" : {
            "description" : "???",
            "type" : "boolean"
          },
          "oidConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "logoutUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "jwtVerifier" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
            } ],
            "description" : "???"
          },
          "rightsOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/otoroshi.models.UserRights"
            },
            "description" : "???"
          },
          "emailField" : {
            "description" : "???",
            "type" : "string"
          },
          "apiKeyMetaField" : {
            "description" : "???",
            "type" : "string"
          },
          "callbackUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "useJson" : {
            "description" : "???",
            "type" : "boolean"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "tokenUrl" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.quotas.InstanceQuotas" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.JQRequest" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.GlobalJwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "strict" : {
            "description" : "???",
            "type" : "boolean"
          },
          "algoSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "source" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtTokenLocation"
          },
          "strategy" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerifierStrategy"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.ConsoleSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.TenantAccess" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "canWrite" : {
            "description" : "???",
            "type" : "boolean"
          },
          "value" : {
            "description" : "???",
            "type" : "string"
          },
          "canRead" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.discovery.DiscoverySelfRegistrationTransformer" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.TargetPredicate" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.IpStackGeolocationSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "apikey" : {
            "description" : "???",
            "type" : "string"
          },
          "timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.DefaultTemplates" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "team" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "script" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "apikey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "group" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "tcpService" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "verifier" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "service" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "target" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "certificate" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "dataExporter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "route" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "backend" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "template" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "tenant" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "authConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "descriptor" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.SAMLSignature" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "algorithm" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SAMLSignatureAlgorithm"
          },
          "canocalizationMethod" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SAMLCanocalizationMethod"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesAdmissionWebhookCRDValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.MissingHeadersIn" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.clientcert.HasClientCertMatchingHttpValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.ClientSupport" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "client" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.KubernetesClient"
          },
          "env" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.env.Env"
          }
        }
      },
      "otoroshi.plugins.core.DefaultPlugins" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.DataExporterConfigFiltering" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "include" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "description" : "???"
          },
          "exclude" : {
            "type" : "array",
            "items" : {
              "type" : "object"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.static.StaticResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.apikeys.CertificateAsApikey" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.oidc.OIDCThirdPartyApiKeyConfigMode" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ServiceGroup" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.OAuth1Provider" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.XmlToJsonRequest" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.discovery.DiscoveryHelper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.ssl.pki.models.GenCsrQuery" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "client" : {
            "description" : "???",
            "type" : "boolean"
          },
          "hosts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "key" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenKeyPairQuery"
          },
          "includeAIA" : {
            "description" : "???",
            "type" : "boolean"
          },
          "signatureAlg" : {
            "description" : "???",
            "type" : "string"
          },
          "existingSerialNumber" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "integer",
              "format" : "int64"
            } ],
            "description" : "???"
          },
          "duration" : {
            "description" : "???",
            "type" : "number"
          },
          "digestAlg" : {
            "description" : "???",
            "type" : "string"
          },
          "ca" : {
            "description" : "???",
            "type" : "boolean"
          },
          "name" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "subject" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.NgApikeyMatcher" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "none_meta_keys_in" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "all_meta_keys_in" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "all_meta_in" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "none_meta_in" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "one_tag_in" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "one_meta_in" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "all_tags_in" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "one_meta_key_in" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "none_tag_in" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.apikeys.HasAllowedApiKeyValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.NetworkLocationMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "dataCenter" : {
            "description" : "???",
            "type" : "string"
          },
          "rack" : {
            "description" : "???",
            "type" : "string"
          },
          "region" : {
            "description" : "???",
            "type" : "string"
          },
          "provider" : {
            "description" : "???",
            "type" : "string"
          },
          "zone" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.script.PluginType" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.utils.mailer.ConsoleMailerSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.oauth1.OAuth1CallerPlugin" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.XmlToJsonResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.DataExporterConfigType" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.FailedCrdParsing" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "crd" : {
            "description" : "???",
            "type" : "object"
          },
          "namespace" : {
            "description" : "???",
            "type" : "string"
          },
          "pluralName" : {
            "description" : "???",
            "type" : "string"
          },
          "error" : {
            "description" : "???",
            "type" : "string"
          },
          "customizedSpec" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.script.Script" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "code" : {
            "description" : "???",
            "type" : "string"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "type" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.PluginType"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesToOtoroshiCertSyncJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.clientcert.SubIss" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "sn" : {
            "description" : "???",
            "type" : "string"
          },
          "subject" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.DN"
          },
          "issuer" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.DN"
          }
        }
      },
      "otoroshi.utils.mailer.MailjetSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "apiKeyPublic" : {
            "description" : "???",
            "type" : "string"
          },
          "apiKeyPrivate" : {
            "description" : "???",
            "type" : "string"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "???"
          }
        }
      },
      "play.api.libs.ws.WSProxyServer" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.GlobalPerIpAddressThrottlingQuotas" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "within" : {
            "description" : "???",
            "type" : "boolean"
          },
          "sec_calls" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.plugins.loggers.BodyLoggerConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "json" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.models.ServiceDescriptorIdentifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.SecComHeaders" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "claimRequestName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "stateRequestName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "stateResponseName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.SAMLCredentials" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "signingKey" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.Credential"
          },
          "encryptionKey" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.Credential"
          },
          "signedDocuments" : {
            "description" : "???",
            "type" : "boolean"
          },
          "encryptedAssertions" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.models.StoredNgTarget" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "target" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
          }
        }
      },
      "otoroshi.next.plugins.NgApikeyExtractorCustomHeaders" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "client_id_header_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "client_secret_header_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.tcp.TlsMode" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ESKPAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "certId" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.users.HasAllowedUsersValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgTreeRouter" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgCorsSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allow_credentials" : {
            "description" : "???",
            "type" : "boolean"
          },
          "max_age" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "number"
            } ],
            "description" : "???"
          },
          "allow_origin" : {
            "description" : "???",
            "type" : "string"
          },
          "allow_methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "excluded_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allow_headers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "expose_headers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.ServiceDescriptor" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "buildMode" : {
            "description" : "???",
            "type" : "boolean"
          },
          "hosts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "privateApp" : {
            "description" : "???",
            "type" : "boolean"
          },
          "localScheme" : {
            "description" : "???",
            "type" : "string"
          },
          "authConfigRef" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "issueCertCA" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "root" : {
            "description" : "???",
            "type" : "string"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "additionalHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "domain" : {
            "description" : "???",
            "type" : "string"
          },
          "clientConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ClientConfig"
          },
          "matchingRoot" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "forceHttps" : {
            "description" : "???",
            "type" : "boolean"
          },
          "localHost" : {
            "description" : "???",
            "type" : "string"
          },
          "sendOtoroshiHeadersBack" : {
            "description" : "???",
            "type" : "boolean"
          },
          "healthCheck" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.HealthCheck"
          },
          "strictlyPrivate" : {
            "description" : "???",
            "type" : "boolean"
          },
          "detectApiKeySooner" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowHttp10" : {
            "description" : "???",
            "type" : "boolean"
          },
          "subdomain" : {
            "description" : "???",
            "type" : "string"
          },
          "paths" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "stripPath" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secComAlgoChallengeOtoToBack" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "apiKeyConstraints" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKeyConstraints"
          },
          "env" : {
            "description" : "???",
            "type" : "string"
          },
          "xForwardedHeaders" : {
            "description" : "???",
            "type" : "boolean"
          },
          "transformerRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "gzip" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.gzip.GzipConfig"
          },
          "sendInfoToken" : {
            "description" : "???",
            "type" : "boolean"
          },
          "tcpUdpTunneling" : {
            "description" : "???",
            "type" : "boolean"
          },
          "removeHeadersOut" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "useAkkaHttpClient" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maintenanceMode" : {
            "description" : "???",
            "type" : "boolean"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "removeHeadersIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "logAnalyticsOnServer" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secComAlgoInfoToken" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "userFacing" : {
            "description" : "???",
            "type" : "boolean"
          },
          "transformerConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "clientValidatorRef" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "securityExcludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "ipFiltering" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.IpFiltering"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Target"
            },
            "description" : "???"
          },
          "redirection" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.RedirectionSettings"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "restrictions" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Restrictions"
          },
          "overrideHost" : {
            "description" : "???",
            "type" : "boolean"
          },
          "accessValidator" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.AccessValidatorRef"
          },
          "sendStateChallenge" : {
            "description" : "???",
            "type" : "boolean"
          },
          "chaosConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ChaosConfig"
          },
          "secComInfoTokenVersion" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SecComInfoTokenVersion"
          },
          "additionalHeadersOut" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "secComHeaders" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SecComHeaders"
          },
          "matchingHeaders" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "secComAlgoChallengeBackToOto" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "secComUseSameAlgo" : {
            "description" : "???",
            "type" : "boolean"
          },
          "useNewWSClient" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secComExcludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "redirectToLocal" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enforceSecureCommunication" : {
            "description" : "???",
            "type" : "boolean"
          },
          "missingOnlyHeadersOut" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "secComSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "handleLegacyDomain" : {
            "description" : "???",
            "type" : "boolean"
          },
          "canary" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Canary"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "plugins" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.plugins.Plugins"
          },
          "secComTtl" : {
            "description" : "???",
            "type" : "number"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "secComVersion" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SecComVersion"
          },
          "preRouting" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.PreRoutingRef"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "readOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "privatePatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "targetsLoadBalancing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.LoadBalancing"
          },
          "cors" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.CorsSettings"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "publicPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "api" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiDescriptor"
          },
          "missingOnlyHeadersIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "issueCert" : {
            "description" : "???",
            "type" : "boolean"
          },
          "headersVerification" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "jwtVerifier" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtVerifier"
          },
          "letsEncrypt" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.UdpTunnel" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.izanami.IzanamiCanaryConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "izanamiClientId" : {
            "description" : "???",
            "type" : "string"
          },
          "configId" : {
            "description" : "???",
            "type" : "string"
          },
          "experimentId" : {
            "description" : "???",
            "type" : "string"
          },
          "mtls" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "izanamiUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "timeout" : {
            "description" : "???",
            "type" : "number"
          },
          "izanamiClientSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "routeConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.RemoveHeadersIn" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "names" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.RobotConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "robot_txt_content" : {
            "description" : "???",
            "type" : "string"
          },
          "meta_content" : {
            "description" : "???",
            "type" : "string"
          },
          "robot_enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "header_content" : {
            "description" : "???",
            "type" : "string"
          },
          "header_enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "meta_enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesSupport" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.metrics.PrometheusEndpoint" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.wrappers.PreRoutingWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.TeamAccess" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "canRead" : {
            "description" : "???",
            "type" : "boolean"
          },
          "value" : {
            "description" : "???",
            "type" : "string"
          },
          "canWrite" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.OtoroshiAdminType" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.log4j.Log4jExpressionParser" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.ssl.Cert" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "letsEncrypt" : {
            "description" : "???",
            "type" : "boolean"
          },
          "keypair" : {
            "description" : "???",
            "type" : "boolean"
          },
          "to" : {
            "description" : "???",
            "type" : "number"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "exposed" : {
            "description" : "???",
            "type" : "boolean"
          },
          "autoRenew" : {
            "description" : "???",
            "type" : "boolean"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "revoked" : {
            "description" : "???",
            "type" : "boolean"
          },
          "from" : {
            "description" : "???",
            "type" : "number"
          },
          "client" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ca" : {
            "description" : "???",
            "type" : "boolean"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "chain" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "password" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "sans" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "selfSigned" : {
            "description" : "???",
            "type" : "boolean"
          },
          "entityMetadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "privateKey" : {
            "description" : "???",
            "type" : "string"
          },
          "domain" : {
            "description" : "???",
            "type" : "string"
          },
          "caRef" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "subject" : {
            "description" : "???",
            "type" : "string"
          },
          "valid" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.AlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.tcp.TcpRule" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "domain" : {
            "description" : "???",
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.tcp.TcpTarget"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.geoloc.MaxMindGeolocationHelper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.IngressSupport" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.utils.TypedMap" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.CleverCloudSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "consumerSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "consumerKey" : {
            "description" : "???",
            "type" : "string"
          },
          "secret" : {
            "description" : "???",
            "type" : "string"
          },
          "token" : {
            "description" : "???",
            "type" : "string"
          },
          "orgaId" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.hmac.HMACCallerPlugin" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.AllowHttpMethods" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "forbidden" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.apikeys.ClientCredentialFlow" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.JsonTransform" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesResourcesContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "globalConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.GlobalConfig>"
            },
            "description" : "???"
          },
          "tenants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.Tenant>"
            },
            "description" : "???"
          },
          "serviceGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.ServiceGroup>"
            },
            "description" : "???"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.next.models.StoredNgTarget>"
            },
            "description" : "???"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.Team>"
            },
            "description" : "???"
          },
          "serviceDescriptors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.ServiceDescriptor>"
            },
            "description" : "???"
          },
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.ssl.Cert>"
            },
            "description" : "???"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.next.models.NgService>"
            },
            "description" : "???"
          },
          "authModules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.auth.AuthModuleConfig>"
            },
            "description" : "???"
          },
          "dataExporters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.DataExporterConfig>"
            },
            "description" : "???"
          },
          "scripts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.script.Script>"
            },
            "description" : "???"
          },
          "jwtVerifiers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.GlobalJwtVerifier>"
            },
            "description" : "???"
          },
          "backends" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.next.models.StoredNgBackend>"
            },
            "description" : "???"
          },
          "apiKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.ApiKey>"
            },
            "description" : "???"
          },
          "tcpServices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.tcp.TcpService>"
            },
            "description" : "???"
          },
          "simpleAdmins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.models.SimpleOtoroshiAdmin>"
            },
            "description" : "???"
          },
          "routes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoResHolder<otoroshi.next.models.NgRoute>"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.OtoroshiResourcesContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "routes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
            },
            "description" : "???"
          },
          "apiKeys" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
            },
            "description" : "???"
          },
          "backends" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgBackend"
            },
            "description" : "???"
          },
          "scripts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.script.Script"
            },
            "description" : "???"
          },
          "jwtVerifiers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.GlobalJwtVerifier"
            },
            "description" : "???"
          },
          "tenants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Tenant"
            },
            "description" : "???"
          },
          "dataExporters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfig"
            },
            "description" : "???"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Team"
            },
            "description" : "???"
          },
          "services" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgService"
            },
            "description" : "???"
          },
          "serviceDescriptors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
            },
            "description" : "???"
          },
          "globalConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.GlobalConfig"
            },
            "description" : "???"
          },
          "authModules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.AuthModuleConfig"
            },
            "description" : "???"
          },
          "tcpServices" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.tcp.TcpService"
            },
            "description" : "???"
          },
          "certificates" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.ssl.Cert"
            },
            "description" : "???"
          },
          "simpleAdmins" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.SimpleOtoroshiAdmin"
            },
            "description" : "???"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.StoredNgTarget"
            },
            "description" : "???"
          },
          "serviceGroups" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.ServiceGroup"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.Canary" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "traffic" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Target"
            },
            "description" : "???"
          },
          "root" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgRouteDomainAndPathWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "route" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
          },
          "domain" : {
            "description" : "???",
            "type" : "string"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.biscuit.BiscuitToken" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.BadResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "body" : {
            "description" : "???",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.wrappers.RequestSinkWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.CanaryMode" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "traffic" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "root" : {
            "description" : "???",
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.clientcert.HasClientCertMatchingApikeyValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.authcallers.BasicAuthCallerConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "username" : {
            "description" : "???",
            "type" : "string"
          },
          "password" : {
            "description" : "???",
            "type" : "string"
          },
          "headerName" : {
            "description" : "???",
            "type" : "string"
          },
          "headerValueFormat" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.RemoveHeadersOut" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "names" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.env.Env" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "circuitBeakersHolder" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.gateway.CircuitBreakersHolder"
          }
        }
      },
      "otoroshi.plugins.jwt.JwtUserExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgRoute" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "debug_flow" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "export_reporting" : {
            "description" : "???",
            "type" : "boolean"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "frontend" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgFrontend"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "backend_ref" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "backend" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgBackend"
          }
        }
      },
      "otoroshi.auth.SAMLSignatureAlgorithm" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.ForceHttpsTraffic" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.GlobalConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "geolocationSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.GeolocationSettings"
          },
          "alertsEmails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "throttlingQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "maxWebhookSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "maxConcurrentRequests" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "cleverSettings" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.CleverCloudSettings"
            } ],
            "description" : "???"
          },
          "templates" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.DefaultTemplates"
          },
          "endlessIpAddresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "plugins" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.plugins.Plugins"
          },
          "kafkaConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.events.KafkaConfig"
            } ],
            "description" : "???"
          },
          "maxLogsSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "proxies" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Proxies"
          },
          "enableEmbeddedMetrics" : {
            "description" : "???",
            "type" : "boolean"
          },
          "elasticReadsConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.ElasticAnalyticsConfig"
            } ],
            "description" : "???"
          },
          "trustXForwarded" : {
            "description" : "???",
            "type" : "boolean"
          },
          "quotasSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.QuotasAlmostExceededSettings"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "limitConcurrentRequests" : {
            "description" : "???",
            "type" : "boolean"
          },
          "useAkkaHttpClient" : {
            "description" : "???",
            "type" : "boolean"
          },
          "elasticWritesConfigs" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.ElasticAnalyticsConfig"
            },
            "description" : "???"
          },
          "logAnalyticsOnServer" : {
            "description" : "???",
            "type" : "boolean"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "apiReadOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "backOfficeAuthRef" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "streamEntityOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "otoroshiId" : {
            "description" : "???",
            "type" : "string"
          },
          "mailerSettings" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.MailerSettings"
            } ],
            "description" : "???"
          },
          "lines" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "middleFingers" : {
            "description" : "???",
            "type" : "boolean"
          },
          "analyticsWebhooks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Webhook"
            },
            "description" : "???"
          },
          "autoCert" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AutoCert"
          },
          "maintenanceMode" : {
            "description" : "???",
            "type" : "boolean"
          },
          "letsEncryptSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.letsencrypt.LetsEncryptSettings"
          },
          "snowMonkeyConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.SnowMonkeyConfig"
          },
          "scripts" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.GlobalScripts"
          },
          "perIpThrottlingQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "useCircuitBreakers" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maxHttp10ResponseSize" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "tlsSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TlsSettings"
          },
          "statsdConfig" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.events.StatsdConfig"
            } ],
            "description" : "???"
          },
          "autoLinkToDefaultGroup" : {
            "description" : "???",
            "type" : "boolean"
          },
          "alertsWebhooks" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.Webhook"
            },
            "description" : "???"
          },
          "ipFiltering" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.IpFiltering"
          },
          "u2fLoginOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "userAgentSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.UserAgentSettings"
          }
        }
      },
      "otoroshi.next.plugins.BuildMode" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.discovery.DiscoverySelfRegistrationSink" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ExporterRef" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ref" : {
            "description" : "???",
            "type" : "string"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenKeyPairQuery" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "algo" : {
            "description" : "???",
            "type" : "string"
          },
          "size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.plugins.NgRestrictionPath" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "method" : {
            "description" : "???",
            "type" : "string"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.ReadOnlyCalls" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.CRDContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "kubernetes" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.KubernetesResourcesContext"
          },
          "otoroshi" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.jobs.kubernetes.OtoroshiResourcesContext"
          }
        }
      },
      "otoroshi.next.plugins.QueryTransformerConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "remove" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "rename" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.NgFrontend" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "query" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "domains" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgDomainAndPath"
            },
            "description" : "???"
          },
          "methods" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "exact" : {
            "description" : "???",
            "type" : "boolean"
          },
          "strip_path" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.models.StoredNgTargetDataStore" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.OutageStrategy" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.MockResponsesConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.MockResponse"
            },
            "description" : "???"
          },
          "pass_through" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.ClientIdAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "headerName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "queryName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.BasicAuthUser" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "metadata" : {
            "description" : "???",
            "type" : "object"
          },
          "password" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "email" : {
            "description" : "???",
            "type" : "string"
          },
          "webauthn" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.auth.WebAuthnDetails"
            } ],
            "description" : "???"
          },
          "rights" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.ClientConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "connectionTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "useCircuitBreaker" : {
            "description" : "???",
            "type" : "boolean"
          },
          "retryInitialDelay" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "cacheConnectionSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.CacheConnectionSettings"
          },
          "proxy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "callTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "callAndStreamTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "globalTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "maxErrors" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "retries" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "backoffFactor" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "customTimeouts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.CustomTimeouts"
            },
            "description" : "???"
          },
          "idleTimeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "sampleInterval" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.plugins.ContextValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "value" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.next.plugins.NgBadResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "body" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.useragent.UserAgentInfoEndpoint" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ApiKeyConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "customHeadersAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.CustomHeadersAuthConstraints"
          },
          "routing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKeyRouteMatcher"
          },
          "clientIdAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ClientIdAuthConstraints"
          },
          "jwtAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtAuthConstraints"
          },
          "basicAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.BasicAuthConstraints"
          }
        }
      },
      "otoroshi.plugins.metrics.ServiceMetrics" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.core.apikeys.BasicAuthApikeyExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.izanami.IzanamiCanary" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgOtoroshiChallengeConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.plugins.mirror.MirroringPlugin" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgOtoroshiInfoConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.utils.http.DN" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.cache.ResponseCache" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.JsonPathUtils" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.ssl.ClientAuth" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.SimpleOtoroshiAdmin" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "username" : {
            "description" : "???",
            "type" : "string"
          },
          "password" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "label" : {
            "description" : "???",
            "type" : "string"
          },
          "createdAt" : {
            "description" : "???",
            "type" : "number"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "rights" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "typ" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.OtoroshiAdminType"
          }
        }
      },
      "otoroshi.models.EntityIdentifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.ContextValidation" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "validators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.ContextValidator"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.izanami.IzanamiCanaryRoutingConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "routes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.izanami.IzanamiCanaryRoutingConfigRoute"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.NgApikeyExtractorBasic" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "header_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "query_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.log4j.Log4jExpression" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "parts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.plugins.log4j.Log4jExpressionPart"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.ssl.pki.models.SignCertResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "cert" : {
            "description" : "???",
            "type" : "string"
          },
          "csr" : {
            "description" : "???",
            "type" : "string"
          },
          "ca" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string",
              "description" : "pem encoded X509 certificate"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.discovery.DiscoveryTargetsSelector" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgDomainAndPath" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.JQ" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "request" : {
            "description" : "???",
            "type" : "string"
          },
          "response" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.events.KafkaConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "keyPass" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "servers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "sendEvents" : {
            "description" : "???",
            "type" : "boolean"
          },
          "truststore" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "topic" : {
            "description" : "???",
            "type" : "string"
          },
          "keystore" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.SnowMonkeyChaos" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "large_request_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgLargeRequestFaultConfig"
            } ],
            "description" : "???"
          },
          "large_response_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgLargeResponseFaultConfig"
            } ],
            "description" : "???"
          },
          "latency_injection_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgLatencyInjectionFaultConfig"
            } ],
            "description" : "???"
          },
          "bad_responses_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgBadResponsesFaultConfig"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesIngressSyncJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.UserRights" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rights" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.UserRight"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.JsonTransformConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.biscuit.vavr_implicits" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.IndexSettingsInterval" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jq.JqBodyTransformer" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.discovery.DiscoveryJobServiceId" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgHeaderValuesConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.wrappers.AccessValidatorWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.MaintenanceMode" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "endpoint" : {
            "description" : "???",
            "type" : "string"
          },
          "templates" : {
            "description" : "???",
            "type" : "object"
          },
          "token" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "restartDependantDeployments" : {
            "description" : "???",
            "type" : "boolean"
          },
          "watchGracePeriodSeconds" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "crds" : {
            "description" : "???",
            "type" : "boolean"
          },
          "watch" : {
            "description" : "???",
            "type" : "boolean"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "openshiftDnsOperatorCoreDnsName" : {
            "description" : "???",
            "type" : "string"
          },
          "syncIntervalSeconds" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "kubeDnsOperatorCoreDnsName" : {
            "description" : "???",
            "type" : "string"
          },
          "defaultGroup" : {
            "description" : "???",
            "type" : "string"
          },
          "kubeDnsOperatorCoreDnsNamespace" : {
            "description" : "???",
            "type" : "string"
          },
          "triggerKey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "otoroshiNamespace" : {
            "description" : "???",
            "type" : "string"
          },
          "watchTimeoutSeconds" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "openshiftDnsOperatorCleanupDomains" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "namespaces" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "openshiftDnsOperatorCoreDnsPort" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "coreDnsEnv" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "triggerPath" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "image" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "coreDnsConfigMapName" : {
            "description" : "???",
            "type" : "string"
          },
          "clusterDomain" : {
            "description" : "???",
            "type" : "string"
          },
          "caCert" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "trust" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ingressClasses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "userPassword" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "syncDaikokuApikeysOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "openshiftDnsOperatorCleanup" : {
            "description" : "???",
            "type" : "boolean"
          },
          "kubeSystemNamespace" : {
            "description" : "???",
            "type" : "string"
          },
          "ingressEndpointIp" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "namespacesLabels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "openshiftDnsOperatorCleanupNames" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "kubeDnsOperatorCoreDnsPort" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "mutatingWebhookName" : {
            "description" : "???",
            "type" : "string"
          },
          "kubeLeader" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ingressEndpointHostname" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "openshiftDnsOperatorIntegration" : {
            "description" : "???",
            "type" : "boolean"
          },
          "validatingWebhookName" : {
            "description" : "???",
            "type" : "string"
          },
          "coreDnsDeploymentName" : {
            "description" : "???",
            "type" : "string"
          },
          "ingresses" : {
            "description" : "???",
            "type" : "boolean"
          },
          "useProxyState" : {
            "description" : "???",
            "type" : "boolean"
          },
          "coreDnsIntegrationDryRun" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ingressEndpointPublishedService" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "corednsPort" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "coreDnsIntegration" : {
            "description" : "???",
            "type" : "boolean"
          },
          "otoroshiServiceName" : {
            "description" : "???",
            "type" : "string"
          },
          "meshDomain" : {
            "description" : "???",
            "type" : "string"
          },
          "kubeDnsOperatorIntegration" : {
            "description" : "???",
            "type" : "boolean"
          },
          "triggerHost" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "openshiftDnsOperatorCoreDnsNamespace" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.script.plugins.Plugins" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "config" : {
            "description" : "???",
            "type" : "object"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "excluded" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.cache.ResponseCacheFilterConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "json" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.next.models.NgMinimalBackend" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "root" : {
            "description" : "???",
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
            },
            "description" : "???"
          },
          "load_balancing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.LoadBalancing"
          },
          "target_refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "rewrite" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.workflow.WorkflowJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.apikeys.ClientCredentialService" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.DisableHttp10" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.loggers.RequestBodyEvent" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ua" : {
            "description" : "???",
            "type" : "string"
          },
          "reqId" : {
            "description" : "???",
            "type" : "string"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "from" : {
            "description" : "???",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "method" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.auth.WebAuthnDetails" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "handle" : {
            "description" : "???",
            "type" : "string"
          },
          "credentials" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.tcp.TcpTarget" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "host" : {
            "description" : "???",
            "type" : "string"
          },
          "ip" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "port" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "tls" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.GeoPositionRadius" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "latitude" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "longitude" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "radius" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.models.InCookie" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.oidc.OIDCHeaders" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.apikeys.ApiKeyAllowedOnThisServiceValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.RSAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "publicKey" : {
            "description" : "???",
            "type" : "string"
          },
          "privateKey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.tcp.TcpService" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "port" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.tcp.TcpRule"
            },
            "description" : "???"
          },
          "clientAuth" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.ssl.ClientAuth"
          },
          "interface" : {
            "description" : "???",
            "type" : "string"
          },
          "sni" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.tcp.SniSettings"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "tls" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.tcp.TlsMode"
          }
        }
      },
      "otoroshi.models.LocalJwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "strategy" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerifierStrategy"
          },
          "algoSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "source" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.JwtTokenLocation"
          },
          "strict" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.utils.gzip.GzipConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "compressionLevel" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "blackList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "chunkedThreshold" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "bufferSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "whiteList" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.useragent.UserAgentExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.Webhook" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          }
        }
      },
      "otoroshi.next.models.NgCustomTimeouts" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "connection_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "call_and_stream_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "call_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "idle_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "global_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.VerifierStrategy" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.TcpTunnel" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.DefaultToken" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "strict" : {
            "description" : "???",
            "type" : "boolean"
          },
          "token" : {
            "description" : "???",
            "type" : "object"
          },
          "verificationSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          }
        }
      },
      "otoroshi.models.RemainingQuotas" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "currentCallsPerSec" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "remainingCallsPerSec" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "currentCallsPerDay" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "authorizedCallsPerDay" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "currentCallsPerMonth" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "remainingCallsPerMonth" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "authorizedCallsPerSec" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "authorizedCallsPerMonth" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "remainingCallsPerDay" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.GlobalScripts" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "jobConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "transformersConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "transformersRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "preRouteRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sinkConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "jobRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "validatorRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sinkRefs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "preRouteConfig" : {
            "description" : "???",
            "type" : "object"
          },
          "validatorConfig" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.plugins.cache.ResponseCacheConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "json" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.plugins.biscuit.BiscuitValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.JwtAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "keyPairSigned" : {
            "description" : "???",
            "type" : "boolean"
          },
          "cookieName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "queryName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "headerName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "secretSigned" : {
            "description" : "???",
            "type" : "boolean"
          },
          "maxJwtLifespanSecs" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "integer",
              "format" : "int64"
            } ],
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "includeRequestAttributes" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.apikeys.ClientCredentialFlowExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.log4j.Log4ShellFilter" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.StoredNgBackend" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "backend" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgBackend"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.ServiceGroupIdentifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.script.AccessValidatorRef" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenCertResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ca" : {
            "description" : "???",
            "type" : "string"
          },
          "caChain" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "pem encoded X509 certificate"
            },
            "description" : "???"
          },
          "csrQuery" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.ssl.pki.models.GenCsrQuery"
            } ],
            "description" : "???"
          },
          "cert" : {
            "description" : "???",
            "type" : "string"
          },
          "serial" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "key" : {
            "description" : "???",
            "type" : "string"
          },
          "csr" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgPluginInstanceConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.models.PrivateAppsUser" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "realm" : {
            "description" : "???",
            "type" : "string"
          },
          "token" : {
            "description" : "???",
            "type" : "object"
          },
          "expiredAt" : {
            "description" : "???",
            "type" : "number"
          },
          "profile" : {
            "description" : "???",
            "type" : "object"
          },
          "lastRefresh" : {
            "description" : "???",
            "type" : "number"
          },
          "randomId" : {
            "description" : "???",
            "type" : "string"
          },
          "email" : {
            "description" : "???",
            "type" : "string"
          },
          "createdAt" : {
            "description" : "???",
            "type" : "number"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "authConfigId" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "otoroshiData" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "object"
            } ],
            "description" : "???"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.geoloc.GeolocationInfoEndpoint" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgTreeNodePath" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.QueryTransformer" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "remove" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "rename" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.NgService" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "client" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgClientConfig"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "routes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgMinimalRoute"
            },
            "description" : "???"
          },
          "debug_flow" : {
            "description" : "???",
            "type" : "boolean"
          },
          "export_reporting" : {
            "description" : "???",
            "type" : "boolean"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "groups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.HealthCheck" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.core.apikeys.ClientIdApikeyExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.StaticResponseConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "body" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.useragent.UserAgentInfoHeader" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.HeadersValidation" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.SnowMonkeyConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "dryRun" : {
            "description" : "???",
            "type" : "boolean"
          },
          "outageDurationTo" : {
            "description" : "???",
            "type" : "number"
          },
          "chaosConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ChaosConfig"
          },
          "timesPerDay" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "outageDurationFrom" : {
            "description" : "???",
            "type" : "number"
          },
          "startTime" : {
            "description" : "???",
            "type" : "string"
          },
          "includeUserFacingDescriptors" : {
            "description" : "???",
            "type" : "boolean"
          },
          "targetGroups" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "stopTime" : {
            "description" : "???",
            "type" : "string"
          },
          "outageStrategy" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.OutageStrategy"
          }
        }
      },
      "otoroshi.models.IndexSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "clientSide" : {
            "description" : "???",
            "type" : "boolean"
          },
          "interval" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.IndexSettingsInterval"
          }
        }
      },
      "otoroshi.auth.NameIDFormat" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ZoneMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "zone" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgPlugins" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "slots" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgPluginInstance"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.Http2Caller" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesOtoroshiCRDsControllerJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.auth.GroupFilter" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "group" : {
            "description" : "???",
            "type" : "string"
          },
          "tenant" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TenantAccess"
          },
          "team" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.mirror.RequestContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "descriptor" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ServiceDescriptor"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "config" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.mirror.MirroringPluginConfig"
          }
        }
      },
      "otoroshi.plugins.biscuit.PreRoutingVerifierContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ctx" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.PreRoutingContext"
          },
          "apk" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.ApiKey"
          }
        }
      },
      "otoroshi.next.plugins.OtoroshiChallenge" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "raw" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.models.AutoCert" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "replyNicely" : {
            "description" : "???",
            "type" : "boolean"
          },
          "notAllowed" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "caRef" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.RestrictionPath" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "method" : {
            "description" : "???",
            "type" : "string"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.loggers.BodyLoggerFilterConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "json" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.plugins.external.ExternalHttpValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgClientConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "idle_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "sample_interval" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "cache_connection_settings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgCacheConnectionSettings"
          },
          "call_and_stream_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "custom_timeouts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgCustomTimeouts"
            },
            "description" : "???"
          },
          "connection_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "call_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "global_timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "retry_initial_delay" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "backoff_factor" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "proxy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "retries" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "max_errors" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.plugins.composite.CompositePlugin" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.wrappers.CompositeWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.GeolocationMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "positions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.GeoPositionRadius"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.BadResponsesFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.BadResponse"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.SOAPActionConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "jq_response_filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "jq_request_filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "preserve_query" : {
            "description" : "???",
            "type" : "boolean"
          },
          "convert_request_body_to_xml" : {
            "description" : "???",
            "type" : "boolean"
          },
          "charset" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "url" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "action" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "envelope" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.Target" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "host" : {
            "description" : "???",
            "type" : "string"
          },
          "weight" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "protocol" : {
            "description" : "???",
            "type" : "string"
          },
          "predicate" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TargetPredicate"
          },
          "ipAddress" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "scheme" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.Redirection" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "code" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "to" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.discovery.DiscoveryJobRegistrationId" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "id" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.ContextValidationConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "validators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.ContextValidator"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.Proxies" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "elastic" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "eventsWebhooks" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "jwk" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "auth" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "clevercloud" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "alertEmails" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "authority" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "services" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.GlobalThrottling" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ApiKeyRotation" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "rotationEvery" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "gracePeriod" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "nextSecret" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.utils.http.CacheConnectionSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "queueSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesAdmissionWebhookSidecarInjector" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.tcp.SniSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "forwardIfNoMatch" : {
            "description" : "???",
            "type" : "boolean"
          },
          "forwardsTo" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.tcp.TcpTarget"
          }
        }
      },
      "otoroshi.plugins.clientcert.HasClientCertMatchingValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.LoadBalancing" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.RedirectionSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "code" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "to" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgOtoroshiChallengeKeys" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.wrappers.RequestTransformerWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.OtoroshiAdmin" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.JwtVerifier" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jsoup.HtmlPatcher" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.apikeys.ClientCredentialFlowBody" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "scope" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "clientId" : {
            "description" : "???",
            "type" : "string"
          },
          "clientSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "grantType" : {
            "description" : "???",
            "type" : "string"
          },
          "bearerKind" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.auth.BasicAuthModuleConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "sessionMaxAge" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "users" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.BasicAuthUser"
            },
            "description" : "???"
          },
          "userValidators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.UserValidator"
            },
            "description" : "???"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "basicAuth" : {
            "description" : "???",
            "type" : "boolean"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "webauthn" : {
            "description" : "???",
            "type" : "boolean"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sessionCookieValues" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SessionCookieValues"
          }
        }
      },
      "otoroshi.plugins.metrics.PrometheusSupport" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.izanami.IzanamiProxyConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "izanamiClientId" : {
            "description" : "???",
            "type" : "string"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "mtls" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "featuresEnabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "featuresWithContextEnabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "izanamiClientSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "timeout" : {
            "description" : "???",
            "type" : "number"
          },
          "configurationEnabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "featurePattern" : {
            "description" : "???",
            "type" : "string"
          },
          "izanamiUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "autoContext" : {
            "description" : "???",
            "type" : "boolean"
          },
          "configPattern" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgBadResponsesFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "responses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgBadResponse"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.accesslog.KafkaAccessLog" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.AdditionalHeadersOut" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.core.apikeys.CustomHeadersApikeyExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.utils.mailer.EmailLocation" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "email" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.envoy.EnvoyControlPlane" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.RackMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "rack" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.oidc.ThirdPartyApiKeyConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ESAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "publicKey" : {
            "description" : "???",
            "type" : "string"
          },
          "privateKey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.oidc.OIDCThirdPartyApiKeyConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "headerName" : {
            "description" : "???",
            "type" : "string"
          },
          "localVerificationOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ttl" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "uniqueApiKey" : {
            "description" : "???",
            "type" : "boolean"
          },
          "rolesPath" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "mode" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.oidc.OIDCThirdPartyApiKeyConfigMode"
          },
          "quotasEnabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "monthlyQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "scopes" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "roles" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "throttlingQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "dailyQuota" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "oidcConfigRef" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.geoloc.GeolocationInfoHeader" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgServiceDataStore" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.NgPluginInstance" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "debug" : {
            "description" : "???",
            "type" : "boolean"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          },
          "exclude" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "include" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "plugin" : {
            "description" : "???",
            "type" : "string"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.JQRequestConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.hmac.HMACValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgRestrictions" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allow_last" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgRestrictionPath"
            },
            "description" : "???"
          },
          "forbidden" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgRestrictionPath"
            },
            "description" : "???"
          },
          "not_found" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgRestrictionPath"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.SendOtoroshiHeadersBack" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.accesslog.AccessLogJson" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.Tenant" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "description" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "id" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TenantId"
          }
        }
      },
      "otoroshi.models.BackOfficeUser" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "randomId" : {
            "description" : "???",
            "type" : "string"
          },
          "profile" : {
            "description" : "???",
            "type" : "object"
          },
          "authConfigId" : {
            "description" : "???",
            "type" : "string"
          },
          "rights" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          },
          "createdAt" : {
            "description" : "???",
            "type" : "number"
          },
          "token" : {
            "description" : "???",
            "type" : "object"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "email" : {
            "description" : "???",
            "type" : "string"
          },
          "simpleLogin" : {
            "description" : "???",
            "type" : "boolean"
          },
          "expiredAt" : {
            "description" : "???",
            "type" : "number"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "lastRefresh" : {
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.next.plugins.NoopSpanExporter" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.GeolocationSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ApiDescriptor" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "exposeApi" : {
            "description" : "???",
            "type" : "boolean"
          },
          "openApiDescriptorUrl" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.SessionCookieValues" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "httpOnly" : {
            "description" : "???",
            "type" : "boolean"
          },
          "secure" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesIngressToDescriptor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.RBAC" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "roles" : {
            "description" : "???",
            "type" : "string"
          },
          "allow" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allow_all" : {
            "description" : "???",
            "type" : "boolean"
          },
          "role_prefix" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "jwt_path" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "apikey_path" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "deny" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "user_path" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "deny_all" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.utils.letsencrypt.LetsEncryptSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "privateKey" : {
            "description" : "???",
            "type" : "string"
          },
          "contacts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "emails" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "publicKey" : {
            "description" : "???",
            "type" : "string"
          },
          "server" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgTlsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "certs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "loose" : {
            "description" : "???",
            "type" : "boolean"
          },
          "trust_all" : {
            "description" : "???",
            "type" : "boolean"
          },
          "trusted_certs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.ApiKeyRouteMatcher" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "oneTagIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "noneMetaKeysIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "oneMetaIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "oneMetaKeyIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allMetaKeysIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "noneTagIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allTagsIn" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allMetaIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "noneMetaIn" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.SOAPAction" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "jq_response_filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "jq_request_filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "preserve_query" : {
            "description" : "???",
            "type" : "boolean"
          },
          "convert_request_body_to_xml" : {
            "description" : "???",
            "type" : "boolean"
          },
          "charset" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "url" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "action" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "envelope" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.StoredNgBackendDataStore" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgApikeyExtractorJwt" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "cookie_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "key_pair_signed" : {
            "description" : "???",
            "type" : "boolean"
          },
          "query_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "secret_signed" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "include_request_attrs" : {
            "description" : "???",
            "type" : "boolean"
          },
          "header_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.Outage" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "descriptorName" : {
            "description" : "???",
            "type" : "string"
          },
          "descriptorId" : {
            "description" : "???",
            "type" : "string"
          },
          "until" : {
            "description" : "???",
            "type" : "string"
          },
          "duration" : {
            "description" : "???",
            "type" : "number"
          },
          "startedAt" : {
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.next.plugins.XForwardedHeaders" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.utils.ConcurrentMutableTypedMap" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.biscuit.PubKeyBiscuitToken" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "token" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.mailer.SendgridSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "apiKey" : {
            "description" : "???",
            "type" : "string"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.gateway.CircuitBreakersHolder" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgAuthModuleConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "module" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "pass_with_apikey" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.NgChaosConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "large_request_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgLargeRequestFaultConfig"
            } ],
            "description" : "???"
          },
          "large_response_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgLargeResponseFaultConfig"
            } ],
            "description" : "???"
          },
          "latency_injection_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgLatencyInjectionFaultConfig"
            } ],
            "description" : "???"
          },
          "bad_responses_fault_config" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgBadResponsesFaultConfig"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.loggers.BodyLogger" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.biscuit.AccessValidatorContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ctx" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.script.AccessContext"
          }
        }
      },
      "otoroshi.next.plugins.MockResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "body" : {
            "description" : "???",
            "type" : "string"
          },
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "method" : {
            "description" : "???",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.GlobalMaintenanceMode" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.LargeRequestFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "additionalRequestSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.models.NgBackend" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "root" : {
            "description" : "???",
            "type" : "string"
          },
          "health_check" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/otoroshi.models.HealthCheck"
            } ],
            "description" : "???"
          },
          "client" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgClientConfig"
          },
          "load_balancing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.LoadBalancing"
          },
          "rewrite" : {
            "description" : "???",
            "type" : "boolean"
          },
          "target_refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.NgApikeyExtractorClientId" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "header_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "query_name" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.mirror.MirroringPluginConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "conf" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.script.PreRoutingRef" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "excludedPatterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "refs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "config" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.plugins.biscuit.BiscuitConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "facts" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "publicKey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "secret" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "resources" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "enforce" : {
            "description" : "???",
            "type" : "boolean"
          },
          "extractorName" : {
            "description" : "???",
            "type" : "string"
          },
          "checks" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "extractor" : {
            "description" : "???",
            "type" : "string"
          },
          "rules" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sealedToken" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.NgJwtVerificationConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "verifiers" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.W3CTracingConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "kind" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.W3CTracingConfigKind"
          },
          "endpoint" : {
            "description" : "???",
            "type" : "string"
          },
          "timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "baggage" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.NgCacheConnectionSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "queue_size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.geoloc.IpStackGeolocationHelper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.DataExporterConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "bufferSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "jsonWorkers" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "groupDuration" : {
            "description" : "???",
            "type" : "number"
          },
          "groupSize" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "typ" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfigType"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sendWorkers" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "config" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.Exporter"
          },
          "projection" : {
            "description" : "???",
            "type" : "object"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "filtering" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.DataExporterConfigFiltering"
          }
        }
      },
      "otoroshi.next.plugins.NgEndlessHttpResponseConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "finger" : {
            "description" : "???",
            "type" : "boolean"
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.ssl.pki.models.GenKeyPairResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "publicKey" : {
            "description" : "???",
            "type" : "string"
          },
          "privateKey" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.discovery.DiscoveryJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.authcallers.OAuth2CallerConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "method" : {
            "description" : "???",
            "type" : "string"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "tlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "kind" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.authcallers.OAuth2Kind"
          },
          "password" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "cacheTokenSeconds" : {
            "description" : "???",
            "type" : "number"
          },
          "headerValueFormat" : {
            "description" : "???",
            "type" : "string"
          },
          "user" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "headerName" : {
            "description" : "???",
            "type" : "string"
          },
          "clientSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "scope" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "jsonPayload" : {
            "description" : "???",
            "type" : "boolean"
          },
          "clientId" : {
            "description" : "???",
            "type" : "string"
          },
          "audience" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.MissingHeadersOut" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.oidc.ThirdPartyApiKeyConfigType" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.authcallers.BasicAuthCaller" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.Keys" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.CustomHeadersAuthConstraints" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "clientIdHeaderName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "clientSecretHeaderName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.models.TlsSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "trustedCAsServer" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "includeJdkCaClient" : {
            "description" : "???",
            "type" : "boolean"
          },
          "randomIfNotFound" : {
            "description" : "???",
            "type" : "boolean"
          },
          "defaultDomain" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "includeJdkCaServer" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.models.MetricsSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.SdkWrapper" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "config" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.W3CTracingConfig"
          }
        }
      },
      "otoroshi.models.Sign" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "verificationSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          },
          "algoSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.AlgoSettings"
          }
        }
      },
      "otoroshi.plugins.mirror.MirroringEvent" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ctx" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.plugins.mirror.RequestContext"
          }
        }
      },
      "otoroshi.models.PassThrough" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "verificationSettings" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.VerificationSettings"
          }
        }
      },
      "otoroshi.plugins.external.ExternalHttpValidatorConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "config" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.plugins.geoloc.MaxMindGeolocationInfoExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgHeaderNamesConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "names" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.events.PulsarConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "namespace" : {
            "description" : "???",
            "type" : "string"
          },
          "mtlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          },
          "tenant" : {
            "description" : "???",
            "type" : "string"
          },
          "topic" : {
            "description" : "???",
            "type" : "string"
          },
          "uri" : {
            "description" : "???",
            "type" : "string"
          },
          "tlsTrustCertsFilePath" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.auth.SamlAuthModuleConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "sessionMaxAge" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          },
          "issuer" : {
            "description" : "???",
            "type" : "string"
          },
          "nameIDFormat" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.NameIDFormat"
          },
          "singleLogoutUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "emailAttributeName" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "userValidators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.UserValidator"
            },
            "description" : "???"
          },
          "validateAssertions" : {
            "description" : "???",
            "type" : "boolean"
          },
          "ssoProtocolBinding" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SAMLProtocolBinding"
          },
          "singleSignOnUrl" : {
            "description" : "???",
            "type" : "string"
          },
          "credentials" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SAMLCredentials"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "singleLogoutProtocolBinding" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SAMLProtocolBinding"
          },
          "validateSignature" : {
            "description" : "???",
            "type" : "boolean"
          },
          "validatingCertificates" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "usedNameIDAsEmail" : {
            "description" : "???",
            "type" : "boolean"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "sessionCookieValues" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SessionCookieValues"
          },
          "signature" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SAMLSignature"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesCRDsJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.Restrictions" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "forbidden" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.RestrictionPath"
            },
            "description" : "???"
          },
          "allowed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.RestrictionPath"
            },
            "description" : "???"
          },
          "notFound" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.RestrictionPath"
            },
            "description" : "???"
          },
          "allowLast" : {
            "description" : "???",
            "type" : "boolean"
          },
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.NgLargeRequestFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "additional_request_size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.auth.PKCEConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "algorithm" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.events.StatsdConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "datadog" : {
            "description" : "???",
            "type" : "boolean"
          },
          "host" : {
            "description" : "???",
            "type" : "string"
          },
          "port" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.plugins.RBACConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "roles" : {
            "description" : "???",
            "type" : "string"
          },
          "allow" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "allow_all" : {
            "description" : "???",
            "type" : "boolean"
          },
          "role_prefix" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "jwt_path" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "apikey_path" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "deny" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "user_path" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "deny_all" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.biscuit.VerificationContext" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgCanarySettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "traffic" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "root" : {
            "description" : "???",
            "type" : "string"
          },
          "targets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.JWKSAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "kty" : {
            "description" : "???",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "timeout" : {
            "description" : "???",
            "type" : "number"
          },
          "ttl" : {
            "description" : "???",
            "type" : "number"
          },
          "proxy" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "$ref" : "#/components/schemas/play.api.libs.ws.WSProxyServer"
            } ],
            "description" : "???"
          },
          "tlsConfig" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.utils.http.MtlsConfig"
          }
        }
      },
      "otoroshi.plugins.hmac.HMACUtils" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.authcallers.ForceRetryException" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.models.RoutingStrategy" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.IpAddressBlockList" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.biscuit.SealedBiscuitToken" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "token" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.IpFiltering" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "whitelist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "blacklist" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.quotas.ServiceQuotas" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.KubernetesCertSyncJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.ssl.pki.models.GenCsrResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "csr" : {
            "description" : "???",
            "type" : "string"
          },
          "publicKey" : {
            "description" : "???",
            "type" : "string"
          },
          "privateKey" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.models.NgMatchedRoute" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "route" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgRoute"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "no_more_segments" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.auth.SAMLProtocolBinding" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.MaxmindGeolocationSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "path" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.NgLargeResponseFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "additional_response_size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.models.LatencyInjectionFaultConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ratio" : {
            "format" : "double",
            "description" : "???",
            "type" : "number"
          },
          "from" : {
            "description" : "???",
            "type" : "number"
          },
          "to" : {
            "description" : "???",
            "type" : "number"
          }
        }
      },
      "otoroshi.plugins.oidc.OIDCAccessTokenAsApikey" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.auth.UserValidator" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "path" : {
            "description" : "???",
            "type" : "string"
          },
          "value" : {
            "description" : "???",
            "type" : "object"
          }
        }
      },
      "otoroshi.next.plugins.NgIpAddressesConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "addresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.RSAKPAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "certId" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.mailer.MailerSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.auth.Oauth1ModuleConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "userValidators" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.auth.UserValidator"
            },
            "description" : "???"
          },
          "name" : {
            "description" : "???",
            "type" : "string"
          },
          "accessTokenURL" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "consumerSecret" : {
            "description" : "???",
            "type" : "string"
          },
          "consumerKey" : {
            "description" : "???",
            "type" : "string"
          },
          "rightsOverride" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/otoroshi.models.UserRights"
            },
            "description" : "???"
          },
          "requestTokenURL" : {
            "description" : "???",
            "type" : "string"
          },
          "authorizeURL" : {
            "description" : "???",
            "type" : "string"
          },
          "sessionMaxAge" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "profileURL" : {
            "description" : "???",
            "type" : "string"
          },
          "callbackURL" : {
            "description" : "???",
            "type" : "string"
          },
          "sessionCookieValues" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.SessionCookieValues"
          },
          "httpMethod" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.auth.OAuth1Provider"
          },
          "desc" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.JsonToXmlRequest" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "filter" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.defer.DeferPlugin" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.StaticResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "status" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "body" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.next.plugins.OverrideHost" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgPublicPrivatePathsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "strict" : {
            "description" : "???",
            "type" : "boolean"
          },
          "public_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "private_patterns" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.InQueryParam" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "name" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.plugins.clientcert.ClientCertChainHeader" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.security.SecurityTxt" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.EntityLocation" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "tenant" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TenantId"
          },
          "teams" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.models.TeamId"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.RoutingRestrictions" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "allow_last" : {
            "description" : "???",
            "type" : "boolean"
          },
          "allowed" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgRestrictionPath"
            },
            "description" : "???"
          },
          "forbidden" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgRestrictionPath"
            },
            "description" : "???"
          },
          "not_found" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.next.plugins.NgRestrictionPath"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.GlobalPerIpAddressThrottling" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.izanami.IzanamiProxy" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.ErrorTemplate" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "template50x" : {
            "description" : "???",
            "type" : "string"
          },
          "templateMaintenance" : {
            "description" : "???",
            "type" : "string"
          },
          "templateBuild" : {
            "description" : "???",
            "type" : "string"
          },
          "serviceId" : {
            "description" : "???",
            "type" : "string"
          },
          "messages" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "template40x" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.utils.mailer.NoneMailerSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.EndlessHttpResponse" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "finger" : {
            "description" : "???",
            "type" : "boolean"
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.models.SecComInfoTokenVersion" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.biscuit.BiscuitHelper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.W3CTracing" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "kind" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.W3CTracingConfigKind"
          },
          "endpoint" : {
            "description" : "???",
            "type" : "string"
          },
          "timeout" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          },
          "baggage" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.models.NgSelectedBackendTarget" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "target" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgTarget"
          },
          "attempts" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "cb_start" : {
            "format" : "int64",
            "description" : "???",
            "type" : "integer"
          }
        }
      },
      "otoroshi.next.plugins.Robots" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "robot_txt_content" : {
            "description" : "???",
            "type" : "string"
          },
          "meta_content" : {
            "description" : "???",
            "type" : "string"
          },
          "robot_enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "header_content" : {
            "description" : "???",
            "type" : "string"
          },
          "header_enabled" : {
            "description" : "???",
            "type" : "boolean"
          },
          "meta_enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.utils.mailer.GenericMailerSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "url" : {
            "description" : "???",
            "type" : "string"
          },
          "headers" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "to" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/otoroshi.utils.mailer.EmailLocation"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.next.plugins.NgApikeyExtractors" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "basic" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyExtractorBasic"
          },
          "custom_headers" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyExtractorCustomHeaders"
          },
          "client_id" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyExtractorClientId"
          },
          "jwt" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyExtractorJwt"
          }
        }
      },
      "otoroshi.auth.Credential" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "certificate" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "privateKey" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "certId" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "useOtoroshiCertificate" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.plugins.NgRedirectionSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "code" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "to" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.WebAuthnOtoroshiAdmin" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "label" : {
            "description" : "???",
            "type" : "string"
          },
          "credentials" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            },
            "description" : "???"
          },
          "location" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.EntityLocation"
          },
          "createdAt" : {
            "description" : "???",
            "type" : "number"
          },
          "password" : {
            "description" : "???",
            "type" : "string"
          },
          "typ" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.OtoroshiAdminType"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "username" : {
            "description" : "???",
            "type" : "string"
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          },
          "handle" : {
            "description" : "???",
            "type" : "string"
          },
          "rights" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.UserRights"
          }
        }
      },
      "otoroshi.plugins.jobs.kubernetes.OtoroshiToKubernetesCertSyncJob" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.biscuit.BiscuitExtractor" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.plugins.jobs.kubernetes.OtoAnnotationConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "annotations" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            },
            "description" : "???"
          }
        }
      },
      "otoroshi.plugins.accesslog.AccessLog" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.DataCenterMatch" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "dc" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.JwtTokenLocation" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.models.HSAlgoSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "size" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "secret" : {
            "description" : "???",
            "type" : "string"
          },
          "base64" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.next.models.NgTarget" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "ip_address" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Null"
            }, {
              "type" : "string"
            } ],
            "description" : "???"
          },
          "protocol" : {
            "description" : "???",
            "type" : "string"
          },
          "predicate" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.models.TargetPredicate"
          },
          "tls_config" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.models.NgTlsConfig"
          },
          "tls" : {
            "description" : "???",
            "type" : "boolean"
          },
          "port" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "id" : {
            "description" : "???",
            "type" : "string"
          },
          "weight" : {
            "format" : "int32",
            "description" : "???",
            "type" : "integer"
          },
          "hostname" : {
            "description" : "???",
            "type" : "string"
          }
        }
      },
      "otoroshi.models.UserAgentSettings" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "enabled" : {
            "description" : "???",
            "type" : "boolean"
          }
        }
      },
      "otoroshi.plugins.useragent.UserAgentHelper" : {
        "description" : "???",
        "type" : "object",
        "properties" : { }
      },
      "otoroshi.next.plugins.NgApikeyCallsConfig" : {
        "description" : "???",
        "type" : "object",
        "properties" : {
          "extractors" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyExtractors"
          },
          "pass_with_user" : {
            "description" : "???",
            "type" : "boolean"
          },
          "wipe_backend_request" : {
            "description" : "???",
            "type" : "boolean"
          },
          "validate" : {
            "description" : "???",
            "type" : "boolean"
          },
          "routing" : {
            "description" : "???",
            "$ref" : "#/components/schemas/otoroshi.next.plugins.NgApikeyMatcher"
          }
        }
      }
    },
    "securitySchemes" : {
      "otoroshi_auth" : {
        "type" : "http",
        "scheme" : "basic"
      }
    }
  }
}